<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.KeyMap.rst">
    <section ids="module-bpy.types keymap-bpy-struct" names="keymap(bpy_struct)">
        <title>KeyMap(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'KeyMap\ (class\ in\ bpy.types)',\ u'bpy.types.KeyMap',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="KeyMap" ids="bpy.types.KeyMap" module="bpy.types" names="bpy.types.KeyMap"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">KeyMap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Input configuration, including keymaps</paragraph>
                <index entries="['single',\ u'bl_owner_id\ (bpy.types.KeyMap\ attribute)',\ u'bpy.types.KeyMap.bl_owner_id',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.bl_owner_id" ids="bpy.types.KeyMap.bl_owner_id" module="bpy.types" names="bpy.types.KeyMap.bl_owner_id"><desc_name xml:space="preserve">bl_owner_id</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Internal owner</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyMap.is_modal\ (in\ module\ bpy.types)',\ u'bpy.types.KeyMap.is_modal',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.is_modal" ids="bpy.types.KeyMap.is_modal" module="bpy.types" names="bpy.types.KeyMap.is_modal"><desc_name xml:space="preserve">is_modal</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Indicates that a keymap is used for translate modal events for an operator</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'is_user_modified\ (bpy.types.KeyMap\ attribute)',\ u'bpy.types.KeyMap.is_user_modified',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.is_user_modified" ids="bpy.types.KeyMap.is_user_modified" module="bpy.types" names="bpy.types.KeyMap.is_user_modified"><desc_name xml:space="preserve">is_user_modified</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Keymap is defined by the user</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyMap.keymap_items\ (in\ module\ bpy.types)',\ u'bpy.types.KeyMap.keymap_items',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.keymap_items" ids="bpy.types.KeyMap.keymap_items" module="bpy.types" names="bpy.types.KeyMap.keymap_items"><desc_name xml:space="preserve">keymap_items</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Items in the keymap, linking an operator to an input event</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyMapItems" refuri="bpy.types.KeyMapItems#bpy.types.KeyMapItems"><literal classes="xref py py-class">KeyMapItems</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.KeyMapItem" refuri="bpy.types.KeyMapItem#bpy.types.KeyMapItem"><literal classes="xref py py-class">KeyMapItem</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyMap.name\ (in\ module\ bpy.types)',\ u'bpy.types.KeyMap.name',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.name" ids="bpy.types.KeyMap.name" module="bpy.types" names="bpy.types.KeyMap.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Name of the key map</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyMap.region_type\ (in\ module\ bpy.types)',\ u'bpy.types.KeyMap.region_type',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.region_type" ids="bpy.types.KeyMap.region_type" module="bpy.types" names="bpy.types.KeyMap.region_type"><desc_name xml:space="preserve">region_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Optional region type keymap is associated with</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘WINDOW’, ‘HEADER’, ‘CHANNELS’, ‘TEMPORARY’, ‘UI’, ‘TOOLS’, ‘TOOL_PROPS’, ‘PREVIEW’, ‘NAVIGATION_BAR’], default ‘WINDOW’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_expanded_children\ (bpy.types.KeyMap\ attribute)',\ u'bpy.types.KeyMap.show_expanded_children',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.show_expanded_children" ids="bpy.types.KeyMap.show_expanded_children" module="bpy.types" names="bpy.types.KeyMap.show_expanded_children"><desc_name xml:space="preserve">show_expanded_children</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Children expanded in the user interface</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_expanded_items\ (bpy.types.KeyMap\ attribute)',\ u'bpy.types.KeyMap.show_expanded_items',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.show_expanded_items" ids="bpy.types.KeyMap.show_expanded_items" module="bpy.types" names="bpy.types.KeyMap.show_expanded_items"><desc_name xml:space="preserve">show_expanded_items</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Expanded in the user interface</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyMap.space_type\ (in\ module\ bpy.types)',\ u'bpy.types.KeyMap.space_type',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.space_type" ids="bpy.types.KeyMap.space_type" module="bpy.types" names="bpy.types.KeyMap.space_type"><desc_name xml:space="preserve">space_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Optional space type keymap is associated with</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>EMPTY</literal> Empty.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VIEW_3D</literal> 3D Viewport, Manipulate objects in a 3D environment.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>IMAGE_EDITOR</literal> UV/Image Editor, View and edit images and UV Maps.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NODE_EDITOR</literal> Node Editor, Editor for node-based shading and compositing tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SEQUENCE_EDITOR</literal> Video Sequencer, Video editing tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CLIP_EDITOR</literal> Movie Clip Editor, Motion tracking tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DOPESHEET_EDITOR</literal> Dope Sheet, Adjust timing of keyframes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GRAPH_EDITOR</literal> Graph Editor, Edit drivers and keyframe interpolation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NLA_EDITOR</literal> Nonlinear Animation, Combine and layer Actions.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TEXT_EDITOR</literal> Text Editor, Edit scripts and in-file documentation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CONSOLE</literal> Python Console, Interactive programmatic console for advanced editing and script development.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INFO</literal> Info, Main menu bar and list of error messages (drag down to expand and display).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TOPBAR</literal> Top Bar, Global bar at the top of the screen for global per-window settings.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>STATUSBAR</literal> Status Bar, Global bar at the bottom of the screen for general status information.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OUTLINER</literal> Outliner, Overview of scene graph and all available data-blocks.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PROPERTIES</literal> Properties, Edit properties of active object and related data-blocks.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FILE_BROWSER</literal> File Browser, Browse for files and assets.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>USER_PREFERENCES</literal> User Preferences, Edit persistent configuration settings.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘EMPTY’, ‘VIEW_3D’, ‘IMAGE_EDITOR’, ‘NODE_EDITOR’, ‘SEQUENCE_EDITOR’, ‘CLIP_EDITOR’, ‘DOPESHEET_EDITOR’, ‘GRAPH_EDITOR’, ‘NLA_EDITOR’, ‘TEXT_EDITOR’, ‘CONSOLE’, ‘INFO’, ‘TOPBAR’, ‘STATUSBAR’, ‘OUTLINER’, ‘PROPERTIES’, ‘FILE_BROWSER’, ‘USER_PREFERENCES’], default ‘EMPTY’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'active()\ (bpy.types.KeyMap\ method)',\ u'bpy.types.KeyMap.active',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.active" ids="bpy.types.KeyMap.active" module="bpy.types" names="bpy.types.KeyMap.active"><desc_name xml:space="preserve">active</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>active</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Key Map, Active key map</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" refid="bpy.types.KeyMap" reftitle="bpy.types.KeyMap"><literal classes="xref py py-class">KeyMap</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'restore_to_default()\ (bpy.types.KeyMap\ method)',\ u'bpy.types.KeyMap.restore_to_default',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.restore_to_default" ids="bpy.types.KeyMap.restore_to_default" module="bpy.types" names="bpy.types.KeyMap.restore_to_default"><desc_name xml:space="preserve">restore_to_default</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>restore_to_default</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'restore_item_to_default()\ (bpy.types.KeyMap\ method)',\ u'bpy.types.KeyMap.restore_item_to_default',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.restore_item_to_default" ids="bpy.types.KeyMap.restore_item_to_default" module="bpy.types" names="bpy.types.KeyMap.restore_item_to_default"><desc_name xml:space="preserve">restore_item_to_default</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">item</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>restore_item_to_default</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">item</literal_strong> (<reference internal="True" reftitle="bpy.types.KeyMapItem" refuri="bpy.types.KeyMapItem#bpy.types.KeyMapItem"><literal classes="xref py py-class">KeyMapItem</literal></reference>, (never None)) – Item</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.KeyMap\ class\ method)',\ u'bpy.types.KeyMap.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.bl_rna_get_subclass" ids="bpy.types.KeyMap.bl_rna_get_subclass" module="bpy.types" names="bpy.types.KeyMap.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.KeyMap\ class\ method)',\ u'bpy.types.KeyMap.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="KeyMap" first="False" fullname="KeyMap.bl_rna_get_subclass_py" ids="bpy.types.KeyMap.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.KeyMap.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.setup_keymap" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.setup_keymap"><literal classes="xref py py-class">GizmoGroup.setup_keymap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyConfig.keymaps" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig.keymaps"><literal classes="xref py py-class">KeyConfig.keymaps</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyConfigurations.find_item_from_operator" refuri="bpy.types.KeyConfigurations#bpy.types.KeyConfigurations.find_item_from_operator"><literal classes="xref py py-class">KeyConfigurations.find_item_from_operator</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.KeyMap.active" reftitle="bpy.types.KeyMap.active"><literal classes="xref py py-class">KeyMap.active</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyMaps.find" refuri="bpy.types.KeyMaps#bpy.types.KeyMaps.find"><literal classes="xref py py-class">KeyMaps.find</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyMaps.find_modal" refuri="bpy.types.KeyMaps#bpy.types.KeyMaps.find_modal"><literal classes="xref py py-class">KeyMaps.find_modal</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyMaps.new" refuri="bpy.types.KeyMaps#bpy.types.KeyMaps.new"><literal classes="xref py py-class">KeyMaps.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyMaps.remove" refuri="bpy.types.KeyMaps#bpy.types.KeyMaps.remove"><literal classes="xref py py-class">KeyMaps.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.WindowManager.popover_end__internal" refuri="bpy.types.WindowManager#bpy.types.WindowManager.popover_end__internal"><literal classes="xref py py-class">WindowManager.popover_end__internal</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
