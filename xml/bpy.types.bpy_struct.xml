<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.bpy_struct.rst">
    <section ids="module-bpy.types bpy-struct" names="bpy_struct">
        <title>bpy_struct</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>subclasses â€”
            <reference internal="True" reftitle="bpy.types.ActionFCurves" refuri="bpy.types.ActionFCurves#bpy.types.ActionFCurves"><literal classes="xref py py-class">ActionFCurves</literal></reference>, <reference internal="True" reftitle="bpy.types.ActionGroup" refuri="bpy.types.ActionGroup#bpy.types.ActionGroup"><literal classes="xref py py-class">ActionGroup</literal></reference>, <reference internal="True" reftitle="bpy.types.ActionGroups" refuri="bpy.types.ActionGroups#bpy.types.ActionGroups"><literal classes="xref py py-class">ActionGroups</literal></reference>, <reference internal="True" reftitle="bpy.types.ActionPoseMarkers" refuri="bpy.types.ActionPoseMarkers#bpy.types.ActionPoseMarkers"><literal classes="xref py py-class">ActionPoseMarkers</literal></reference>, <reference internal="True" reftitle="bpy.types.Addon" refuri="bpy.types.Addon#bpy.types.Addon"><literal classes="xref py py-class">Addon</literal></reference>, <reference internal="True" reftitle="bpy.types.AddonPreferences" refuri="bpy.types.AddonPreferences#bpy.types.AddonPreferences"><literal classes="xref py py-class">AddonPreferences</literal></reference>, <reference internal="True" reftitle="bpy.types.Addons" refuri="bpy.types.Addons#bpy.types.Addons"><literal classes="xref py py-class">Addons</literal></reference>, <reference internal="True" reftitle="bpy.types.AlembicObjectPath" refuri="bpy.types.AlembicObjectPath#bpy.types.AlembicObjectPath"><literal classes="xref py py-class">AlembicObjectPath</literal></reference>, <reference internal="True" reftitle="bpy.types.AlembicObjectPaths" refuri="bpy.types.AlembicObjectPaths#bpy.types.AlembicObjectPaths"><literal classes="xref py py-class">AlembicObjectPaths</literal></reference>, <reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, <reference internal="True" reftitle="bpy.types.AnimDataDrivers" refuri="bpy.types.AnimDataDrivers#bpy.types.AnimDataDrivers"><literal classes="xref py py-class">AnimDataDrivers</literal></reference>, <reference internal="True" reftitle="bpy.types.AnimViz" refuri="bpy.types.AnimViz#bpy.types.AnimViz"><literal classes="xref py py-class">AnimViz</literal></reference>, <reference internal="True" reftitle="bpy.types.AnimVizMotionPaths" refuri="bpy.types.AnimVizMotionPaths#bpy.types.AnimVizMotionPaths"><literal classes="xref py py-class">AnimVizMotionPaths</literal></reference>, <reference internal="True" reftitle="bpy.types.AnimVizOnionSkinning" refuri="bpy.types.AnimVizOnionSkinning#bpy.types.AnimVizOnionSkinning"><literal classes="xref py py-class">AnimVizOnionSkinning</literal></reference>, <reference internal="True" reftitle="bpy.types.AnyType" refuri="bpy.types.AnyType#bpy.types.AnyType"><literal classes="xref py py-class">AnyType</literal></reference>, <reference internal="True" reftitle="bpy.types.Area" refuri="bpy.types.Area#bpy.types.Area"><literal classes="xref py py-class">Area</literal></reference>, <reference internal="True" reftitle="bpy.types.AreaSpaces" refuri="bpy.types.AreaSpaces#bpy.types.AreaSpaces"><literal classes="xref py py-class">AreaSpaces</literal></reference>, <reference internal="True" reftitle="bpy.types.ArmatureBones" refuri="bpy.types.ArmatureBones#bpy.types.ArmatureBones"><literal classes="xref py py-class">ArmatureBones</literal></reference>, <reference internal="True" reftitle="bpy.types.ArmatureConstraintTargets" refuri="bpy.types.ArmatureConstraintTargets#bpy.types.ArmatureConstraintTargets"><literal classes="xref py py-class">ArmatureConstraintTargets</literal></reference>, <reference internal="True" reftitle="bpy.types.ArmatureEditBones" refuri="bpy.types.ArmatureEditBones#bpy.types.ArmatureEditBones"><literal classes="xref py py-class">ArmatureEditBones</literal></reference>, <reference internal="True" reftitle="bpy.types.BakePixel" refuri="bpy.types.BakePixel#bpy.types.BakePixel"><literal classes="xref py py-class">BakePixel</literal></reference>, <reference internal="True" reftitle="bpy.types.BakeSettings" refuri="bpy.types.BakeSettings#bpy.types.BakeSettings"><literal classes="xref py py-class">BakeSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.BezierSplinePoint" refuri="bpy.types.BezierSplinePoint#bpy.types.BezierSplinePoint"><literal classes="xref py py-class">BezierSplinePoint</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendData" refuri="bpy.types.BlendData#bpy.types.BlendData"><literal classes="xref py py-class">BlendData</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataActions" refuri="bpy.types.BlendDataActions#bpy.types.BlendDataActions"><literal classes="xref py py-class">BlendDataActions</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataArmatures" refuri="bpy.types.BlendDataArmatures#bpy.types.BlendDataArmatures"><literal classes="xref py py-class">BlendDataArmatures</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataBrushes" refuri="bpy.types.BlendDataBrushes#bpy.types.BlendDataBrushes"><literal classes="xref py py-class">BlendDataBrushes</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataCacheFiles" refuri="bpy.types.BlendDataCacheFiles#bpy.types.BlendDataCacheFiles"><literal classes="xref py py-class">BlendDataCacheFiles</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataCameras" refuri="bpy.types.BlendDataCameras#bpy.types.BlendDataCameras"><literal classes="xref py py-class">BlendDataCameras</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataCollections" refuri="bpy.types.BlendDataCollections#bpy.types.BlendDataCollections"><literal classes="xref py py-class">BlendDataCollections</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataCurves" refuri="bpy.types.BlendDataCurves#bpy.types.BlendDataCurves"><literal classes="xref py py-class">BlendDataCurves</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataFonts" refuri="bpy.types.BlendDataFonts#bpy.types.BlendDataFonts"><literal classes="xref py py-class">BlendDataFonts</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataGreasePencils" refuri="bpy.types.BlendDataGreasePencils#bpy.types.BlendDataGreasePencils"><literal classes="xref py py-class">BlendDataGreasePencils</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataImages" refuri="bpy.types.BlendDataImages#bpy.types.BlendDataImages"><literal classes="xref py py-class">BlendDataImages</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataLattices" refuri="bpy.types.BlendDataLattices#bpy.types.BlendDataLattices"><literal classes="xref py py-class">BlendDataLattices</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataLibraries" refuri="bpy.types.BlendDataLibraries#bpy.types.BlendDataLibraries"><literal classes="xref py py-class">BlendDataLibraries</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataLights" refuri="bpy.types.BlendDataLights#bpy.types.BlendDataLights"><literal classes="xref py py-class">BlendDataLights</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataLineStyles" refuri="bpy.types.BlendDataLineStyles#bpy.types.BlendDataLineStyles"><literal classes="xref py py-class">BlendDataLineStyles</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataMasks" refuri="bpy.types.BlendDataMasks#bpy.types.BlendDataMasks"><literal classes="xref py py-class">BlendDataMasks</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataMaterials" refuri="bpy.types.BlendDataMaterials#bpy.types.BlendDataMaterials"><literal classes="xref py py-class">BlendDataMaterials</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataMeshes" refuri="bpy.types.BlendDataMeshes#bpy.types.BlendDataMeshes"><literal classes="xref py py-class">BlendDataMeshes</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataMetaBalls" refuri="bpy.types.BlendDataMetaBalls#bpy.types.BlendDataMetaBalls"><literal classes="xref py py-class">BlendDataMetaBalls</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataMovieClips" refuri="bpy.types.BlendDataMovieClips#bpy.types.BlendDataMovieClips"><literal classes="xref py py-class">BlendDataMovieClips</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataNodeTrees" refuri="bpy.types.BlendDataNodeTrees#bpy.types.BlendDataNodeTrees"><literal classes="xref py py-class">BlendDataNodeTrees</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataObjects" refuri="bpy.types.BlendDataObjects#bpy.types.BlendDataObjects"><literal classes="xref py py-class">BlendDataObjects</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataPaintCurves" refuri="bpy.types.BlendDataPaintCurves#bpy.types.BlendDataPaintCurves"><literal classes="xref py py-class">BlendDataPaintCurves</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataPalettes" refuri="bpy.types.BlendDataPalettes#bpy.types.BlendDataPalettes"><literal classes="xref py py-class">BlendDataPalettes</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataParticles" refuri="bpy.types.BlendDataParticles#bpy.types.BlendDataParticles"><literal classes="xref py py-class">BlendDataParticles</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataProbes" refuri="bpy.types.BlendDataProbes#bpy.types.BlendDataProbes"><literal classes="xref py py-class">BlendDataProbes</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataScenes" refuri="bpy.types.BlendDataScenes#bpy.types.BlendDataScenes"><literal classes="xref py py-class">BlendDataScenes</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataScreens" refuri="bpy.types.BlendDataScreens#bpy.types.BlendDataScreens"><literal classes="xref py py-class">BlendDataScreens</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataSounds" refuri="bpy.types.BlendDataSounds#bpy.types.BlendDataSounds"><literal classes="xref py py-class">BlendDataSounds</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataSpeakers" refuri="bpy.types.BlendDataSpeakers#bpy.types.BlendDataSpeakers"><literal classes="xref py py-class">BlendDataSpeakers</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataTexts" refuri="bpy.types.BlendDataTexts#bpy.types.BlendDataTexts"><literal classes="xref py py-class">BlendDataTexts</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataTextures" refuri="bpy.types.BlendDataTextures#bpy.types.BlendDataTextures"><literal classes="xref py py-class">BlendDataTextures</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataWindowManagers" refuri="bpy.types.BlendDataWindowManagers#bpy.types.BlendDataWindowManagers"><literal classes="xref py py-class">BlendDataWindowManagers</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataWorkSpaces" refuri="bpy.types.BlendDataWorkSpaces#bpy.types.BlendDataWorkSpaces"><literal classes="xref py py-class">BlendDataWorkSpaces</literal></reference>, <reference internal="True" reftitle="bpy.types.BlendDataWorlds" refuri="bpy.types.BlendDataWorlds#bpy.types.BlendDataWorlds"><literal classes="xref py py-class">BlendDataWorlds</literal></reference>, <reference internal="True" reftitle="bpy.types.BlenderRNA" refuri="bpy.types.BlenderRNA#bpy.types.BlenderRNA"><literal classes="xref py py-class">BlenderRNA</literal></reference>, <reference internal="True" reftitle="bpy.types.BoidRule" refuri="bpy.types.BoidRule#bpy.types.BoidRule"><literal classes="xref py py-class">BoidRule</literal></reference>, <reference internal="True" reftitle="bpy.types.BoidSettings" refuri="bpy.types.BoidSettings#bpy.types.BoidSettings"><literal classes="xref py py-class">BoidSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.BoidState" refuri="bpy.types.BoidState#bpy.types.BoidState"><literal classes="xref py py-class">BoidState</literal></reference>, <reference internal="True" reftitle="bpy.types.Bone" refuri="bpy.types.Bone#bpy.types.Bone"><literal classes="xref py py-class">Bone</literal></reference>, <reference internal="True" reftitle="bpy.types.BoneGroup" refuri="bpy.types.BoneGroup#bpy.types.BoneGroup"><literal classes="xref py py-class">BoneGroup</literal></reference>, <reference internal="True" reftitle="bpy.types.BoneGroups" refuri="bpy.types.BoneGroups#bpy.types.BoneGroups"><literal classes="xref py py-class">BoneGroups</literal></reference>, <reference internal="True" reftitle="bpy.types.BrushCapabilities" refuri="bpy.types.BrushCapabilities#bpy.types.BrushCapabilities"><literal classes="xref py py-class">BrushCapabilities</literal></reference>, <reference internal="True" reftitle="bpy.types.BrushGpencilSettings" refuri="bpy.types.BrushGpencilSettings#bpy.types.BrushGpencilSettings"><literal classes="xref py py-class">BrushGpencilSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CameraBackgroundImage" refuri="bpy.types.CameraBackgroundImage#bpy.types.CameraBackgroundImage"><literal classes="xref py py-class">CameraBackgroundImage</literal></reference>, <reference internal="True" reftitle="bpy.types.CameraBackgroundImages" refuri="bpy.types.CameraBackgroundImages#bpy.types.CameraBackgroundImages"><literal classes="xref py py-class">CameraBackgroundImages</literal></reference>, <reference internal="True" reftitle="bpy.types.CameraStereoData" refuri="bpy.types.CameraStereoData#bpy.types.CameraStereoData"><literal classes="xref py py-class">CameraStereoData</literal></reference>, <reference internal="True" reftitle="bpy.types.ChannelDriverVariables" refuri="bpy.types.ChannelDriverVariables#bpy.types.ChannelDriverVariables"><literal classes="xref py py-class">ChannelDriverVariables</literal></reference>, <reference internal="True" reftitle="bpy.types.ChildParticle" refuri="bpy.types.ChildParticle#bpy.types.ChildParticle"><literal classes="xref py py-class">ChildParticle</literal></reference>, <reference internal="True" reftitle="bpy.types.ClothCollisionSettings" refuri="bpy.types.ClothCollisionSettings#bpy.types.ClothCollisionSettings"><literal classes="xref py py-class">ClothCollisionSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ClothSettings" refuri="bpy.types.ClothSettings#bpy.types.ClothSettings"><literal classes="xref py py-class">ClothSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ClothSolverResult" refuri="bpy.types.ClothSolverResult#bpy.types.ClothSolverResult"><literal classes="xref py py-class">ClothSolverResult</literal></reference>, <reference internal="True" reftitle="bpy.types.CollectionChildren" refuri="bpy.types.CollectionChildren#bpy.types.CollectionChildren"><literal classes="xref py py-class">CollectionChildren</literal></reference>, <reference internal="True" reftitle="bpy.types.CollectionObjects" refuri="bpy.types.CollectionObjects#bpy.types.CollectionObjects"><literal classes="xref py py-class">CollectionObjects</literal></reference>, <reference internal="True" reftitle="bpy.types.CollisionSettings" refuri="bpy.types.CollisionSettings#bpy.types.CollisionSettings"><literal classes="xref py py-class">CollisionSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorManagedDisplaySettings" refuri="bpy.types.ColorManagedDisplaySettings#bpy.types.ColorManagedDisplaySettings"><literal classes="xref py py-class">ColorManagedDisplaySettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorManagedInputColorspaceSettings" refuri="bpy.types.ColorManagedInputColorspaceSettings#bpy.types.ColorManagedInputColorspaceSettings"><literal classes="xref py py-class">ColorManagedInputColorspaceSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorManagedSequencerColorspaceSettings" refuri="bpy.types.ColorManagedSequencerColorspaceSettings#bpy.types.ColorManagedSequencerColorspaceSettings"><literal classes="xref py py-class">ColorManagedSequencerColorspaceSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorManagedViewSettings" refuri="bpy.types.ColorManagedViewSettings#bpy.types.ColorManagedViewSettings"><literal classes="xref py py-class">ColorManagedViewSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorMapping" refuri="bpy.types.ColorMapping#bpy.types.ColorMapping"><literal classes="xref py py-class">ColorMapping</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorRamp" refuri="bpy.types.ColorRamp#bpy.types.ColorRamp"><literal classes="xref py py-class">ColorRamp</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorRampElement" refuri="bpy.types.ColorRampElement#bpy.types.ColorRampElement"><literal classes="xref py py-class">ColorRampElement</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorRampElements" refuri="bpy.types.ColorRampElements#bpy.types.ColorRampElements"><literal classes="xref py py-class">ColorRampElements</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeOutputFileFileSlots" refuri="bpy.types.CompositorNodeOutputFileFileSlots#bpy.types.CompositorNodeOutputFileFileSlots"><literal classes="xref py py-class">CompositorNodeOutputFileFileSlots</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeOutputFileLayerSlots" refuri="bpy.types.CompositorNodeOutputFileLayerSlots#bpy.types.CompositorNodeOutputFileLayerSlots"><literal classes="xref py py-class">CompositorNodeOutputFileLayerSlots</literal></reference>, <reference internal="True" reftitle="bpy.types.ConsoleLine" refuri="bpy.types.ConsoleLine#bpy.types.ConsoleLine"><literal classes="xref py py-class">ConsoleLine</literal></reference>, <reference internal="True" reftitle="bpy.types.Constraint" refuri="bpy.types.Constraint#bpy.types.Constraint"><literal classes="xref py py-class">Constraint</literal></reference>, <reference internal="True" reftitle="bpy.types.ConstraintTarget" refuri="bpy.types.ConstraintTarget#bpy.types.ConstraintTarget"><literal classes="xref py py-class">ConstraintTarget</literal></reference>, <reference internal="True" reftitle="bpy.types.ConstraintTargetBone" refuri="bpy.types.ConstraintTargetBone#bpy.types.ConstraintTargetBone"><literal classes="xref py py-class">ConstraintTargetBone</literal></reference>, <reference internal="True" reftitle="bpy.types.Context" refuri="bpy.types.Context#bpy.types.Context"><literal classes="xref py py-class">Context</literal></reference>, <reference internal="True" reftitle="bpy.types.CurveMap" refuri="bpy.types.CurveMap#bpy.types.CurveMap"><literal classes="xref py py-class">CurveMap</literal></reference>, <reference internal="True" reftitle="bpy.types.CurveMapPoint" refuri="bpy.types.CurveMapPoint#bpy.types.CurveMapPoint"><literal classes="xref py py-class">CurveMapPoint</literal></reference>, <reference internal="True" reftitle="bpy.types.CurveMapPoints" refuri="bpy.types.CurveMapPoints#bpy.types.CurveMapPoints"><literal classes="xref py py-class">CurveMapPoints</literal></reference>, <reference internal="True" reftitle="bpy.types.CurveMapping" refuri="bpy.types.CurveMapping#bpy.types.CurveMapping"><literal classes="xref py py-class">CurveMapping</literal></reference>, <reference internal="True" reftitle="bpy.types.CurvePaintSettings" refuri="bpy.types.CurvePaintSettings#bpy.types.CurvePaintSettings"><literal classes="xref py py-class">CurvePaintSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CurveSplines" refuri="bpy.types.CurveSplines#bpy.types.CurveSplines"><literal classes="xref py py-class">CurveSplines</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesCameraSettings" refuri="bpy.types.CyclesCameraSettings#bpy.types.CyclesCameraSettings"><literal classes="xref py py-class">CyclesCameraSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesCurveRenderSettings" refuri="bpy.types.CyclesCurveRenderSettings#bpy.types.CyclesCurveRenderSettings"><literal classes="xref py py-class">CyclesCurveRenderSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesLightSettings" refuri="bpy.types.CyclesLightSettings#bpy.types.CyclesLightSettings"><literal classes="xref py py-class">CyclesLightSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesMaterialSettings" refuri="bpy.types.CyclesMaterialSettings#bpy.types.CyclesMaterialSettings"><literal classes="xref py py-class">CyclesMaterialSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesMeshSettings" refuri="bpy.types.CyclesMeshSettings#bpy.types.CyclesMeshSettings"><literal classes="xref py py-class">CyclesMeshSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesObjectSettings" refuri="bpy.types.CyclesObjectSettings#bpy.types.CyclesObjectSettings"><literal classes="xref py py-class">CyclesObjectSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesRenderLayerSettings" refuri="bpy.types.CyclesRenderLayerSettings#bpy.types.CyclesRenderLayerSettings"><literal classes="xref py py-class">CyclesRenderLayerSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesRenderSettings" refuri="bpy.types.CyclesRenderSettings#bpy.types.CyclesRenderSettings"><literal classes="xref py py-class">CyclesRenderSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesVisibilitySettings" refuri="bpy.types.CyclesVisibilitySettings#bpy.types.CyclesVisibilitySettings"><literal classes="xref py py-class">CyclesVisibilitySettings</literal></reference>, <reference internal="True" reftitle="bpy.types.CyclesWorldSettings" refuri="bpy.types.CyclesWorldSettings#bpy.types.CyclesWorldSettings"><literal classes="xref py py-class">CyclesWorldSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.Depsgraph" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph"><literal classes="xref py py-class">Depsgraph</literal></reference>, <reference internal="True" reftitle="bpy.types.DepsgraphObjectInstance" refuri="bpy.types.DepsgraphObjectInstance#bpy.types.DepsgraphObjectInstance"><literal classes="xref py py-class">DepsgraphObjectInstance</literal></reference>, <reference internal="True" reftitle="bpy.types.DepsgraphUpdate" refuri="bpy.types.DepsgraphUpdate#bpy.types.DepsgraphUpdate"><literal classes="xref py py-class">DepsgraphUpdate</literal></reference>, <reference internal="True" reftitle="bpy.types.DisplaySafeAreas" refuri="bpy.types.DisplaySafeAreas#bpy.types.DisplaySafeAreas"><literal classes="xref py py-class">DisplaySafeAreas</literal></reference>, <reference internal="True" reftitle="bpy.types.DopeSheet" refuri="bpy.types.DopeSheet#bpy.types.DopeSheet"><literal classes="xref py py-class">DopeSheet</literal></reference>, <reference internal="True" reftitle="bpy.types.Driver" refuri="bpy.types.Driver#bpy.types.Driver"><literal classes="xref py py-class">Driver</literal></reference>, <reference internal="True" reftitle="bpy.types.DriverTarget" refuri="bpy.types.DriverTarget#bpy.types.DriverTarget"><literal classes="xref py py-class">DriverTarget</literal></reference>, <reference internal="True" reftitle="bpy.types.DriverVariable" refuri="bpy.types.DriverVariable#bpy.types.DriverVariable"><literal classes="xref py py-class">DriverVariable</literal></reference>, <reference internal="True" reftitle="bpy.types.DynamicPaintBrushSettings" refuri="bpy.types.DynamicPaintBrushSettings#bpy.types.DynamicPaintBrushSettings"><literal classes="xref py py-class">DynamicPaintBrushSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.DynamicPaintCanvasSettings" refuri="bpy.types.DynamicPaintCanvasSettings#bpy.types.DynamicPaintCanvasSettings"><literal classes="xref py py-class">DynamicPaintCanvasSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.DynamicPaintSurface" refuri="bpy.types.DynamicPaintSurface#bpy.types.DynamicPaintSurface"><literal classes="xref py py-class">DynamicPaintSurface</literal></reference>, <reference internal="True" reftitle="bpy.types.DynamicPaintSurfaces" refuri="bpy.types.DynamicPaintSurfaces#bpy.types.DynamicPaintSurfaces"><literal classes="xref py py-class">DynamicPaintSurfaces</literal></reference>, <reference internal="True" reftitle="bpy.types.EditBone" refuri="bpy.types.EditBone#bpy.types.EditBone"><literal classes="xref py py-class">EditBone</literal></reference>, <reference internal="True" reftitle="bpy.types.EffectorWeights" refuri="bpy.types.EffectorWeights#bpy.types.EffectorWeights"><literal classes="xref py py-class">EffectorWeights</literal></reference>, <reference internal="True" reftitle="bpy.types.EnumPropertyItem" refuri="bpy.types.EnumPropertyItem#bpy.types.EnumPropertyItem"><literal classes="xref py py-class">EnumPropertyItem</literal></reference>, <reference internal="True" reftitle="bpy.types.Event" refuri="bpy.types.Event#bpy.types.Event"><literal classes="xref py py-class">Event</literal></reference>, <reference internal="True" reftitle="bpy.types.FCurve" refuri="bpy.types.FCurve#bpy.types.FCurve"><literal classes="xref py py-class">FCurve</literal></reference>, <reference internal="True" reftitle="bpy.types.FCurveKeyframePoints" refuri="bpy.types.FCurveKeyframePoints#bpy.types.FCurveKeyframePoints"><literal classes="xref py py-class">FCurveKeyframePoints</literal></reference>, <reference internal="True" reftitle="bpy.types.FCurveModifiers" refuri="bpy.types.FCurveModifiers#bpy.types.FCurveModifiers"><literal classes="xref py py-class">FCurveModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.FCurveSample" refuri="bpy.types.FCurveSample#bpy.types.FCurveSample"><literal classes="xref py py-class">FCurveSample</literal></reference>, <reference internal="True" reftitle="bpy.types.FFmpegSettings" refuri="bpy.types.FFmpegSettings#bpy.types.FFmpegSettings"><literal classes="xref py py-class">FFmpegSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.FModifier" refuri="bpy.types.FModifier#bpy.types.FModifier"><literal classes="xref py py-class">FModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.FModifierEnvelopeControlPoint" refuri="bpy.types.FModifierEnvelopeControlPoint#bpy.types.FModifierEnvelopeControlPoint"><literal classes="xref py py-class">FModifierEnvelopeControlPoint</literal></reference>, <reference internal="True" reftitle="bpy.types.FModifierEnvelopeControlPoints" refuri="bpy.types.FModifierEnvelopeControlPoints#bpy.types.FModifierEnvelopeControlPoints"><literal classes="xref py py-class">FModifierEnvelopeControlPoints</literal></reference>, <reference internal="True" reftitle="bpy.types.FaceMap" refuri="bpy.types.FaceMap#bpy.types.FaceMap"><literal classes="xref py py-class">FaceMap</literal></reference>, <reference internal="True" reftitle="bpy.types.FaceMaps" refuri="bpy.types.FaceMaps#bpy.types.FaceMaps"><literal classes="xref py py-class">FaceMaps</literal></reference>, <reference internal="True" reftitle="bpy.types.FieldSettings" refuri="bpy.types.FieldSettings#bpy.types.FieldSettings"><literal classes="xref py py-class">FieldSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.FileBrowserFSMenuEntry" refuri="bpy.types.FileBrowserFSMenuEntry#bpy.types.FileBrowserFSMenuEntry"><literal classes="xref py py-class">FileBrowserFSMenuEntry</literal></reference>, <reference internal="True" reftitle="bpy.types.FileSelectParams" refuri="bpy.types.FileSelectParams#bpy.types.FileSelectParams"><literal classes="xref py py-class">FileSelectParams</literal></reference>, <reference internal="True" reftitle="bpy.types.FluidSettings" refuri="bpy.types.FluidSettings#bpy.types.FluidSettings"><literal classes="xref py py-class">FluidSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.FluidVertexVelocity" refuri="bpy.types.FluidVertexVelocity#bpy.types.FluidVertexVelocity"><literal classes="xref py py-class">FluidVertexVelocity</literal></reference>, <reference internal="True" reftitle="bpy.types.FreestyleLineSet" refuri="bpy.types.FreestyleLineSet#bpy.types.FreestyleLineSet"><literal classes="xref py py-class">FreestyleLineSet</literal></reference>, <reference internal="True" reftitle="bpy.types.FreestyleModuleSettings" refuri="bpy.types.FreestyleModuleSettings#bpy.types.FreestyleModuleSettings"><literal classes="xref py py-class">FreestyleModuleSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.FreestyleModules" refuri="bpy.types.FreestyleModules#bpy.types.FreestyleModules"><literal classes="xref py py-class">FreestyleModules</literal></reference>, <reference internal="True" reftitle="bpy.types.FreestyleSettings" refuri="bpy.types.FreestyleSettings#bpy.types.FreestyleSettings"><literal classes="xref py py-class">FreestyleSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.Function" refuri="bpy.types.Function#bpy.types.Function"><literal classes="xref py py-class">Function</literal></reference>, <reference internal="True" reftitle="bpy.types.GPUDOFSettings" refuri="bpy.types.GPUDOFSettings#bpy.types.GPUDOFSettings"><literal classes="xref py py-class">GPUDOFSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.GPUFXSettings" refuri="bpy.types.GPUFXSettings#bpy.types.GPUFXSettings"><literal classes="xref py py-class">GPUFXSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.GPUSSAOSettings" refuri="bpy.types.GPUSSAOSettings#bpy.types.GPUSSAOSettings"><literal classes="xref py py-class">GPUSSAOSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilFrame" refuri="bpy.types.GPencilFrame#bpy.types.GPencilFrame"><literal classes="xref py py-class">GPencilFrame</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilFrames" refuri="bpy.types.GPencilFrames#bpy.types.GPencilFrames"><literal classes="xref py py-class">GPencilFrames</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilInterpolateSettings" refuri="bpy.types.GPencilInterpolateSettings#bpy.types.GPencilInterpolateSettings"><literal classes="xref py py-class">GPencilInterpolateSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilLayer" refuri="bpy.types.GPencilLayer#bpy.types.GPencilLayer"><literal classes="xref py py-class">GPencilLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilSculptBrush" refuri="bpy.types.GPencilSculptBrush#bpy.types.GPencilSculptBrush"><literal classes="xref py py-class">GPencilSculptBrush</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilSculptSettings" refuri="bpy.types.GPencilSculptSettings#bpy.types.GPencilSculptSettings"><literal classes="xref py py-class">GPencilSculptSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilStroke" refuri="bpy.types.GPencilStroke#bpy.types.GPencilStroke"><literal classes="xref py py-class">GPencilStroke</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilStrokePoint" refuri="bpy.types.GPencilStrokePoint#bpy.types.GPencilStrokePoint"><literal classes="xref py py-class">GPencilStrokePoint</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilStrokePoints" refuri="bpy.types.GPencilStrokePoints#bpy.types.GPencilStrokePoints"><literal classes="xref py py-class">GPencilStrokePoints</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilStrokes" refuri="bpy.types.GPencilStrokes#bpy.types.GPencilStrokes"><literal classes="xref py py-class">GPencilStrokes</literal></reference>, <reference internal="True" reftitle="bpy.types.GPencilTriangle" refuri="bpy.types.GPencilTriangle#bpy.types.GPencilTriangle"><literal classes="xref py py-class">GPencilTriangle</literal></reference>, <reference internal="True" reftitle="bpy.types.Gizmo" refuri="bpy.types.Gizmo#bpy.types.Gizmo"><literal classes="xref py py-class">Gizmo</literal></reference>, <reference internal="True" reftitle="bpy.types.GizmoGroup" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup"><literal classes="xref py py-class">GizmoGroup</literal></reference>, <reference internal="True" reftitle="bpy.types.GizmoGroupProperties" refuri="bpy.types.GizmoGroupProperties#bpy.types.GizmoGroupProperties"><literal classes="xref py py-class">GizmoGroupProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.GizmoProperties" refuri="bpy.types.GizmoProperties#bpy.types.GizmoProperties"><literal classes="xref py py-class">GizmoProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.Gizmos" refuri="bpy.types.Gizmos#bpy.types.Gizmos"><literal classes="xref py py-class">Gizmos</literal></reference>, <reference internal="True" reftitle="bpy.types.GpencilModifier" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier"><literal classes="xref py py-class">GpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.GpencilVertexGroupElement" refuri="bpy.types.GpencilVertexGroupElement#bpy.types.GpencilVertexGroupElement"><literal classes="xref py py-class">GpencilVertexGroupElement</literal></reference>, <reference internal="True" reftitle="bpy.types.GreasePencilGrid" refuri="bpy.types.GreasePencilGrid#bpy.types.GreasePencilGrid"><literal classes="xref py py-class">GreasePencilGrid</literal></reference>, <reference internal="True" reftitle="bpy.types.GreasePencilLayers" refuri="bpy.types.GreasePencilLayers#bpy.types.GreasePencilLayers"><literal classes="xref py py-class">GreasePencilLayers</literal></reference>, <reference internal="True" reftitle="bpy.types.Header" refuri="bpy.types.Header#bpy.types.Header"><literal classes="xref py py-class">Header</literal></reference>, <reference internal="True" reftitle="bpy.types.Histogram" refuri="bpy.types.Histogram#bpy.types.Histogram"><literal classes="xref py py-class">Histogram</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>, <reference internal="True" reftitle="bpy.types.IDMaterials" refuri="bpy.types.IDMaterials#bpy.types.IDMaterials"><literal classes="xref py py-class">IDMaterials</literal></reference>, <reference internal="True" reftitle="bpy.types.IDOverrideStatic" refuri="bpy.types.IDOverrideStatic#bpy.types.IDOverrideStatic"><literal classes="xref py py-class">IDOverrideStatic</literal></reference>, <reference internal="True" reftitle="bpy.types.IDOverrideStaticProperty" refuri="bpy.types.IDOverrideStaticProperty#bpy.types.IDOverrideStaticProperty"><literal classes="xref py py-class">IDOverrideStaticProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.IDOverrideStaticPropertyOperation" refuri="bpy.types.IDOverrideStaticPropertyOperation#bpy.types.IDOverrideStaticPropertyOperation"><literal classes="xref py py-class">IDOverrideStaticPropertyOperation</literal></reference>, <reference internal="True" reftitle="bpy.types.IDPropertyWrapPtr" refuri="bpy.types.IDPropertyWrapPtr#bpy.types.IDPropertyWrapPtr"><literal classes="xref py py-class">IDPropertyWrapPtr</literal></reference>, <reference internal="True" reftitle="bpy.types.IKParam" refuri="bpy.types.IKParam#bpy.types.IKParam"><literal classes="xref py py-class">IKParam</literal></reference>, <reference internal="True" reftitle="bpy.types.ImageFormatSettings" refuri="bpy.types.ImageFormatSettings#bpy.types.ImageFormatSettings"><literal classes="xref py py-class">ImageFormatSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.ImagePackedFile" refuri="bpy.types.ImagePackedFile#bpy.types.ImagePackedFile"><literal classes="xref py py-class">ImagePackedFile</literal></reference>, <reference internal="True" reftitle="bpy.types.ImagePreview" refuri="bpy.types.ImagePreview#bpy.types.ImagePreview"><literal classes="xref py py-class">ImagePreview</literal></reference>, <reference internal="True" reftitle="bpy.types.ImageUser" refuri="bpy.types.ImageUser#bpy.types.ImageUser"><literal classes="xref py py-class">ImageUser</literal></reference>, <reference internal="True" reftitle="bpy.types.ImapaintToolCapabilities" refuri="bpy.types.ImapaintToolCapabilities#bpy.types.ImapaintToolCapabilities"><literal classes="xref py py-class">ImapaintToolCapabilities</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyConfig" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig"><literal classes="xref py py-class">KeyConfig</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyConfigPreferences" refuri="bpy.types.KeyConfigPreferences#bpy.types.KeyConfigPreferences"><literal classes="xref py py-class">KeyConfigPreferences</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyConfigurations" refuri="bpy.types.KeyConfigurations#bpy.types.KeyConfigurations"><literal classes="xref py py-class">KeyConfigurations</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyMap" refuri="bpy.types.KeyMap#bpy.types.KeyMap"><literal classes="xref py py-class">KeyMap</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyMapItem" refuri="bpy.types.KeyMapItem#bpy.types.KeyMapItem"><literal classes="xref py py-class">KeyMapItem</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyMapItems" refuri="bpy.types.KeyMapItems#bpy.types.KeyMapItems"><literal classes="xref py py-class">KeyMapItems</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyMaps" refuri="bpy.types.KeyMaps#bpy.types.KeyMaps"><literal classes="xref py py-class">KeyMaps</literal></reference>, <reference internal="True" reftitle="bpy.types.Keyframe" refuri="bpy.types.Keyframe#bpy.types.Keyframe"><literal classes="xref py py-class">Keyframe</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyingSet" refuri="bpy.types.KeyingSet#bpy.types.KeyingSet"><literal classes="xref py py-class">KeyingSet</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyingSetInfo" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo"><literal classes="xref py py-class">KeyingSetInfo</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyingSetPath" refuri="bpy.types.KeyingSetPath#bpy.types.KeyingSetPath"><literal classes="xref py py-class">KeyingSetPath</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyingSetPaths" refuri="bpy.types.KeyingSetPaths#bpy.types.KeyingSetPaths"><literal classes="xref py py-class">KeyingSetPaths</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyingSets" refuri="bpy.types.KeyingSets#bpy.types.KeyingSets"><literal classes="xref py py-class">KeyingSets</literal></reference>, <reference internal="True" reftitle="bpy.types.KeyingSetsAll" refuri="bpy.types.KeyingSetsAll#bpy.types.KeyingSetsAll"><literal classes="xref py py-class">KeyingSetsAll</literal></reference>, <reference internal="True" reftitle="bpy.types.LatticePoint" refuri="bpy.types.LatticePoint#bpy.types.LatticePoint"><literal classes="xref py py-class">LatticePoint</literal></reference>, <reference internal="True" reftitle="bpy.types.LayerCollection" refuri="bpy.types.LayerCollection#bpy.types.LayerCollection"><literal classes="xref py py-class">LayerCollection</literal></reference>, <reference internal="True" reftitle="bpy.types.LayerObjects" refuri="bpy.types.LayerObjects#bpy.types.LayerObjects"><literal classes="xref py py-class">LayerObjects</literal></reference>, <reference internal="True" reftitle="bpy.types.LineStyleAlphaModifiers" refuri="bpy.types.LineStyleAlphaModifiers#bpy.types.LineStyleAlphaModifiers"><literal classes="xref py py-class">LineStyleAlphaModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.LineStyleColorModifiers" refuri="bpy.types.LineStyleColorModifiers#bpy.types.LineStyleColorModifiers"><literal classes="xref py py-class">LineStyleColorModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.LineStyleGeometryModifiers" refuri="bpy.types.LineStyleGeometryModifiers#bpy.types.LineStyleGeometryModifiers"><literal classes="xref py py-class">LineStyleGeometryModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.LineStyleModifier" refuri="bpy.types.LineStyleModifier#bpy.types.LineStyleModifier"><literal classes="xref py py-class">LineStyleModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.LineStyleTextureSlots" refuri="bpy.types.LineStyleTextureSlots#bpy.types.LineStyleTextureSlots"><literal classes="xref py py-class">LineStyleTextureSlots</literal></reference>, <reference internal="True" reftitle="bpy.types.LineStyleThicknessModifiers" refuri="bpy.types.LineStyleThicknessModifiers#bpy.types.LineStyleThicknessModifiers"><literal classes="xref py py-class">LineStyleThicknessModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.Linesets" refuri="bpy.types.Linesets#bpy.types.Linesets"><literal classes="xref py py-class">Linesets</literal></reference>, <reference internal="True" reftitle="bpy.types.LoopColors" refuri="bpy.types.LoopColors#bpy.types.LoopColors"><literal classes="xref py py-class">LoopColors</literal></reference>, <reference internal="True" reftitle="bpy.types.Macro" refuri="bpy.types.Macro#bpy.types.Macro"><literal classes="xref py py-class">Macro</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskLayer" refuri="bpy.types.MaskLayer#bpy.types.MaskLayer"><literal classes="xref py py-class">MaskLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskLayers" refuri="bpy.types.MaskLayers#bpy.types.MaskLayers"><literal classes="xref py py-class">MaskLayers</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskParent" refuri="bpy.types.MaskParent#bpy.types.MaskParent"><literal classes="xref py py-class">MaskParent</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskSpline" refuri="bpy.types.MaskSpline#bpy.types.MaskSpline"><literal classes="xref py py-class">MaskSpline</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskSplinePoint" refuri="bpy.types.MaskSplinePoint#bpy.types.MaskSplinePoint"><literal classes="xref py py-class">MaskSplinePoint</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskSplinePointUW" refuri="bpy.types.MaskSplinePointUW#bpy.types.MaskSplinePointUW"><literal classes="xref py py-class">MaskSplinePointUW</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskSplinePoints" refuri="bpy.types.MaskSplinePoints#bpy.types.MaskSplinePoints"><literal classes="xref py py-class">MaskSplinePoints</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskSplines" refuri="bpy.types.MaskSplines#bpy.types.MaskSplines"><literal classes="xref py py-class">MaskSplines</literal></reference>, <reference internal="True" reftitle="bpy.types.MaterialGPencilStyle" refuri="bpy.types.MaterialGPencilStyle#bpy.types.MaterialGPencilStyle"><literal classes="xref py py-class">MaterialGPencilStyle</literal></reference>, <reference internal="True" reftitle="bpy.types.MaterialSlot" refuri="bpy.types.MaterialSlot#bpy.types.MaterialSlot"><literal classes="xref py py-class">MaterialSlot</literal></reference>, <reference internal="True" reftitle="bpy.types.Menu" refuri="bpy.types.Menu#bpy.types.Menu"><literal classes="xref py py-class">Menu</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshEdge" refuri="bpy.types.MeshEdge#bpy.types.MeshEdge"><literal classes="xref py py-class">MeshEdge</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshEdges" refuri="bpy.types.MeshEdges#bpy.types.MeshEdges"><literal classes="xref py py-class">MeshEdges</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshFaceMap" refuri="bpy.types.MeshFaceMap#bpy.types.MeshFaceMap"><literal classes="xref py py-class">MeshFaceMap</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshFaceMapLayer" refuri="bpy.types.MeshFaceMapLayer#bpy.types.MeshFaceMapLayer"><literal classes="xref py py-class">MeshFaceMapLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshFaceMapLayers" refuri="bpy.types.MeshFaceMapLayers#bpy.types.MeshFaceMapLayers"><literal classes="xref py py-class">MeshFaceMapLayers</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshLoop" refuri="bpy.types.MeshLoop#bpy.types.MeshLoop"><literal classes="xref py py-class">MeshLoop</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshLoopColor" refuri="bpy.types.MeshLoopColor#bpy.types.MeshLoopColor"><literal classes="xref py py-class">MeshLoopColor</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshLoopColorLayer" refuri="bpy.types.MeshLoopColorLayer#bpy.types.MeshLoopColorLayer"><literal classes="xref py py-class">MeshLoopColorLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshLoopTriangle" refuri="bpy.types.MeshLoopTriangle#bpy.types.MeshLoopTriangle"><literal classes="xref py py-class">MeshLoopTriangle</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshLoopTriangles" refuri="bpy.types.MeshLoopTriangles#bpy.types.MeshLoopTriangles"><literal classes="xref py py-class">MeshLoopTriangles</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshLoops" refuri="bpy.types.MeshLoops#bpy.types.MeshLoops"><literal classes="xref py py-class">MeshLoops</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPaintMaskLayer" refuri="bpy.types.MeshPaintMaskLayer#bpy.types.MeshPaintMaskLayer"><literal classes="xref py py-class">MeshPaintMaskLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPaintMaskProperty" refuri="bpy.types.MeshPaintMaskProperty#bpy.types.MeshPaintMaskProperty"><literal classes="xref py py-class">MeshPaintMaskProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygon" refuri="bpy.types.MeshPolygon#bpy.types.MeshPolygon"><literal classes="xref py py-class">MeshPolygon</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygonFloatProperty" refuri="bpy.types.MeshPolygonFloatProperty#bpy.types.MeshPolygonFloatProperty"><literal classes="xref py py-class">MeshPolygonFloatProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygonFloatPropertyLayer" refuri="bpy.types.MeshPolygonFloatPropertyLayer#bpy.types.MeshPolygonFloatPropertyLayer"><literal classes="xref py py-class">MeshPolygonFloatPropertyLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygonIntProperty" refuri="bpy.types.MeshPolygonIntProperty#bpy.types.MeshPolygonIntProperty"><literal classes="xref py py-class">MeshPolygonIntProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygonIntPropertyLayer" refuri="bpy.types.MeshPolygonIntPropertyLayer#bpy.types.MeshPolygonIntPropertyLayer"><literal classes="xref py py-class">MeshPolygonIntPropertyLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygonStringProperty" refuri="bpy.types.MeshPolygonStringProperty#bpy.types.MeshPolygonStringProperty"><literal classes="xref py py-class">MeshPolygonStringProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygonStringPropertyLayer" refuri="bpy.types.MeshPolygonStringPropertyLayer#bpy.types.MeshPolygonStringPropertyLayer"><literal classes="xref py py-class">MeshPolygonStringPropertyLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshPolygons" refuri="bpy.types.MeshPolygons#bpy.types.MeshPolygons"><literal classes="xref py py-class">MeshPolygons</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshSkinVertex" refuri="bpy.types.MeshSkinVertex#bpy.types.MeshSkinVertex"><literal classes="xref py py-class">MeshSkinVertex</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshSkinVertexLayer" refuri="bpy.types.MeshSkinVertexLayer#bpy.types.MeshSkinVertexLayer"><literal classes="xref py py-class">MeshSkinVertexLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshStatVis" refuri="bpy.types.MeshStatVis#bpy.types.MeshStatVis"><literal classes="xref py py-class">MeshStatVis</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshUVLoop" refuri="bpy.types.MeshUVLoop#bpy.types.MeshUVLoop"><literal classes="xref py py-class">MeshUVLoop</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshUVLoopLayer" refuri="bpy.types.MeshUVLoopLayer#bpy.types.MeshUVLoopLayer"><literal classes="xref py py-class">MeshUVLoopLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertex" refuri="bpy.types.MeshVertex#bpy.types.MeshVertex"><literal classes="xref py py-class">MeshVertex</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertexFloatProperty" refuri="bpy.types.MeshVertexFloatProperty#bpy.types.MeshVertexFloatProperty"><literal classes="xref py py-class">MeshVertexFloatProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertexFloatPropertyLayer" refuri="bpy.types.MeshVertexFloatPropertyLayer#bpy.types.MeshVertexFloatPropertyLayer"><literal classes="xref py py-class">MeshVertexFloatPropertyLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertexIntProperty" refuri="bpy.types.MeshVertexIntProperty#bpy.types.MeshVertexIntProperty"><literal classes="xref py py-class">MeshVertexIntProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertexIntPropertyLayer" refuri="bpy.types.MeshVertexIntPropertyLayer#bpy.types.MeshVertexIntPropertyLayer"><literal classes="xref py py-class">MeshVertexIntPropertyLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertexStringProperty" refuri="bpy.types.MeshVertexStringProperty#bpy.types.MeshVertexStringProperty"><literal classes="xref py py-class">MeshVertexStringProperty</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertexStringPropertyLayer" refuri="bpy.types.MeshVertexStringPropertyLayer#bpy.types.MeshVertexStringPropertyLayer"><literal classes="xref py py-class">MeshVertexStringPropertyLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.MeshVertices" refuri="bpy.types.MeshVertices#bpy.types.MeshVertices"><literal classes="xref py py-class">MeshVertices</literal></reference>, <reference internal="True" reftitle="bpy.types.MetaBallElements" refuri="bpy.types.MetaBallElements#bpy.types.MetaBallElements"><literal classes="xref py py-class">MetaBallElements</literal></reference>, <reference internal="True" reftitle="bpy.types.MetaElement" refuri="bpy.types.MetaElement#bpy.types.MetaElement"><literal classes="xref py py-class">MetaElement</literal></reference>, <reference internal="True" reftitle="bpy.types.Modifier" refuri="bpy.types.Modifier#bpy.types.Modifier"><literal classes="xref py py-class">Modifier</literal></reference>, <reference internal="True" reftitle="bpy.types.MotionPath" refuri="bpy.types.MotionPath#bpy.types.MotionPath"><literal classes="xref py py-class">MotionPath</literal></reference>, <reference internal="True" reftitle="bpy.types.MotionPathVert" refuri="bpy.types.MotionPathVert#bpy.types.MotionPathVert"><literal classes="xref py py-class">MotionPathVert</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieClipProxy" refuri="bpy.types.MovieClipProxy#bpy.types.MovieClipProxy"><literal classes="xref py py-class">MovieClipProxy</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieClipScopes" refuri="bpy.types.MovieClipScopes#bpy.types.MovieClipScopes"><literal classes="xref py py-class">MovieClipScopes</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieClipUser" refuri="bpy.types.MovieClipUser#bpy.types.MovieClipUser"><literal classes="xref py py-class">MovieClipUser</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieReconstructedCamera" refuri="bpy.types.MovieReconstructedCamera#bpy.types.MovieReconstructedCamera"><literal classes="xref py py-class">MovieReconstructedCamera</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTracking" refuri="bpy.types.MovieTracking#bpy.types.MovieTracking"><literal classes="xref py py-class">MovieTracking</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingCamera" refuri="bpy.types.MovieTrackingCamera#bpy.types.MovieTrackingCamera"><literal classes="xref py py-class">MovieTrackingCamera</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingDopesheet" refuri="bpy.types.MovieTrackingDopesheet#bpy.types.MovieTrackingDopesheet"><literal classes="xref py py-class">MovieTrackingDopesheet</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingMarker" refuri="bpy.types.MovieTrackingMarker#bpy.types.MovieTrackingMarker"><literal classes="xref py py-class">MovieTrackingMarker</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingMarkers" refuri="bpy.types.MovieTrackingMarkers#bpy.types.MovieTrackingMarkers"><literal classes="xref py py-class">MovieTrackingMarkers</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingObject" refuri="bpy.types.MovieTrackingObject#bpy.types.MovieTrackingObject"><literal classes="xref py py-class">MovieTrackingObject</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingObjectPlaneTracks" refuri="bpy.types.MovieTrackingObjectPlaneTracks#bpy.types.MovieTrackingObjectPlaneTracks"><literal classes="xref py py-class">MovieTrackingObjectPlaneTracks</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingObjectTracks" refuri="bpy.types.MovieTrackingObjectTracks#bpy.types.MovieTrackingObjectTracks"><literal classes="xref py py-class">MovieTrackingObjectTracks</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingObjects" refuri="bpy.types.MovieTrackingObjects#bpy.types.MovieTrackingObjects"><literal classes="xref py py-class">MovieTrackingObjects</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingPlaneMarker" refuri="bpy.types.MovieTrackingPlaneMarker#bpy.types.MovieTrackingPlaneMarker"><literal classes="xref py py-class">MovieTrackingPlaneMarker</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingPlaneMarkers" refuri="bpy.types.MovieTrackingPlaneMarkers#bpy.types.MovieTrackingPlaneMarkers"><literal classes="xref py py-class">MovieTrackingPlaneMarkers</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingPlaneTrack" refuri="bpy.types.MovieTrackingPlaneTrack#bpy.types.MovieTrackingPlaneTrack"><literal classes="xref py py-class">MovieTrackingPlaneTrack</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingPlaneTracks" refuri="bpy.types.MovieTrackingPlaneTracks#bpy.types.MovieTrackingPlaneTracks"><literal classes="xref py py-class">MovieTrackingPlaneTracks</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingReconstructedCameras" refuri="bpy.types.MovieTrackingReconstructedCameras#bpy.types.MovieTrackingReconstructedCameras"><literal classes="xref py py-class">MovieTrackingReconstructedCameras</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingReconstruction" refuri="bpy.types.MovieTrackingReconstruction#bpy.types.MovieTrackingReconstruction"><literal classes="xref py py-class">MovieTrackingReconstruction</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingSettings" refuri="bpy.types.MovieTrackingSettings#bpy.types.MovieTrackingSettings"><literal classes="xref py py-class">MovieTrackingSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingStabilization" refuri="bpy.types.MovieTrackingStabilization#bpy.types.MovieTrackingStabilization"><literal classes="xref py py-class">MovieTrackingStabilization</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingTrack" refuri="bpy.types.MovieTrackingTrack#bpy.types.MovieTrackingTrack"><literal classes="xref py py-class">MovieTrackingTrack</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieTrackingTracks" refuri="bpy.types.MovieTrackingTracks#bpy.types.MovieTrackingTracks"><literal classes="xref py py-class">MovieTrackingTracks</literal></reference>, <reference internal="True" reftitle="bpy.types.NlaStrip" refuri="bpy.types.NlaStrip#bpy.types.NlaStrip"><literal classes="xref py py-class">NlaStrip</literal></reference>, <reference internal="True" reftitle="bpy.types.NlaStripFCurves" refuri="bpy.types.NlaStripFCurves#bpy.types.NlaStripFCurves"><literal classes="xref py py-class">NlaStripFCurves</literal></reference>, <reference internal="True" reftitle="bpy.types.NlaStrips" refuri="bpy.types.NlaStrips#bpy.types.NlaStrips"><literal classes="xref py py-class">NlaStrips</literal></reference>, <reference internal="True" reftitle="bpy.types.NlaTrack" refuri="bpy.types.NlaTrack#bpy.types.NlaTrack"><literal classes="xref py py-class">NlaTrack</literal></reference>, <reference internal="True" reftitle="bpy.types.NlaTracks" refuri="bpy.types.NlaTracks#bpy.types.NlaTracks"><literal classes="xref py py-class">NlaTracks</literal></reference>, <reference internal="True" reftitle="bpy.types.Node" refuri="bpy.types.Node#bpy.types.Node"><literal classes="xref py py-class">Node</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeInputs" refuri="bpy.types.NodeInputs#bpy.types.NodeInputs"><literal classes="xref py py-class">NodeInputs</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeInstanceHash" refuri="bpy.types.NodeInstanceHash#bpy.types.NodeInstanceHash"><literal classes="xref py py-class">NodeInstanceHash</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeInternalSocketTemplate" refuri="bpy.types.NodeInternalSocketTemplate#bpy.types.NodeInternalSocketTemplate"><literal classes="xref py py-class">NodeInternalSocketTemplate</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeLink" refuri="bpy.types.NodeLink#bpy.types.NodeLink"><literal classes="xref py py-class">NodeLink</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeLinks" refuri="bpy.types.NodeLinks#bpy.types.NodeLinks"><literal classes="xref py py-class">NodeLinks</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeOutputFileSlotFile" refuri="bpy.types.NodeOutputFileSlotFile#bpy.types.NodeOutputFileSlotFile"><literal classes="xref py py-class">NodeOutputFileSlotFile</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeOutputFileSlotLayer" refuri="bpy.types.NodeOutputFileSlotLayer#bpy.types.NodeOutputFileSlotLayer"><literal classes="xref py py-class">NodeOutputFileSlotLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeOutputs" refuri="bpy.types.NodeOutputs#bpy.types.NodeOutputs"><literal classes="xref py py-class">NodeOutputs</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSetting" refuri="bpy.types.NodeSetting#bpy.types.NodeSetting"><literal classes="xref py py-class">NodeSetting</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocket" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket"><literal classes="xref py py-class">NodeSocket</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketInterface" refuri="bpy.types.NodeSocketInterface#bpy.types.NodeSocketInterface"><literal classes="xref py py-class">NodeSocketInterface</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeTreeInputs" refuri="bpy.types.NodeTreeInputs#bpy.types.NodeTreeInputs"><literal classes="xref py py-class">NodeTreeInputs</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeTreeOutputs" refuri="bpy.types.NodeTreeOutputs#bpy.types.NodeTreeOutputs"><literal classes="xref py py-class">NodeTreeOutputs</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeTreePath" refuri="bpy.types.NodeTreePath#bpy.types.NodeTreePath"><literal classes="xref py py-class">NodeTreePath</literal></reference>, <reference internal="True" reftitle="bpy.types.Nodes" refuri="bpy.types.Nodes#bpy.types.Nodes"><literal classes="xref py py-class">Nodes</literal></reference>, <reference internal="True" reftitle="bpy.types.ObjectBase" refuri="bpy.types.ObjectBase#bpy.types.ObjectBase"><literal classes="xref py py-class">ObjectBase</literal></reference>, <reference internal="True" reftitle="bpy.types.ObjectConstraints" refuri="bpy.types.ObjectConstraints#bpy.types.ObjectConstraints"><literal classes="xref py py-class">ObjectConstraints</literal></reference>, <reference internal="True" reftitle="bpy.types.ObjectDisplay" refuri="bpy.types.ObjectDisplay#bpy.types.ObjectDisplay"><literal classes="xref py py-class">ObjectDisplay</literal></reference>, <reference internal="True" reftitle="bpy.types.ObjectGpencilModifiers" refuri="bpy.types.ObjectGpencilModifiers#bpy.types.ObjectGpencilModifiers"><literal classes="xref py py-class">ObjectGpencilModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.ObjectModifiers" refuri="bpy.types.ObjectModifiers#bpy.types.ObjectModifiers"><literal classes="xref py py-class">ObjectModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.ObjectShaderFx" refuri="bpy.types.ObjectShaderFx#bpy.types.ObjectShaderFx"><literal classes="xref py py-class">ObjectShaderFx</literal></reference>, <reference internal="True" reftitle="bpy.types.Operator" refuri="bpy.types.Operator#bpy.types.Operator"><literal classes="xref py py-class">Operator</literal></reference>, <reference internal="True" reftitle="bpy.types.OperatorMacro" refuri="bpy.types.OperatorMacro#bpy.types.OperatorMacro"><literal classes="xref py py-class">OperatorMacro</literal></reference>, <reference internal="True" reftitle="bpy.types.OperatorOptions" refuri="bpy.types.OperatorOptions#bpy.types.OperatorOptions"><literal classes="xref py py-class">OperatorOptions</literal></reference>, <reference internal="True" reftitle="bpy.types.OperatorProperties" refuri="bpy.types.OperatorProperties#bpy.types.OperatorProperties"><literal classes="xref py py-class">OperatorProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.PackedFile" refuri="bpy.types.PackedFile#bpy.types.PackedFile"><literal classes="xref py py-class">PackedFile</literal></reference>, <reference internal="True" reftitle="bpy.types.Paint" refuri="bpy.types.Paint#bpy.types.Paint"><literal classes="xref py py-class">Paint</literal></reference>, <reference internal="True" reftitle="bpy.types.PaintToolSlot" refuri="bpy.types.PaintToolSlot#bpy.types.PaintToolSlot"><literal classes="xref py py-class">PaintToolSlot</literal></reference>, <reference internal="True" reftitle="bpy.types.PaletteColor" refuri="bpy.types.PaletteColor#bpy.types.PaletteColor"><literal classes="xref py py-class">PaletteColor</literal></reference>, <reference internal="True" reftitle="bpy.types.PaletteColors" refuri="bpy.types.PaletteColors#bpy.types.PaletteColors"><literal classes="xref py py-class">PaletteColors</literal></reference>, <reference internal="True" reftitle="bpy.types.Panel" refuri="bpy.types.Panel#bpy.types.Panel"><literal classes="xref py py-class">Panel</literal></reference>, <reference internal="True" reftitle="bpy.types.Particle" refuri="bpy.types.Particle#bpy.types.Particle"><literal classes="xref py py-class">Particle</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleBrush" refuri="bpy.types.ParticleBrush#bpy.types.ParticleBrush"><literal classes="xref py py-class">ParticleBrush</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleDupliWeight" refuri="bpy.types.ParticleDupliWeight#bpy.types.ParticleDupliWeight"><literal classes="xref py py-class">ParticleDupliWeight</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleEdit" refuri="bpy.types.ParticleEdit#bpy.types.ParticleEdit"><literal classes="xref py py-class">ParticleEdit</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleHairKey" refuri="bpy.types.ParticleHairKey#bpy.types.ParticleHairKey"><literal classes="xref py py-class">ParticleHairKey</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleKey" refuri="bpy.types.ParticleKey#bpy.types.ParticleKey"><literal classes="xref py py-class">ParticleKey</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleSettingsTextureSlots" refuri="bpy.types.ParticleSettingsTextureSlots#bpy.types.ParticleSettingsTextureSlots"><literal classes="xref py py-class">ParticleSettingsTextureSlots</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleSystem" refuri="bpy.types.ParticleSystem#bpy.types.ParticleSystem"><literal classes="xref py py-class">ParticleSystem</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleSystems" refuri="bpy.types.ParticleSystems#bpy.types.ParticleSystems"><literal classes="xref py py-class">ParticleSystems</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleTarget" refuri="bpy.types.ParticleTarget#bpy.types.ParticleTarget"><literal classes="xref py py-class">ParticleTarget</literal></reference>, <reference internal="True" reftitle="bpy.types.PathCompare" refuri="bpy.types.PathCompare#bpy.types.PathCompare"><literal classes="xref py py-class">PathCompare</literal></reference>, <reference internal="True" reftitle="bpy.types.PathCompareCollection" refuri="bpy.types.PathCompareCollection#bpy.types.PathCompareCollection"><literal classes="xref py py-class">PathCompareCollection</literal></reference>, <reference internal="True" reftitle="bpy.types.PointCache" refuri="bpy.types.PointCache#bpy.types.PointCache"><literal classes="xref py py-class">PointCache</literal></reference>, <reference internal="True" reftitle="bpy.types.PointCacheItem" refuri="bpy.types.PointCacheItem#bpy.types.PointCacheItem"><literal classes="xref py py-class">PointCacheItem</literal></reference>, <reference internal="True" reftitle="bpy.types.PointCaches" refuri="bpy.types.PointCaches#bpy.types.PointCaches"><literal classes="xref py py-class">PointCaches</literal></reference>, <reference internal="True" reftitle="bpy.types.PolygonFloatProperties" refuri="bpy.types.PolygonFloatProperties#bpy.types.PolygonFloatProperties"><literal classes="xref py py-class">PolygonFloatProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.PolygonIntProperties" refuri="bpy.types.PolygonIntProperties#bpy.types.PolygonIntProperties"><literal classes="xref py py-class">PolygonIntProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.PolygonStringProperties" refuri="bpy.types.PolygonStringProperties#bpy.types.PolygonStringProperties"><literal classes="xref py py-class">PolygonStringProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.Pose" refuri="bpy.types.Pose#bpy.types.Pose"><literal classes="xref py py-class">Pose</literal></reference>, <reference internal="True" reftitle="bpy.types.PoseBone" refuri="bpy.types.PoseBone#bpy.types.PoseBone"><literal classes="xref py py-class">PoseBone</literal></reference>, <reference internal="True" reftitle="bpy.types.PoseBoneConstraints" refuri="bpy.types.PoseBoneConstraints#bpy.types.PoseBoneConstraints"><literal classes="xref py py-class">PoseBoneConstraints</literal></reference>, <reference internal="True" reftitle="bpy.types.Property" refuri="bpy.types.Property#bpy.types.Property"><literal classes="xref py py-class">Property</literal></reference>, <reference internal="True" reftitle="bpy.types.PropertyGroup" refuri="bpy.types.PropertyGroup#bpy.types.PropertyGroup"><literal classes="xref py py-class">PropertyGroup</literal></reference>, <reference internal="True" reftitle="bpy.types.PropertyGroupItem" refuri="bpy.types.PropertyGroupItem#bpy.types.PropertyGroupItem"><literal classes="xref py py-class">PropertyGroupItem</literal></reference>, <reference internal="True" reftitle="bpy.types.Region" refuri="bpy.types.Region#bpy.types.Region"><literal classes="xref py py-class">Region</literal></reference>, <reference internal="True" reftitle="bpy.types.RegionView3D" refuri="bpy.types.RegionView3D#bpy.types.RegionView3D"><literal classes="xref py py-class">RegionView3D</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderEngine" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine"><literal classes="xref py py-class">RenderEngine</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderLayer" refuri="bpy.types.RenderLayer#bpy.types.RenderLayer"><literal classes="xref py py-class">RenderLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderPass" refuri="bpy.types.RenderPass#bpy.types.RenderPass"><literal classes="xref py py-class">RenderPass</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderPasses" refuri="bpy.types.RenderPasses#bpy.types.RenderPasses"><literal classes="xref py py-class">RenderPasses</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderResult" refuri="bpy.types.RenderResult#bpy.types.RenderResult"><literal classes="xref py py-class">RenderResult</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderSettings" refuri="bpy.types.RenderSettings#bpy.types.RenderSettings"><literal classes="xref py py-class">RenderSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderSlot" refuri="bpy.types.RenderSlot#bpy.types.RenderSlot"><literal classes="xref py py-class">RenderSlot</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderSlots" refuri="bpy.types.RenderSlots#bpy.types.RenderSlots"><literal classes="xref py py-class">RenderSlots</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderView" refuri="bpy.types.RenderView#bpy.types.RenderView"><literal classes="xref py py-class">RenderView</literal></reference>, <reference internal="True" reftitle="bpy.types.RenderViews" refuri="bpy.types.RenderViews#bpy.types.RenderViews"><literal classes="xref py py-class">RenderViews</literal></reference>, <reference internal="True" reftitle="bpy.types.RigidBodyConstraint" refuri="bpy.types.RigidBodyConstraint#bpy.types.RigidBodyConstraint"><literal classes="xref py py-class">RigidBodyConstraint</literal></reference>, <reference internal="True" reftitle="bpy.types.RigidBodyObject" refuri="bpy.types.RigidBodyObject#bpy.types.RigidBodyObject"><literal classes="xref py py-class">RigidBodyObject</literal></reference>, <reference internal="True" reftitle="bpy.types.RigidBodyWorld" refuri="bpy.types.RigidBodyWorld#bpy.types.RigidBodyWorld"><literal classes="xref py py-class">RigidBodyWorld</literal></reference>, <reference internal="True" reftitle="bpy.types.SPHFluidSettings" refuri="bpy.types.SPHFluidSettings#bpy.types.SPHFluidSettings"><literal classes="xref py py-class">SPHFluidSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.SceneDisplay" refuri="bpy.types.SceneDisplay#bpy.types.SceneDisplay"><literal classes="xref py py-class">SceneDisplay</literal></reference>, <reference internal="True" reftitle="bpy.types.SceneEEVEE" refuri="bpy.types.SceneEEVEE#bpy.types.SceneEEVEE"><literal classes="xref py py-class">SceneEEVEE</literal></reference>, <reference internal="True" reftitle="bpy.types.SceneObjects" refuri="bpy.types.SceneObjects#bpy.types.SceneObjects"><literal classes="xref py py-class">SceneObjects</literal></reference>, <reference internal="True" reftitle="bpy.types.SceneRenderView" refuri="bpy.types.SceneRenderView#bpy.types.SceneRenderView"><literal classes="xref py py-class">SceneRenderView</literal></reference>, <reference internal="True" reftitle="bpy.types.Scopes" refuri="bpy.types.Scopes#bpy.types.Scopes"><literal classes="xref py py-class">Scopes</literal></reference>, <reference internal="True" reftitle="bpy.types.SculptToolCapabilities" refuri="bpy.types.SculptToolCapabilities#bpy.types.SculptToolCapabilities"><literal classes="xref py py-class">SculptToolCapabilities</literal></reference>, <reference internal="True" reftitle="bpy.types.Sequence" refuri="bpy.types.Sequence#bpy.types.Sequence"><literal classes="xref py py-class">Sequence</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceColorBalanceData" refuri="bpy.types.SequenceColorBalanceData#bpy.types.SequenceColorBalanceData"><literal classes="xref py py-class">SequenceColorBalanceData</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceCrop" refuri="bpy.types.SequenceCrop#bpy.types.SequenceCrop"><literal classes="xref py py-class">SequenceCrop</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceEditor" refuri="bpy.types.SequenceEditor#bpy.types.SequenceEditor"><literal classes="xref py py-class">SequenceEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceElement" refuri="bpy.types.SequenceElement#bpy.types.SequenceElement"><literal classes="xref py py-class">SequenceElement</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceElements" refuri="bpy.types.SequenceElements#bpy.types.SequenceElements"><literal classes="xref py py-class">SequenceElements</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceModifier" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier"><literal classes="xref py py-class">SequenceModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceModifiers" refuri="bpy.types.SequenceModifiers#bpy.types.SequenceModifiers"><literal classes="xref py py-class">SequenceModifiers</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceProxy" refuri="bpy.types.SequenceProxy#bpy.types.SequenceProxy"><literal classes="xref py py-class">SequenceProxy</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceTransform" refuri="bpy.types.SequenceTransform#bpy.types.SequenceTransform"><literal classes="xref py py-class">SequenceTransform</literal></reference>, <reference internal="True" reftitle="bpy.types.Sequences" refuri="bpy.types.Sequences#bpy.types.Sequences"><literal classes="xref py py-class">Sequences</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFx" refuri="bpy.types.ShaderFx#bpy.types.ShaderFx"><literal classes="xref py py-class">ShaderFx</literal></reference>, <reference internal="True" reftitle="bpy.types.ShapeKey" refuri="bpy.types.ShapeKey#bpy.types.ShapeKey"><literal classes="xref py py-class">ShapeKey</literal></reference>, <reference internal="True" reftitle="bpy.types.ShapeKeyBezierPoint" refuri="bpy.types.ShapeKeyBezierPoint#bpy.types.ShapeKeyBezierPoint"><literal classes="xref py py-class">ShapeKeyBezierPoint</literal></reference>, <reference internal="True" reftitle="bpy.types.ShapeKeyCurvePoint" refuri="bpy.types.ShapeKeyCurvePoint#bpy.types.ShapeKeyCurvePoint"><literal classes="xref py py-class">ShapeKeyCurvePoint</literal></reference>, <reference internal="True" reftitle="bpy.types.ShapeKeyPoint" refuri="bpy.types.ShapeKeyPoint#bpy.types.ShapeKeyPoint"><literal classes="xref py py-class">ShapeKeyPoint</literal></reference>, <reference internal="True" reftitle="bpy.types.SmokeCollSettings" refuri="bpy.types.SmokeCollSettings#bpy.types.SmokeCollSettings"><literal classes="xref py py-class">SmokeCollSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.SmokeDomainSettings" refuri="bpy.types.SmokeDomainSettings#bpy.types.SmokeDomainSettings"><literal classes="xref py py-class">SmokeDomainSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.SmokeFlowSettings" refuri="bpy.types.SmokeFlowSettings#bpy.types.SmokeFlowSettings"><literal classes="xref py py-class">SmokeFlowSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.SoftBodySettings" refuri="bpy.types.SoftBodySettings#bpy.types.SoftBodySettings"><literal classes="xref py py-class">SoftBodySettings</literal></reference>, <reference internal="True" reftitle="bpy.types.Space" refuri="bpy.types.Space#bpy.types.Space"><literal classes="xref py py-class">Space</literal></reference>, <reference internal="True" reftitle="bpy.types.SpaceNodeEditorPath" refuri="bpy.types.SpaceNodeEditorPath#bpy.types.SpaceNodeEditorPath"><literal classes="xref py py-class">SpaceNodeEditorPath</literal></reference>, <reference internal="True" reftitle="bpy.types.SpaceUVEditor" refuri="bpy.types.SpaceUVEditor#bpy.types.SpaceUVEditor"><literal classes="xref py py-class">SpaceUVEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.Spline" refuri="bpy.types.Spline#bpy.types.Spline"><literal classes="xref py py-class">Spline</literal></reference>, <reference internal="True" reftitle="bpy.types.SplineBezierPoints" refuri="bpy.types.SplineBezierPoints#bpy.types.SplineBezierPoints"><literal classes="xref py py-class">SplineBezierPoints</literal></reference>, <reference internal="True" reftitle="bpy.types.SplinePoint" refuri="bpy.types.SplinePoint#bpy.types.SplinePoint"><literal classes="xref py py-class">SplinePoint</literal></reference>, <reference internal="True" reftitle="bpy.types.SplinePoints" refuri="bpy.types.SplinePoints#bpy.types.SplinePoints"><literal classes="xref py py-class">SplinePoints</literal></reference>, <reference internal="True" reftitle="bpy.types.Stereo3dDisplay" refuri="bpy.types.Stereo3dDisplay#bpy.types.Stereo3dDisplay"><literal classes="xref py py-class">Stereo3dDisplay</literal></reference>, <reference internal="True" reftitle="bpy.types.Stereo3dFormat" refuri="bpy.types.Stereo3dFormat#bpy.types.Stereo3dFormat"><literal classes="xref py py-class">Stereo3dFormat</literal></reference>, <reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">Struct</literal></reference>, <reference internal="True" reftitle="bpy.types.StudioLight" refuri="bpy.types.StudioLight#bpy.types.StudioLight"><literal classes="xref py py-class">StudioLight</literal></reference>, <reference internal="True" reftitle="bpy.types.StudioLights" refuri="bpy.types.StudioLights#bpy.types.StudioLights"><literal classes="xref py py-class">StudioLights</literal></reference>, <reference internal="True" reftitle="bpy.types.TexMapping" refuri="bpy.types.TexMapping#bpy.types.TexMapping"><literal classes="xref py py-class">TexMapping</literal></reference>, <reference internal="True" reftitle="bpy.types.TexPaintSlot" refuri="bpy.types.TexPaintSlot#bpy.types.TexPaintSlot"><literal classes="xref py py-class">TexPaintSlot</literal></reference>, <reference internal="True" reftitle="bpy.types.TextBox" refuri="bpy.types.TextBox#bpy.types.TextBox"><literal classes="xref py py-class">TextBox</literal></reference>, <reference internal="True" reftitle="bpy.types.TextCharacterFormat" refuri="bpy.types.TextCharacterFormat#bpy.types.TextCharacterFormat"><literal classes="xref py py-class">TextCharacterFormat</literal></reference>, <reference internal="True" reftitle="bpy.types.TextLine" refuri="bpy.types.TextLine#bpy.types.TextLine"><literal classes="xref py py-class">TextLine</literal></reference>, <reference internal="True" reftitle="bpy.types.TextureSlot" refuri="bpy.types.TextureSlot#bpy.types.TextureSlot"><literal classes="xref py py-class">TextureSlot</literal></reference>, <reference internal="True" reftitle="bpy.types.Theme" refuri="bpy.types.Theme#bpy.types.Theme"><literal classes="xref py py-class">Theme</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeBoneColorSet" refuri="bpy.types.ThemeBoneColorSet#bpy.types.ThemeBoneColorSet"><literal classes="xref py py-class">ThemeBoneColorSet</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeClipEditor" refuri="bpy.types.ThemeClipEditor#bpy.types.ThemeClipEditor"><literal classes="xref py py-class">ThemeClipEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeConsole" refuri="bpy.types.ThemeConsole#bpy.types.ThemeConsole"><literal classes="xref py py-class">ThemeConsole</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeDopeSheet" refuri="bpy.types.ThemeDopeSheet#bpy.types.ThemeDopeSheet"><literal classes="xref py py-class">ThemeDopeSheet</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeFileBrowser" refuri="bpy.types.ThemeFileBrowser#bpy.types.ThemeFileBrowser"><literal classes="xref py py-class">ThemeFileBrowser</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeFontStyle" refuri="bpy.types.ThemeFontStyle#bpy.types.ThemeFontStyle"><literal classes="xref py py-class">ThemeFontStyle</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeGradientColors" refuri="bpy.types.ThemeGradientColors#bpy.types.ThemeGradientColors"><literal classes="xref py py-class">ThemeGradientColors</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeGraphEditor" refuri="bpy.types.ThemeGraphEditor#bpy.types.ThemeGraphEditor"><literal classes="xref py py-class">ThemeGraphEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeImageEditor" refuri="bpy.types.ThemeImageEditor#bpy.types.ThemeImageEditor"><literal classes="xref py py-class">ThemeImageEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeInfo" refuri="bpy.types.ThemeInfo#bpy.types.ThemeInfo"><literal classes="xref py py-class">ThemeInfo</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeNLAEditor" refuri="bpy.types.ThemeNLAEditor#bpy.types.ThemeNLAEditor"><literal classes="xref py py-class">ThemeNLAEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeNodeEditor" refuri="bpy.types.ThemeNodeEditor#bpy.types.ThemeNodeEditor"><literal classes="xref py py-class">ThemeNodeEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeOutliner" refuri="bpy.types.ThemeOutliner#bpy.types.ThemeOutliner"><literal classes="xref py py-class">ThemeOutliner</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemePanelColors" refuri="bpy.types.ThemePanelColors#bpy.types.ThemePanelColors"><literal classes="xref py py-class">ThemePanelColors</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeProperties" refuri="bpy.types.ThemeProperties#bpy.types.ThemeProperties"><literal classes="xref py py-class">ThemeProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeSequenceEditor" refuri="bpy.types.ThemeSequenceEditor#bpy.types.ThemeSequenceEditor"><literal classes="xref py py-class">ThemeSequenceEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeSpaceGeneric" refuri="bpy.types.ThemeSpaceGeneric#bpy.types.ThemeSpaceGeneric"><literal classes="xref py py-class">ThemeSpaceGeneric</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeSpaceGradient" refuri="bpy.types.ThemeSpaceGradient#bpy.types.ThemeSpaceGradient"><literal classes="xref py py-class">ThemeSpaceGradient</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeSpaceListGeneric" refuri="bpy.types.ThemeSpaceListGeneric#bpy.types.ThemeSpaceListGeneric"><literal classes="xref py py-class">ThemeSpaceListGeneric</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeStatusBar" refuri="bpy.types.ThemeStatusBar#bpy.types.ThemeStatusBar"><literal classes="xref py py-class">ThemeStatusBar</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeStyle" refuri="bpy.types.ThemeStyle#bpy.types.ThemeStyle"><literal classes="xref py py-class">ThemeStyle</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeTextEditor" refuri="bpy.types.ThemeTextEditor#bpy.types.ThemeTextEditor"><literal classes="xref py py-class">ThemeTextEditor</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeTopBar" refuri="bpy.types.ThemeTopBar#bpy.types.ThemeTopBar"><literal classes="xref py py-class">ThemeTopBar</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeUserInterface" refuri="bpy.types.ThemeUserInterface#bpy.types.ThemeUserInterface"><literal classes="xref py py-class">ThemeUserInterface</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeUserPreferences" refuri="bpy.types.ThemeUserPreferences#bpy.types.ThemeUserPreferences"><literal classes="xref py py-class">ThemeUserPreferences</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeView3D" refuri="bpy.types.ThemeView3D#bpy.types.ThemeView3D"><literal classes="xref py py-class">ThemeView3D</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeWidgetColors" refuri="bpy.types.ThemeWidgetColors#bpy.types.ThemeWidgetColors"><literal classes="xref py py-class">ThemeWidgetColors</literal></reference>, <reference internal="True" reftitle="bpy.types.ThemeWidgetStateColors" refuri="bpy.types.ThemeWidgetStateColors#bpy.types.ThemeWidgetStateColors"><literal classes="xref py py-class">ThemeWidgetStateColors</literal></reference>, <reference internal="True" reftitle="bpy.types.TimelineMarker" refuri="bpy.types.TimelineMarker#bpy.types.TimelineMarker"><literal classes="xref py py-class">TimelineMarker</literal></reference>, <reference internal="True" reftitle="bpy.types.TimelineMarkers" refuri="bpy.types.TimelineMarkers#bpy.types.TimelineMarkers"><literal classes="xref py py-class">TimelineMarkers</literal></reference>, <reference internal="True" reftitle="bpy.types.Timer" refuri="bpy.types.Timer#bpy.types.Timer"><literal classes="xref py py-class">Timer</literal></reference>, <reference internal="True" reftitle="bpy.types.ToolSettings" refuri="bpy.types.ToolSettings#bpy.types.ToolSettings"><literal classes="xref py py-class">ToolSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.TransformOrientation" refuri="bpy.types.TransformOrientation#bpy.types.TransformOrientation"><literal classes="xref py py-class">TransformOrientation</literal></reference>, <reference internal="True" reftitle="bpy.types.UILayout" refuri="bpy.types.UILayout#bpy.types.UILayout"><literal classes="xref py py-class">UILayout</literal></reference>, <reference internal="True" reftitle="bpy.types.UIList" refuri="bpy.types.UIList#bpy.types.UIList"><literal classes="xref py py-class">UIList</literal></reference>, <reference internal="True" reftitle="bpy.types.UIPieMenu" refuri="bpy.types.UIPieMenu#bpy.types.UIPieMenu"><literal classes="xref py py-class">UIPieMenu</literal></reference>, <reference internal="True" reftitle="bpy.types.UIPopover" refuri="bpy.types.UIPopover#bpy.types.UIPopover"><literal classes="xref py py-class">UIPopover</literal></reference>, <reference internal="True" reftitle="bpy.types.UIPopupMenu" refuri="bpy.types.UIPopupMenu#bpy.types.UIPopupMenu"><literal classes="xref py py-class">UIPopupMenu</literal></reference>, <reference internal="True" reftitle="bpy.types.UVLoopLayers" refuri="bpy.types.UVLoopLayers#bpy.types.UVLoopLayers"><literal classes="xref py py-class">UVLoopLayers</literal></reference>, <reference internal="True" reftitle="bpy.types.UVProjector" refuri="bpy.types.UVProjector#bpy.types.UVProjector"><literal classes="xref py py-class">UVProjector</literal></reference>, <reference internal="True" reftitle="bpy.types.UnifiedPaintSettings" refuri="bpy.types.UnifiedPaintSettings#bpy.types.UnifiedPaintSettings"><literal classes="xref py py-class">UnifiedPaintSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.UnitSettings" refuri="bpy.types.UnitSettings#bpy.types.UnitSettings"><literal classes="xref py py-class">UnitSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.UnknownType" refuri="bpy.types.UnknownType#bpy.types.UnknownType"><literal classes="xref py py-class">UnknownType</literal></reference>, <reference internal="True" reftitle="bpy.types.UserPreferences" refuri="bpy.types.UserPreferences#bpy.types.UserPreferences"><literal classes="xref py py-class">UserPreferences</literal></reference>, <reference internal="True" reftitle="bpy.types.UserPreferencesEdit" refuri="bpy.types.UserPreferencesEdit#bpy.types.UserPreferencesEdit"><literal classes="xref py py-class">UserPreferencesEdit</literal></reference>, <reference internal="True" reftitle="bpy.types.UserPreferencesFilePaths" refuri="bpy.types.UserPreferencesFilePaths#bpy.types.UserPreferencesFilePaths"><literal classes="xref py py-class">UserPreferencesFilePaths</literal></reference>, <reference internal="True" reftitle="bpy.types.UserPreferencesInput" refuri="bpy.types.UserPreferencesInput#bpy.types.UserPreferencesInput"><literal classes="xref py py-class">UserPreferencesInput</literal></reference>, <reference internal="True" reftitle="bpy.types.UserPreferencesSystem" refuri="bpy.types.UserPreferencesSystem#bpy.types.UserPreferencesSystem"><literal classes="xref py py-class">UserPreferencesSystem</literal></reference>, <reference internal="True" reftitle="bpy.types.UserPreferencesView" refuri="bpy.types.UserPreferencesView#bpy.types.UserPreferencesView"><literal classes="xref py py-class">UserPreferencesView</literal></reference>, <reference internal="True" reftitle="bpy.types.UserSolidLight" refuri="bpy.types.UserSolidLight#bpy.types.UserSolidLight"><literal classes="xref py py-class">UserSolidLight</literal></reference>, <reference internal="True" reftitle="bpy.types.VertexFloatProperties" refuri="bpy.types.VertexFloatProperties#bpy.types.VertexFloatProperties"><literal classes="xref py py-class">VertexFloatProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.VertexGroup" refuri="bpy.types.VertexGroup#bpy.types.VertexGroup"><literal classes="xref py py-class">VertexGroup</literal></reference>, <reference internal="True" reftitle="bpy.types.VertexGroupElement" refuri="bpy.types.VertexGroupElement#bpy.types.VertexGroupElement"><literal classes="xref py py-class">VertexGroupElement</literal></reference>, <reference internal="True" reftitle="bpy.types.VertexGroups" refuri="bpy.types.VertexGroups#bpy.types.VertexGroups"><literal classes="xref py py-class">VertexGroups</literal></reference>, <reference internal="True" reftitle="bpy.types.VertexIntProperties" refuri="bpy.types.VertexIntProperties#bpy.types.VertexIntProperties"><literal classes="xref py py-class">VertexIntProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.VertexStringProperties" refuri="bpy.types.VertexStringProperties#bpy.types.VertexStringProperties"><literal classes="xref py py-class">VertexStringProperties</literal></reference>, <reference internal="True" reftitle="bpy.types.View2D" refuri="bpy.types.View2D#bpy.types.View2D"><literal classes="xref py py-class">View2D</literal></reference>, <reference internal="True" reftitle="bpy.types.View3DOverlay" refuri="bpy.types.View3DOverlay#bpy.types.View3DOverlay"><literal classes="xref py py-class">View3DOverlay</literal></reference>, <reference internal="True" reftitle="bpy.types.View3DShading" refuri="bpy.types.View3DShading#bpy.types.View3DShading"><literal classes="xref py py-class">View3DShading</literal></reference>, <reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, <reference internal="True" reftitle="bpy.types.ViewLayers" refuri="bpy.types.ViewLayers#bpy.types.ViewLayers"><literal classes="xref py py-class">ViewLayers</literal></reference>, <reference internal="True" reftitle="bpy.types.WalkNavigation" refuri="bpy.types.WalkNavigation#bpy.types.WalkNavigation"><literal classes="xref py py-class">WalkNavigation</literal></reference>, <reference internal="True" reftitle="bpy.types.Window" refuri="bpy.types.Window#bpy.types.Window"><literal classes="xref py py-class">Window</literal></reference>, <reference internal="True" reftitle="bpy.types.WorkspaceTool" refuri="bpy.types.WorkspaceTool#bpy.types.WorkspaceTool"><literal classes="xref py py-class">WorkspaceTool</literal></reference>, <reference internal="True" reftitle="bpy.types.WorldLighting" refuri="bpy.types.WorldLighting#bpy.types.WorldLighting"><literal classes="xref py py-class">WorldLighting</literal></reference>, <reference internal="True" reftitle="bpy.types.WorldMistSettings" refuri="bpy.types.WorldMistSettings#bpy.types.WorldMistSettings"><literal classes="xref py py-class">WorldMistSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.wmOwnerID" refuri="bpy.types.wmOwnerID#bpy.types.wmOwnerID"><literal classes="xref py py-class">wmOwnerID</literal></reference>, <reference internal="True" reftitle="bpy.types.wmOwnerIDs" refuri="bpy.types.wmOwnerIDs#bpy.types.wmOwnerIDs"><literal classes="xref py py-class">wmOwnerIDs</literal></reference>, <reference internal="True" reftitle="bpy.types.wmTools" refuri="bpy.types.wmTools#bpy.types.wmTools"><literal classes="xref py py-class">wmTools</literal></reference></paragraph>
        <index entries="['single',\ u'bpy_struct\ (class\ in\ bpy.types)',\ u'bpy.types.bpy_struct',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="bpy_struct" ids="bpy.types.bpy_struct" module="bpy.types" names="bpy.types.bpy_struct"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">bpy_struct</desc_name></desc_signature>
            <desc_content>
                <paragraph>built-in base class for all classes in bpy.types.</paragraph>
                <note>
                    <paragraph>Note that bpy.types.bpy_struct is not actually available from within Blender,
                        it only exists for the purpose of documentation.</paragraph>
                </note>
                <index entries="['single',\ u'as_pointer()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.as_pointer',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.as_pointer" ids="bpy.types.bpy_struct.as_pointer" module="bpy.types" names="bpy.types.bpy_struct.as_pointer"><desc_name xml:space="preserve">as_pointer</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the memory address which holds a pointer to blenders internal data</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>int (memory address).</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>int</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                        <note>
                            <paragraph>This is intended only for advanced script writers who need to
                                pass blender data to their own C/Python modules.</paragraph>
                        </note>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'driver_add()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.driver_add',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.driver_add" ids="bpy.types.bpy_struct.driver_add" module="bpy.types" names="bpy.types.bpy_struct.driver_add"><desc_name xml:space="preserve">driver_add</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">index=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Adds driver(s) to the given property</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">path</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ path to the property to drive, analogous to the fcurveâ€™s data path.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">index</literal_strong> (<literal_emphasis>int</literal_emphasis>) â€“ array index of the property drive. Defaults to -1 for all indices or a single channel if the property is not an array.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The driver(s) added.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.FCurve" refuri="bpy.types.FCurve#bpy.types.FCurve"><literal classes="xref py py-class">bpy.types.FCurve</literal></reference> or list if index is -1 with an array property.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'driver_remove()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.driver_remove',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.driver_remove" ids="bpy.types.bpy_struct.driver_remove" module="bpy.types" names="bpy.types.bpy_struct.driver_remove"><desc_name xml:space="preserve">driver_remove</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">index=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove driver(s) from the given property</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">path</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ path to the property to drive, analogous to the fcurveâ€™s data path.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">index</literal_strong> (<literal_emphasis>int</literal_emphasis>) â€“ array index of the property drive. Defaults to -1 for all indices or a single channel if the property is not an array.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Success of driver removal.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'get()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.get',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.get" ids="bpy.types.bpy_struct.get" module="bpy.types" names="bpy.types.bpy_struct.get"><desc_name xml:space="preserve">get</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the value of the custom property assigned to key or default
                            when not found (matches pythons dictionary function of the same name).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">key</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The key associated with the custom property.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">default</literal_strong> (<literal_emphasis>Undefined</literal_emphasis>) â€“ Optional argument for the value to return if
                                                <emphasis>key</emphasis> is not found.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                        <note>
                            <paragraph>Only <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">bpy.types.ID</literal></reference>, <reference internal="True" reftitle="bpy.types.Bone" refuri="bpy.types.Bone#bpy.types.Bone"><literal classes="xref py py-class">bpy.types.Bone</literal></reference> and
                                <reference internal="True" reftitle="bpy.types.PoseBone" refuri="bpy.types.PoseBone#bpy.types.PoseBone"><literal classes="xref py py-class">bpy.types.PoseBone</literal></reference> classes support custom properties.</paragraph>
                        </note>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'is_property_hidden()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.is_property_hidden',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.is_property_hidden" ids="bpy.types.bpy_struct.is_property_hidden" module="bpy.types" names="bpy.types.bpy_struct.is_property_hidden"><desc_name xml:space="preserve">is_property_hidden</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if a property is hidden.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True when the property is hidden.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'is_property_overridable_static()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.is_property_overridable_static',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.is_property_overridable_static" ids="bpy.types.bpy_struct.is_property_overridable_static" module="bpy.types" names="bpy.types.bpy_struct.is_property_overridable_static"><desc_name xml:space="preserve">is_property_overridable_static</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if a property is statically overridable.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True when the property is statically overridable.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'is_property_readonly()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.is_property_readonly',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.is_property_readonly" ids="bpy.types.bpy_struct.is_property_readonly" module="bpy.types" names="bpy.types.bpy_struct.is_property_readonly"><desc_name xml:space="preserve">is_property_readonly</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if a property is readonly.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True when the property is readonly (not writable).</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'is_property_set()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.is_property_set',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.is_property_set" ids="bpy.types.bpy_struct.is_property_set" module="bpy.types" names="bpy.types.bpy_struct.is_property_set"><desc_name xml:space="preserve">is_property_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Check if a property is set, use for testing operator properties.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True when the property has been set.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'items()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.items',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.items" ids="bpy.types.bpy_struct.items" module="bpy.types" names="bpy.types.bpy_struct.items"><desc_name xml:space="preserve">items</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the items of this objects custom properties (matches pythons
                            dictionary function of the same name).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>custom property key, value pairs.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>list of key, value tuples</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                        <note>
                            <paragraph>Only <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">bpy.types.ID</literal></reference>, <reference internal="True" reftitle="bpy.types.Bone" refuri="bpy.types.Bone#bpy.types.Bone"><literal classes="xref py py-class">bpy.types.Bone</literal></reference> and
                                <reference internal="True" reftitle="bpy.types.PoseBone" refuri="bpy.types.PoseBone#bpy.types.PoseBone"><literal classes="xref py py-class">bpy.types.PoseBone</literal></reference> classes support custom properties.</paragraph>
                        </note>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'keyframe_delete()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.keyframe_delete',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.keyframe_delete" ids="bpy.types.bpy_struct.keyframe_delete" module="bpy.types" names="bpy.types.bpy_struct.keyframe_delete"><desc_name xml:space="preserve">keyframe_delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data_path</desc_parameter><desc_parameter xml:space="preserve">index=-1</desc_parameter><desc_parameter xml:space="preserve">frame=bpy.context.scene.frame_current</desc_parameter><desc_parameter xml:space="preserve">group=""</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove a keyframe from this properties fcurve.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">data_path</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ path to the property to remove a key, analogous to the fcurveâ€™s data path.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">index</literal_strong> (<literal_emphasis>int</literal_emphasis>) â€“ array index of the property to remove a key. Defaults to -1 removing all indices or a single channel if the property is not an array.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>float</literal_emphasis>) â€“ The frame on which the keyframe is deleted, defaulting to the current frame.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> (<literal_emphasis>str</literal_emphasis>) â€“ The name of the group the F-Curve should be added to if it doesnâ€™t exist yet.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Success of keyframe deleation.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'keyframe_insert()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.keyframe_insert',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.keyframe_insert" ids="bpy.types.bpy_struct.keyframe_insert" module="bpy.types" names="bpy.types.bpy_struct.keyframe_insert"><desc_name xml:space="preserve">keyframe_insert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data_path</desc_parameter><desc_parameter xml:space="preserve">index=-1</desc_parameter><desc_parameter xml:space="preserve">frame=bpy.context.scene.frame_current</desc_parameter><desc_parameter xml:space="preserve">group=""</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Insert a keyframe on the property given, adding fcurves and animation data when necessary.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">data_path</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ path to the property to key, analogous to the fcurveâ€™s data path.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">index</literal_strong> (<literal_emphasis>int</literal_emphasis>) â€“ array index of the property to key.
                                                Defaults to -1 which will key all indices or a single channel if the property is not an array.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>float</literal_emphasis>) â€“ The frame on which the keyframe is inserted, defaulting to the current frame.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">group</literal_strong> (<literal_emphasis>str</literal_emphasis>) â€“ The name of the group the F-Curve should be added to if it doesnâ€™t exist yet.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">options</literal_strong> â€“ <paragraph>Optional flags:</paragraph><bullet_list bullet="-"><list_item><paragraph><literal>INSERTKEY_NEEDED</literal> Only insert keyframes where theyâ€™re needed in the relevant F-Curves.</paragraph></list_item><list_item><paragraph><literal>INSERTKEY_VISUAL</literal> Insert keyframes based on â€˜visual transformsâ€™.</paragraph></list_item><list_item><definition_list><definition_list_item><term><literal>INSERTKEY_XYZ_TO_RGB</literal> Color for newly added transformation F-Curves (Location, Rotation, Scale)</term><definition><paragraph>and also Color is based on the transform axis.</paragraph></definition></definition_list_item></definition_list></list_item></bullet_list></paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Success of keyframe insertion.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                        <paragraph>This is the most simple example of inserting a keyframe from python.</paragraph>
                        <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.bpy_struct.keyframe_insert.py" xml:space="preserve">
import bpy

obj = bpy.context.object

# set the keyframe at frame 1
obj.location = 3.0, 4.0, 10.0
obj.keyframe_insert(data_path="location", frame=1)
</literal_block>
                        <paragraph>Note that when keying data paths which contain nested properties this must be
                            done from the <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference> subclass, in this case the <reference internal="True" reftitle="bpy.types.Armature" refuri="bpy.types.Armature#bpy.types.Armature"><literal classes="xref py py-class">Armature</literal></reference> rather
                            than the bone.</paragraph>
                        <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.bpy_struct.keyframe_insert.1.py" xml:space="preserve">
import bpy
from bpy.props import PointerProperty


# define a nested property
class MyPropGroup(bpy.types.PropertyGroup):
    nested = bpy.props.FloatProperty(name="Nested", default=0.0)


# register it so its available for all bones
bpy.utils.register_class(MyPropGroup)
bpy.types.Bone.my_prop = PointerProperty(type=MyPropGroup,
                                         name="MyProp")

# get a bone
obj = bpy.data.objects["Armature"]
arm = obj.data

# set the keyframe at frame 1
arm.bones["Bone"].my_prop_group.nested = 10
arm.keyframe_insert(data_path='bones["Bone"].my_prop.nested',
                    frame=1,
                    group="Nested Group")
</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'keys()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.keys',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.keys" ids="bpy.types.bpy_struct.keys" module="bpy.types" names="bpy.types.bpy_struct.keys"><desc_name xml:space="preserve">keys</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the keys of this objects custom properties (matches pythons
                            dictionary function of the same name).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>custom property keys.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>list of strings</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                        <note>
                            <paragraph>Only <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">bpy.types.ID</literal></reference>, <reference internal="True" reftitle="bpy.types.Bone" refuri="bpy.types.Bone#bpy.types.Bone"><literal classes="xref py py-class">bpy.types.Bone</literal></reference> and
                                <reference internal="True" reftitle="bpy.types.PoseBone" refuri="bpy.types.PoseBone#bpy.types.PoseBone"><literal classes="xref py py-class">bpy.types.PoseBone</literal></reference> classes support custom properties.</paragraph>
                        </note>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'path_from_id()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.path_from_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.path_from_id" ids="bpy.types.bpy_struct.path_from_id" module="bpy.types" names="bpy.types.bpy_struct.path_from_id"><desc_name xml:space="preserve">path_from_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property=""</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the data path from the ID to this object (string).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">property</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ Optional property name which can be used if the path is
                                        to a property of this object.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The path from <reference internal="True" refid="bpy.types.bpy_struct.id_data" reftitle="bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy.types.bpy_struct.id_data</literal></reference>
                                        to this struct and property (when given).</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>str</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'path_resolve()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.path_resolve',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.path_resolve" ids="bpy.types.bpy_struct.path_resolve" module="bpy.types" names="bpy.types.bpy_struct.path_resolve"><desc_name xml:space="preserve">path_resolve</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">coerce=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the property from the path, raise an exception when not found.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">path</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ path which this property resolves.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">coerce</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) â€“ optional argument, when True, the property will be converted
                                                into its python representation.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'pop()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.pop',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.pop" ids="bpy.types.bpy_struct.pop" module="bpy.types" names="bpy.types.bpy_struct.pop"><desc_name xml:space="preserve">pop</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove and return the value of the custom property assigned to key or default
                            when not found (matches pythons dictionary function of the same name).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">key</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The key associated with the custom property.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">default</literal_strong> (<literal_emphasis>Undefined</literal_emphasis>) â€“ Optional argument for the value to return if
                                                <emphasis>key</emphasis> is not found.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                        <note>
                            <paragraph>Only <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">bpy.types.ID</literal></reference>, <reference internal="True" reftitle="bpy.types.Bone" refuri="bpy.types.Bone#bpy.types.Bone"><literal classes="xref py py-class">bpy.types.Bone</literal></reference> and
                                <reference internal="True" reftitle="bpy.types.PoseBone" refuri="bpy.types.PoseBone#bpy.types.PoseBone"><literal classes="xref py py-class">bpy.types.PoseBone</literal></reference> classes support custom properties.</paragraph>
                        </note>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'property_overridable_static_set()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.property_overridable_static_set',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.property_overridable_static_set" ids="bpy.types.bpy_struct.property_overridable_static_set" module="bpy.types" names="bpy.types.bpy_struct.property_overridable_static_set"><desc_name xml:space="preserve">property_overridable_static_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Define a property as statically overridable or not (only for custom properties!).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>True when the overridable status of the property was successfully set.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'property_unset()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.property_unset',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.property_unset" ids="bpy.types.bpy_struct.property_unset" module="bpy.types" names="bpy.types.bpy_struct.property_unset"><desc_name xml:space="preserve">property_unset</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Unset a property, will use default value afterward.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'type_recast()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.type_recast',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.type_recast" ids="bpy.types.bpy_struct.type_recast" module="bpy.types" names="bpy.types.bpy_struct.type_recast"><desc_name xml:space="preserve">type_recast</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return a new instance, this is needed because types
                            such as textures can be changed at runtime.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>a new instance of this object with the type initialized again.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>subclass of <reference internal="True" refid="bpy.types.bpy_struct" reftitle="bpy.types.bpy_struct"><literal classes="xref py py-class">bpy.types.bpy_struct</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'values()\ (bpy.types.bpy_struct\ method)',\ u'bpy.types.bpy_struct.values',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.values" ids="bpy.types.bpy_struct.values" module="bpy.types" names="bpy.types.bpy_struct.values"><desc_name xml:space="preserve">values</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Returns the values of this objects custom properties (matches pythons
                            dictionary function of the same name).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>custom property values.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>list</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                        <note>
                            <paragraph>Only <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">bpy.types.ID</literal></reference>, <reference internal="True" reftitle="bpy.types.Bone" refuri="bpy.types.Bone#bpy.types.Bone"><literal classes="xref py py-class">bpy.types.Bone</literal></reference> and
                                <reference internal="True" reftitle="bpy.types.PoseBone" refuri="bpy.types.PoseBone#bpy.types.PoseBone"><literal classes="xref py py-class">bpy.types.PoseBone</literal></reference> classes support custom properties.</paragraph>
                        </note>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'id_data\ (bpy.types.bpy_struct\ attribute)',\ u'bpy.types.bpy_struct.id_data',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="bpy_struct" first="False" fullname="bpy_struct.id_data" ids="bpy.types.bpy_struct.id_data" module="bpy.types" names="bpy.types.bpy_struct.id_data"><desc_name xml:space="preserve">id_data</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>The <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">bpy.types.ID</literal></reference> object this datablock is from or None, (not available for all data types)</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
