<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.CompositorNode.rst">
    <section ids="module-bpy.types compositornode-nodeinternal" names="compositornode(nodeinternal)">
        <title>CompositorNode(NodeInternal)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.Node" refuri="bpy.types.Node#bpy.types.Node"><literal classes="xref py py-class">Node</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeInternal" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal"><literal classes="xref py py-class">NodeInternal</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.CompositorNodeAlphaOver" refuri="bpy.types.CompositorNodeAlphaOver#bpy.types.CompositorNodeAlphaOver"><literal classes="xref py py-class">CompositorNodeAlphaOver</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeBilateralblur" refuri="bpy.types.CompositorNodeBilateralblur#bpy.types.CompositorNodeBilateralblur"><literal classes="xref py py-class">CompositorNodeBilateralblur</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeBlur" refuri="bpy.types.CompositorNodeBlur#bpy.types.CompositorNodeBlur"><literal classes="xref py py-class">CompositorNodeBlur</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeBokehBlur" refuri="bpy.types.CompositorNodeBokehBlur#bpy.types.CompositorNodeBokehBlur"><literal classes="xref py py-class">CompositorNodeBokehBlur</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeBokehImage" refuri="bpy.types.CompositorNodeBokehImage#bpy.types.CompositorNodeBokehImage"><literal classes="xref py py-class">CompositorNodeBokehImage</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeBoxMask" refuri="bpy.types.CompositorNodeBoxMask#bpy.types.CompositorNodeBoxMask"><literal classes="xref py py-class">CompositorNodeBoxMask</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeBrightContrast" refuri="bpy.types.CompositorNodeBrightContrast#bpy.types.CompositorNodeBrightContrast"><literal classes="xref py py-class">CompositorNodeBrightContrast</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeChannelMatte" refuri="bpy.types.CompositorNodeChannelMatte#bpy.types.CompositorNodeChannelMatte"><literal classes="xref py py-class">CompositorNodeChannelMatte</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeChromaMatte" refuri="bpy.types.CompositorNodeChromaMatte#bpy.types.CompositorNodeChromaMatte"><literal classes="xref py py-class">CompositorNodeChromaMatte</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeColorBalance" refuri="bpy.types.CompositorNodeColorBalance#bpy.types.CompositorNodeColorBalance"><literal classes="xref py py-class">CompositorNodeColorBalance</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeColorCorrection" refuri="bpy.types.CompositorNodeColorCorrection#bpy.types.CompositorNodeColorCorrection"><literal classes="xref py py-class">CompositorNodeColorCorrection</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeColorMatte" refuri="bpy.types.CompositorNodeColorMatte#bpy.types.CompositorNodeColorMatte"><literal classes="xref py py-class">CompositorNodeColorMatte</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeColorSpill" refuri="bpy.types.CompositorNodeColorSpill#bpy.types.CompositorNodeColorSpill"><literal classes="xref py py-class">CompositorNodeColorSpill</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCombHSVA" refuri="bpy.types.CompositorNodeCombHSVA#bpy.types.CompositorNodeCombHSVA"><literal classes="xref py py-class">CompositorNodeCombHSVA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCombRGBA" refuri="bpy.types.CompositorNodeCombRGBA#bpy.types.CompositorNodeCombRGBA"><literal classes="xref py py-class">CompositorNodeCombRGBA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCombYCCA" refuri="bpy.types.CompositorNodeCombYCCA#bpy.types.CompositorNodeCombYCCA"><literal classes="xref py py-class">CompositorNodeCombYCCA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCombYUVA" refuri="bpy.types.CompositorNodeCombYUVA#bpy.types.CompositorNodeCombYUVA"><literal classes="xref py py-class">CompositorNodeCombYUVA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeComposite" refuri="bpy.types.CompositorNodeComposite#bpy.types.CompositorNodeComposite"><literal classes="xref py py-class">CompositorNodeComposite</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCornerPin" refuri="bpy.types.CompositorNodeCornerPin#bpy.types.CompositorNodeCornerPin"><literal classes="xref py py-class">CompositorNodeCornerPin</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCrop" refuri="bpy.types.CompositorNodeCrop#bpy.types.CompositorNodeCrop"><literal classes="xref py py-class">CompositorNodeCrop</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCryptomatte" refuri="bpy.types.CompositorNodeCryptomatte#bpy.types.CompositorNodeCryptomatte"><literal classes="xref py py-class">CompositorNodeCryptomatte</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCurveRGB" refuri="bpy.types.CompositorNodeCurveRGB#bpy.types.CompositorNodeCurveRGB"><literal classes="xref py py-class">CompositorNodeCurveRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeCurveVec" refuri="bpy.types.CompositorNodeCurveVec#bpy.types.CompositorNodeCurveVec"><literal classes="xref py py-class">CompositorNodeCurveVec</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDBlur" refuri="bpy.types.CompositorNodeDBlur#bpy.types.CompositorNodeDBlur"><literal classes="xref py py-class">CompositorNodeDBlur</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDefocus" refuri="bpy.types.CompositorNodeDefocus#bpy.types.CompositorNodeDefocus"><literal classes="xref py py-class">CompositorNodeDefocus</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDespeckle" refuri="bpy.types.CompositorNodeDespeckle#bpy.types.CompositorNodeDespeckle"><literal classes="xref py py-class">CompositorNodeDespeckle</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDiffMatte" refuri="bpy.types.CompositorNodeDiffMatte#bpy.types.CompositorNodeDiffMatte"><literal classes="xref py py-class">CompositorNodeDiffMatte</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDilateErode" refuri="bpy.types.CompositorNodeDilateErode#bpy.types.CompositorNodeDilateErode"><literal classes="xref py py-class">CompositorNodeDilateErode</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDisplace" refuri="bpy.types.CompositorNodeDisplace#bpy.types.CompositorNodeDisplace"><literal classes="xref py py-class">CompositorNodeDisplace</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDistanceMatte" refuri="bpy.types.CompositorNodeDistanceMatte#bpy.types.CompositorNodeDistanceMatte"><literal classes="xref py py-class">CompositorNodeDistanceMatte</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeDoubleEdgeMask" refuri="bpy.types.CompositorNodeDoubleEdgeMask#bpy.types.CompositorNodeDoubleEdgeMask"><literal classes="xref py py-class">CompositorNodeDoubleEdgeMask</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeEllipseMask" refuri="bpy.types.CompositorNodeEllipseMask#bpy.types.CompositorNodeEllipseMask"><literal classes="xref py py-class">CompositorNodeEllipseMask</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeFilter" refuri="bpy.types.CompositorNodeFilter#bpy.types.CompositorNodeFilter"><literal classes="xref py py-class">CompositorNodeFilter</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeFlip" refuri="bpy.types.CompositorNodeFlip#bpy.types.CompositorNodeFlip"><literal classes="xref py py-class">CompositorNodeFlip</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeGamma" refuri="bpy.types.CompositorNodeGamma#bpy.types.CompositorNodeGamma"><literal classes="xref py py-class">CompositorNodeGamma</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeGlare" refuri="bpy.types.CompositorNodeGlare#bpy.types.CompositorNodeGlare"><literal classes="xref py py-class">CompositorNodeGlare</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeGroup" refuri="bpy.types.CompositorNodeGroup#bpy.types.CompositorNodeGroup"><literal classes="xref py py-class">CompositorNodeGroup</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeHueCorrect" refuri="bpy.types.CompositorNodeHueCorrect#bpy.types.CompositorNodeHueCorrect"><literal classes="xref py py-class">CompositorNodeHueCorrect</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeHueSat" refuri="bpy.types.CompositorNodeHueSat#bpy.types.CompositorNodeHueSat"><literal classes="xref py py-class">CompositorNodeHueSat</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeIDMask" refuri="bpy.types.CompositorNodeIDMask#bpy.types.CompositorNodeIDMask"><literal classes="xref py py-class">CompositorNodeIDMask</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeImage" refuri="bpy.types.CompositorNodeImage#bpy.types.CompositorNodeImage"><literal classes="xref py py-class">CompositorNodeImage</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeInpaint" refuri="bpy.types.CompositorNodeInpaint#bpy.types.CompositorNodeInpaint"><literal classes="xref py py-class">CompositorNodeInpaint</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeInvert" refuri="bpy.types.CompositorNodeInvert#bpy.types.CompositorNodeInvert"><literal classes="xref py py-class">CompositorNodeInvert</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeKeying" refuri="bpy.types.CompositorNodeKeying#bpy.types.CompositorNodeKeying"><literal classes="xref py py-class">CompositorNodeKeying</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeKeyingScreen" refuri="bpy.types.CompositorNodeKeyingScreen#bpy.types.CompositorNodeKeyingScreen"><literal classes="xref py py-class">CompositorNodeKeyingScreen</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeLensdist" refuri="bpy.types.CompositorNodeLensdist#bpy.types.CompositorNodeLensdist"><literal classes="xref py py-class">CompositorNodeLensdist</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeLevels" refuri="bpy.types.CompositorNodeLevels#bpy.types.CompositorNodeLevels"><literal classes="xref py py-class">CompositorNodeLevels</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeLumaMatte" refuri="bpy.types.CompositorNodeLumaMatte#bpy.types.CompositorNodeLumaMatte"><literal classes="xref py py-class">CompositorNodeLumaMatte</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMapRange" refuri="bpy.types.CompositorNodeMapRange#bpy.types.CompositorNodeMapRange"><literal classes="xref py py-class">CompositorNodeMapRange</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMapUV" refuri="bpy.types.CompositorNodeMapUV#bpy.types.CompositorNodeMapUV"><literal classes="xref py py-class">CompositorNodeMapUV</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMapValue" refuri="bpy.types.CompositorNodeMapValue#bpy.types.CompositorNodeMapValue"><literal classes="xref py py-class">CompositorNodeMapValue</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMask" refuri="bpy.types.CompositorNodeMask#bpy.types.CompositorNodeMask"><literal classes="xref py py-class">CompositorNodeMask</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMath" refuri="bpy.types.CompositorNodeMath#bpy.types.CompositorNodeMath"><literal classes="xref py py-class">CompositorNodeMath</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMixRGB" refuri="bpy.types.CompositorNodeMixRGB#bpy.types.CompositorNodeMixRGB"><literal classes="xref py py-class">CompositorNodeMixRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMovieClip" refuri="bpy.types.CompositorNodeMovieClip#bpy.types.CompositorNodeMovieClip"><literal classes="xref py py-class">CompositorNodeMovieClip</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeMovieDistortion" refuri="bpy.types.CompositorNodeMovieDistortion#bpy.types.CompositorNodeMovieDistortion"><literal classes="xref py py-class">CompositorNodeMovieDistortion</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeNormal" refuri="bpy.types.CompositorNodeNormal#bpy.types.CompositorNodeNormal"><literal classes="xref py py-class">CompositorNodeNormal</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeNormalize" refuri="bpy.types.CompositorNodeNormalize#bpy.types.CompositorNodeNormalize"><literal classes="xref py py-class">CompositorNodeNormalize</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeOutputFile" refuri="bpy.types.CompositorNodeOutputFile#bpy.types.CompositorNodeOutputFile"><literal classes="xref py py-class">CompositorNodeOutputFile</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodePixelate" refuri="bpy.types.CompositorNodePixelate#bpy.types.CompositorNodePixelate"><literal classes="xref py py-class">CompositorNodePixelate</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodePlaneTrackDeform" refuri="bpy.types.CompositorNodePlaneTrackDeform#bpy.types.CompositorNodePlaneTrackDeform"><literal classes="xref py py-class">CompositorNodePlaneTrackDeform</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodePremulKey" refuri="bpy.types.CompositorNodePremulKey#bpy.types.CompositorNodePremulKey"><literal classes="xref py py-class">CompositorNodePremulKey</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeRGB" refuri="bpy.types.CompositorNodeRGB#bpy.types.CompositorNodeRGB"><literal classes="xref py py-class">CompositorNodeRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeRGBToBW" refuri="bpy.types.CompositorNodeRGBToBW#bpy.types.CompositorNodeRGBToBW"><literal classes="xref py py-class">CompositorNodeRGBToBW</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeRLayers" refuri="bpy.types.CompositorNodeRLayers#bpy.types.CompositorNodeRLayers"><literal classes="xref py py-class">CompositorNodeRLayers</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeRotate" refuri="bpy.types.CompositorNodeRotate#bpy.types.CompositorNodeRotate"><literal classes="xref py py-class">CompositorNodeRotate</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeScale" refuri="bpy.types.CompositorNodeScale#bpy.types.CompositorNodeScale"><literal classes="xref py py-class">CompositorNodeScale</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSepHSVA" refuri="bpy.types.CompositorNodeSepHSVA#bpy.types.CompositorNodeSepHSVA"><literal classes="xref py py-class">CompositorNodeSepHSVA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSepRGBA" refuri="bpy.types.CompositorNodeSepRGBA#bpy.types.CompositorNodeSepRGBA"><literal classes="xref py py-class">CompositorNodeSepRGBA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSepYCCA" refuri="bpy.types.CompositorNodeSepYCCA#bpy.types.CompositorNodeSepYCCA"><literal classes="xref py py-class">CompositorNodeSepYCCA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSepYUVA" refuri="bpy.types.CompositorNodeSepYUVA#bpy.types.CompositorNodeSepYUVA"><literal classes="xref py py-class">CompositorNodeSepYUVA</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSetAlpha" refuri="bpy.types.CompositorNodeSetAlpha#bpy.types.CompositorNodeSetAlpha"><literal classes="xref py py-class">CompositorNodeSetAlpha</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSplitViewer" refuri="bpy.types.CompositorNodeSplitViewer#bpy.types.CompositorNodeSplitViewer"><literal classes="xref py py-class">CompositorNodeSplitViewer</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeStabilize" refuri="bpy.types.CompositorNodeStabilize#bpy.types.CompositorNodeStabilize"><literal classes="xref py py-class">CompositorNodeStabilize</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSunBeams" refuri="bpy.types.CompositorNodeSunBeams#bpy.types.CompositorNodeSunBeams"><literal classes="xref py py-class">CompositorNodeSunBeams</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSwitch" refuri="bpy.types.CompositorNodeSwitch#bpy.types.CompositorNodeSwitch"><literal classes="xref py py-class">CompositorNodeSwitch</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeSwitchView" refuri="bpy.types.CompositorNodeSwitchView#bpy.types.CompositorNodeSwitchView"><literal classes="xref py py-class">CompositorNodeSwitchView</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeTexture" refuri="bpy.types.CompositorNodeTexture#bpy.types.CompositorNodeTexture"><literal classes="xref py py-class">CompositorNodeTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeTime" refuri="bpy.types.CompositorNodeTime#bpy.types.CompositorNodeTime"><literal classes="xref py py-class">CompositorNodeTime</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeTonemap" refuri="bpy.types.CompositorNodeTonemap#bpy.types.CompositorNodeTonemap"><literal classes="xref py py-class">CompositorNodeTonemap</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeTrackPos" refuri="bpy.types.CompositorNodeTrackPos#bpy.types.CompositorNodeTrackPos"><literal classes="xref py py-class">CompositorNodeTrackPos</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeTransform" refuri="bpy.types.CompositorNodeTransform#bpy.types.CompositorNodeTransform"><literal classes="xref py py-class">CompositorNodeTransform</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeTranslate" refuri="bpy.types.CompositorNodeTranslate#bpy.types.CompositorNodeTranslate"><literal classes="xref py py-class">CompositorNodeTranslate</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeValToRGB" refuri="bpy.types.CompositorNodeValToRGB#bpy.types.CompositorNodeValToRGB"><literal classes="xref py py-class">CompositorNodeValToRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeValue" refuri="bpy.types.CompositorNodeValue#bpy.types.CompositorNodeValue"><literal classes="xref py py-class">CompositorNodeValue</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeVecBlur" refuri="bpy.types.CompositorNodeVecBlur#bpy.types.CompositorNodeVecBlur"><literal classes="xref py py-class">CompositorNodeVecBlur</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeViewer" refuri="bpy.types.CompositorNodeViewer#bpy.types.CompositorNodeViewer"><literal classes="xref py py-class">CompositorNodeViewer</literal></reference>, <reference internal="True" reftitle="bpy.types.CompositorNodeZcombine" refuri="bpy.types.CompositorNodeZcombine#bpy.types.CompositorNodeZcombine"><literal classes="xref py py-class">CompositorNodeZcombine</literal></reference></paragraph>
        <index entries="['single',\ u'CompositorNode\ (class\ in\ bpy.types)',\ u'bpy.types.CompositorNode',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CompositorNode" ids="bpy.types.CompositorNode" module="bpy.types" names="bpy.types.CompositorNode"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">CompositorNode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">NodeInternal</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ u'tag_need_exec()\ (bpy.types.CompositorNode\ method)',\ u'bpy.types.CompositorNode.tag_need_exec',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CompositorNode" first="False" fullname="CompositorNode.tag_need_exec" ids="bpy.types.CompositorNode.tag_need_exec" module="bpy.types" names="bpy.types.CompositorNode.tag_need_exec"><desc_name xml:space="preserve">tag_need_exec</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Tag the node for compositor update</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update()\ (bpy.types.CompositorNode\ method)',\ u'bpy.types.CompositorNode.update',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CompositorNode" first="False" fullname="CompositorNode.update" ids="bpy.types.CompositorNode.update" module="bpy.types" names="bpy.types.CompositorNode.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.CompositorNode\ class\ method)',\ u'bpy.types.CompositorNode.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="CompositorNode" first="False" fullname="CompositorNode.bl_rna_get_subclass" ids="bpy.types.CompositorNode.bl_rna_get_subclass" module="bpy.types" names="bpy.types.CompositorNode.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.CompositorNode\ class\ method)',\ u'bpy.types.CompositorNode.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="CompositorNode" first="False" fullname="CompositorNode.bl_rna_get_subclass_py" ids="bpy.types.CompositorNode.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.CompositorNode.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.type" refuri="bpy.types.Node#bpy.types.Node.type"><literal classes="xref py py-class">Node.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.location" refuri="bpy.types.Node#bpy.types.Node.location"><literal classes="xref py py-class">Node.location</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.width" refuri="bpy.types.Node#bpy.types.Node.width"><literal classes="xref py py-class">Node.width</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.width_hidden" refuri="bpy.types.Node#bpy.types.Node.width_hidden"><literal classes="xref py py-class">Node.width_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.height" refuri="bpy.types.Node#bpy.types.Node.height"><literal classes="xref py py-class">Node.height</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.dimensions" refuri="bpy.types.Node#bpy.types.Node.dimensions"><literal classes="xref py py-class">Node.dimensions</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.name" refuri="bpy.types.Node#bpy.types.Node.name"><literal classes="xref py py-class">Node.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.label" refuri="bpy.types.Node#bpy.types.Node.label"><literal classes="xref py py-class">Node.label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.inputs" refuri="bpy.types.Node#bpy.types.Node.inputs"><literal classes="xref py py-class">Node.inputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.outputs" refuri="bpy.types.Node#bpy.types.Node.outputs"><literal classes="xref py py-class">Node.outputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.internal_links" refuri="bpy.types.Node#bpy.types.Node.internal_links"><literal classes="xref py py-class">Node.internal_links</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.parent" refuri="bpy.types.Node#bpy.types.Node.parent"><literal classes="xref py py-class">Node.parent</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.use_custom_color" refuri="bpy.types.Node#bpy.types.Node.use_custom_color"><literal classes="xref py py-class">Node.use_custom_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.color" refuri="bpy.types.Node#bpy.types.Node.color"><literal classes="xref py py-class">Node.color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.select" refuri="bpy.types.Node#bpy.types.Node.select"><literal classes="xref py py-class">Node.select</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_options" refuri="bpy.types.Node#bpy.types.Node.show_options"><literal classes="xref py py-class">Node.show_options</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_preview" refuri="bpy.types.Node#bpy.types.Node.show_preview"><literal classes="xref py py-class">Node.show_preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.hide" refuri="bpy.types.Node#bpy.types.Node.hide"><literal classes="xref py py-class">Node.hide</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.mute" refuri="bpy.types.Node#bpy.types.Node.mute"><literal classes="xref py py-class">Node.mute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_texture" refuri="bpy.types.Node#bpy.types.Node.show_texture"><literal classes="xref py py-class">Node.show_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_idname" refuri="bpy.types.Node#bpy.types.Node.bl_idname"><literal classes="xref py py-class">Node.bl_idname</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_label" refuri="bpy.types.Node#bpy.types.Node.bl_label"><literal classes="xref py py-class">Node.bl_label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_description" refuri="bpy.types.Node#bpy.types.Node.bl_description"><literal classes="xref py py-class">Node.bl_description</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_icon" refuri="bpy.types.Node#bpy.types.Node.bl_icon"><literal classes="xref py py-class">Node.bl_icon</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_static_type" refuri="bpy.types.Node#bpy.types.Node.bl_static_type"><literal classes="xref py py-class">Node.bl_static_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_default" refuri="bpy.types.Node#bpy.types.Node.bl_width_default"><literal classes="xref py py-class">Node.bl_width_default</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_min" refuri="bpy.types.Node#bpy.types.Node.bl_width_min"><literal classes="xref py py-class">Node.bl_width_min</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_max" refuri="bpy.types.Node#bpy.types.Node.bl_width_max"><literal classes="xref py py-class">Node.bl_width_max</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_default" refuri="bpy.types.Node#bpy.types.Node.bl_height_default"><literal classes="xref py py-class">Node.bl_height_default</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_min" refuri="bpy.types.Node#bpy.types.Node.bl_height_min"><literal classes="xref py py-class">Node.bl_height_min</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_max" refuri="bpy.types.Node#bpy.types.Node.bl_height_max"><literal classes="xref py py-class">Node.bl_height_max</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.socket_value_update" refuri="bpy.types.Node#bpy.types.Node.socket_value_update"><literal classes="xref py py-class">Node.socket_value_update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.is_registered_node_type" refuri="bpy.types.Node#bpy.types.Node.is_registered_node_type"><literal classes="xref py py-class">Node.is_registered_node_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll" refuri="bpy.types.Node#bpy.types.Node.poll"><literal classes="xref py py-class">Node.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll_instance" refuri="bpy.types.Node#bpy.types.Node.poll_instance"><literal classes="xref py py-class">Node.poll_instance</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.update" refuri="bpy.types.Node#bpy.types.Node.update"><literal classes="xref py py-class">Node.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.insert_link" refuri="bpy.types.Node#bpy.types.Node.insert_link"><literal classes="xref py py-class">Node.insert_link</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.init" refuri="bpy.types.Node#bpy.types.Node.init"><literal classes="xref py py-class">Node.init</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.copy" refuri="bpy.types.Node#bpy.types.Node.copy"><literal classes="xref py py-class">Node.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.free" refuri="bpy.types.Node#bpy.types.Node.free"><literal classes="xref py py-class">Node.free</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons" refuri="bpy.types.Node#bpy.types.Node.draw_buttons"><literal classes="xref py py-class">Node.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons_ext" refuri="bpy.types.Node#bpy.types.Node.draw_buttons_ext"><literal classes="xref py py-class">Node.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_label" refuri="bpy.types.Node#bpy.types.Node.draw_label"><literal classes="xref py py-class">Node.draw_label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll" refuri="bpy.types.Node#bpy.types.Node.poll"><literal classes="xref py py-class">Node.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll"><literal classes="xref py py-class">NodeInternal.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll_instance" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll_instance"><literal classes="xref py py-class">NodeInternal.poll_instance</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.update" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.update"><literal classes="xref py py-class">NodeInternal.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons"><literal classes="xref py py-class">NodeInternal.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons_ext" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons_ext"><literal classes="xref py py-class">NodeInternal.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
