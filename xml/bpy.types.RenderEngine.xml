<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.RenderEngine.rst">
    <section ids="module-bpy.types renderengine-bpy-struct" names="renderengine(bpy_struct)">
        <title>RenderEngine(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <section ids="simple-render-engine" names="simple\ render\ engine">
            <title>Simple Render Engine</title>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.RenderEngine.py" xml:space="preserve">
import bpy


class CustomRenderEngine(bpy.types.RenderEngine):
    # These three members are used by blender to set up the
    # RenderEngine; define its internal name, visible name and capabilities.
    bl_idname = "custom_renderer"
    bl_label = "Flat Color Renderer"
    bl_use_preview = True

    # This is the only method called by blender, in this example
    # we use it to detect preview rendering and call the implementation
    # in another method.
    def render(self, scene):
        scale = scene.render.resolution_percentage / 100.0
        self.size_x = int(scene.render.resolution_x * scale)
        self.size_y = int(scene.render.resolution_y * scale)

        if self.is_preview:
            self.render_preview(scene)
        else:
            self.render_scene(scene)

    # In this example, we fill the preview renders with a flat green color.
    def render_preview(self, scene):
        pixel_count = self.size_x * self.size_y

        # The framebuffer is defined as a list of pixels, each pixel
        # itself being a list of R,G,B,A values
        green_rect = [[0.0, 1.0, 0.0, 1.0]] * pixel_count

        # Here we write the pixel values to the RenderResult
        result = self.begin_result(0, 0, self.size_x, self.size_y)
        layer = result.layers[0].passes["Combined"]
        layer.rect = green_rect
        self.end_result(result)

    # In this example, we fill the full renders with a flat blue color.
    def render_scene(self, scene):
        pixel_count = self.size_x * self.size_y

        # The framebuffer is defined as a list of pixels, each pixel
        # itself being a list of R,G,B,A values
        blue_rect = [[0.0, 0.0, 1.0, 1.0]] * pixel_count

        # Here we write the pixel values to the RenderResult
        result = self.begin_result(0, 0, self.size_x, self.size_y)
        layer = result.layers[0].passes["Combined"]
        layer.rect = blue_rect
        self.end_result(result)


def register():
    # Register the RenderEngine
    bpy.utils.register_class(CustomRenderEngine)

    # RenderEngines also need to tell UI Panels that they are compatible
    # Otherwise most of the UI will be empty when the engine is selected.
    # In this example, we need to see the main render image button and
    # the material preview panel.
    from bl_ui import (
        properties_render,
        properties_material,
    )
    properties_render.RENDER_PT_render.COMPAT_ENGINES.add(CustomRenderEngine.bl_idname)
    properties_material.MATERIAL_PT_preview.COMPAT_ENGINES.add(CustomRenderEngine.bl_idname)


def unregister():
    bpy.utils.unregister_class(CustomRenderEngine)

    from bl_ui import (
        properties_render,
        properties_material,
    )
    properties_render.RENDER_PT_render.COMPAT_ENGINES.remove(CustomRenderEngine.bl_idname)
    properties_material.MATERIAL_PT_preview.COMPAT_ENGINES.remove(CustomRenderEngine.bl_idname)


if __name__ == "__main__":
    register()
</literal_block>
            <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
            <index entries="['single',\ u'RenderEngine\ (class\ in\ bpy.types)',\ u'bpy.types.RenderEngine',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="RenderEngine" ids="bpy.types.RenderEngine" module="bpy.types" names="bpy.types.RenderEngine"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">RenderEngine</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Render engine</paragraph>
                    <index entries="['single',\ u'bl_idname\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_idname',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_idname" ids="bpy.types.RenderEngine.bl_idname" module="bpy.types" names="bpy.types.RenderEngine.bl_idname"><desc_name xml:space="preserve">bl_idname</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>string, default “”, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_label\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_label',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_label" ids="bpy.types.RenderEngine.bl_label" module="bpy.types" names="bpy.types.RenderEngine.bl_label"><desc_name xml:space="preserve">bl_label</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>string, default “”, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_exclude_layers\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_exclude_layers',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_exclude_layers" ids="bpy.types.RenderEngine.bl_use_exclude_layers" module="bpy.types" names="bpy.types.RenderEngine.bl_use_exclude_layers"><desc_name xml:space="preserve">bl_use_exclude_layers</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_postprocess\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_postprocess',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_postprocess" ids="bpy.types.RenderEngine.bl_use_postprocess" module="bpy.types" names="bpy.types.RenderEngine.bl_use_postprocess"><desc_name xml:space="preserve">bl_use_postprocess</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_preview\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_preview',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_preview" ids="bpy.types.RenderEngine.bl_use_preview" module="bpy.types" names="bpy.types.RenderEngine.bl_use_preview"><desc_name xml:space="preserve">bl_use_preview</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_save_buffers\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_save_buffers',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_save_buffers" ids="bpy.types.RenderEngine.bl_use_save_buffers" module="bpy.types" names="bpy.types.RenderEngine.bl_use_save_buffers"><desc_name xml:space="preserve">bl_use_save_buffers</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_shading_nodes\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_shading_nodes',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_shading_nodes" ids="bpy.types.RenderEngine.bl_use_shading_nodes" module="bpy.types" names="bpy.types.RenderEngine.bl_use_shading_nodes"><desc_name xml:space="preserve">bl_use_shading_nodes</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_shading_nodes_custom\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_shading_nodes_custom',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_shading_nodes_custom" ids="bpy.types.RenderEngine.bl_use_shading_nodes_custom" module="bpy.types" names="bpy.types.RenderEngine.bl_use_shading_nodes_custom"><desc_name xml:space="preserve">bl_use_shading_nodes_custom</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default True</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_spherical_stereo\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_spherical_stereo',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_spherical_stereo" ids="bpy.types.RenderEngine.bl_use_spherical_stereo" module="bpy.types" names="bpy.types.RenderEngine.bl_use_spherical_stereo"><desc_name xml:space="preserve">bl_use_spherical_stereo</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_use_texture_preview\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.bl_use_texture_preview',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_use_texture_preview" ids="bpy.types.RenderEngine.bl_use_texture_preview" module="bpy.types" names="bpy.types.RenderEngine.bl_use_texture_preview"><desc_name xml:space="preserve">bl_use_texture_preview</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'RenderEngine.camera_override\ (in\ module\ bpy.types)',\ u'bpy.types.RenderEngine.camera_override',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.camera_override" ids="bpy.types.RenderEngine.camera_override" module="bpy.types" names="bpy.types.RenderEngine.camera_override"><desc_name xml:space="preserve">camera_override</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'is_animation\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.is_animation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.is_animation" ids="bpy.types.RenderEngine.is_animation" module="bpy.types" names="bpy.types.RenderEngine.is_animation"><desc_name xml:space="preserve">is_animation</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'is_preview\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.is_preview',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.is_preview" ids="bpy.types.RenderEngine.is_preview" module="bpy.types" names="bpy.types.RenderEngine.is_preview"><desc_name xml:space="preserve">is_preview</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'layer_override\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.layer_override',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.layer_override" ids="bpy.types.RenderEngine.layer_override" module="bpy.types" names="bpy.types.RenderEngine.layer_override"><desc_name xml:space="preserve">layer_override</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean array of 20 items, default (False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'RenderEngine.render\ (in\ module\ bpy.types)',\ u'bpy.types.RenderEngine.render',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.render" ids="bpy.types.RenderEngine.render" module="bpy.types" names="bpy.types.RenderEngine.render"><desc_name xml:space="preserve">render</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.RenderSettings" refuri="bpy.types.RenderSettings#bpy.types.RenderSettings"><literal classes="xref py py-class">RenderSettings</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'RenderEngine.resolution_x\ (in\ module\ bpy.types)',\ u'bpy.types.RenderEngine.resolution_x',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.resolution_x" ids="bpy.types.RenderEngine.resolution_x" module="bpy.types" names="bpy.types.RenderEngine.resolution_x"><desc_name xml:space="preserve">resolution_x</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [-inf, inf], default 0, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'RenderEngine.resolution_y\ (in\ module\ bpy.types)',\ u'bpy.types.RenderEngine.resolution_y',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.resolution_y" ids="bpy.types.RenderEngine.resolution_y" module="bpy.types" names="bpy.types.RenderEngine.resolution_y"><desc_name xml:space="preserve">resolution_y</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [-inf, inf], default 0, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'tile_x\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.tile_x',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.tile_x" ids="bpy.types.RenderEngine.tile_x" module="bpy.types" names="bpy.types.RenderEngine.tile_x"><desc_name xml:space="preserve">tile_x</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'tile_y\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.tile_y',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.tile_y" ids="bpy.types.RenderEngine.tile_y" module="bpy.types" names="bpy.types.RenderEngine.tile_y"><desc_name xml:space="preserve">tile_y</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_highlight_tiles\ (bpy.types.RenderEngine\ attribute)',\ u'bpy.types.RenderEngine.use_highlight_tiles',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.use_highlight_tiles" ids="bpy.types.RenderEngine.use_highlight_tiles" module="bpy.types" names="bpy.types.RenderEngine.use_highlight_tiles"><desc_name xml:space="preserve">use_highlight_tiles</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.update',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.update" ids="bpy.types.RenderEngine.update" module="bpy.types" names="bpy.types.RenderEngine.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data=None</desc_parameter><desc_parameter xml:space="preserve">depsgraph=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Export scene data for render</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'render()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.render',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.render" module="bpy.types"><desc_name xml:space="preserve">render</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Render scene into an image</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bake()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.bake',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bake" ids="bpy.types.RenderEngine.bake" module="bpy.types" names="bpy.types.RenderEngine.bake"><desc_name xml:space="preserve">bake</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph</desc_parameter><desc_parameter xml:space="preserve">object</desc_parameter><desc_parameter xml:space="preserve">pass_type</desc_parameter><desc_parameter xml:space="preserve">pass_filter</desc_parameter><desc_parameter xml:space="preserve">object_id</desc_parameter><desc_parameter xml:space="preserve">pixel_array</desc_parameter><desc_parameter xml:space="preserve">num_pixels</desc_parameter><desc_parameter xml:space="preserve">depth</desc_parameter><desc_parameter xml:space="preserve">result</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Bake passes</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">pass_type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'COMBINED'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'AO'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SHADOW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NORMAL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'UV'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ROUGHNESS'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EMIT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ENVIRONMENT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DIFFUSE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'GLOSSY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TRANSMISSION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SUBSURFACE'</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Pass, Pass to bake</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">pass_filter</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Pass Filter, Filter to combined, diffuse, glossy, transmission and subsurface passes</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">object_id</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Object Id, Id of the current object being baked in relation to the others</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">num_pixels</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Number of Pixels, Size of the baking batch</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">depth</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Pixels depth, Number of channels</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'view_update()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.view_update',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.view_update" ids="bpy.types.RenderEngine.view_update" module="bpy.types" names="bpy.types.RenderEngine.view_update"><desc_name xml:space="preserve">view_update</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update on data changes for viewport render</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'view_draw()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.view_draw',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.view_draw" ids="bpy.types.RenderEngine.view_draw" module="bpy.types" names="bpy.types.RenderEngine.view_draw"><desc_name xml:space="preserve">view_draw</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Draw viewport render</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_script_node()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.update_script_node',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.update_script_node" ids="bpy.types.RenderEngine.update_script_node" module="bpy.types" names="bpy.types.RenderEngine.update_script_node"><desc_name xml:space="preserve">update_script_node</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">node=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Compile shader script node</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_render_passes()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.update_render_passes',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.update_render_passes" ids="bpy.types.RenderEngine.update_render_passes" module="bpy.types" names="bpy.types.RenderEngine.update_render_passes"><desc_name xml:space="preserve">update_render_passes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene=None</desc_parameter><desc_parameter xml:space="preserve">renderlayer=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update the render passes that will be generated</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'tag_redraw()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.tag_redraw',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.tag_redraw" ids="bpy.types.RenderEngine.tag_redraw" module="bpy.types" names="bpy.types.RenderEngine.tag_redraw"><desc_name xml:space="preserve">tag_redraw</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Request redraw for viewport rendering</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'tag_update()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.tag_update',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.tag_update" ids="bpy.types.RenderEngine.tag_update" module="bpy.types" names="bpy.types.RenderEngine.tag_update"><desc_name xml:space="preserve">tag_update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Request update call for viewport rendering</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'begin_result()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.begin_result',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.begin_result" ids="bpy.types.RenderEngine.begin_result" module="bpy.types" names="bpy.types.RenderEngine.begin_result"><desc_name xml:space="preserve">begin_result</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">x</desc_parameter><desc_parameter xml:space="preserve">y</desc_parameter><desc_parameter xml:space="preserve">w</desc_parameter><desc_parameter xml:space="preserve">h</desc_parameter><desc_parameter xml:space="preserve">layer=""</desc_parameter><desc_parameter xml:space="preserve">view=""</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create render result to write linear floating point render layers and passes</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">x</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – X</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">y</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Y</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">w</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Width</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">h</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Height</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">layer</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Layer, Single layer to get render result for</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">view</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – View, Single view to get render result for</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Result</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.RenderResult" refuri="bpy.types.RenderResult#bpy.types.RenderResult"><literal classes="xref py py-class">RenderResult</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_result()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.update_result',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.update_result" ids="bpy.types.RenderEngine.update_result" module="bpy.types" names="bpy.types.RenderEngine.update_result"><desc_name xml:space="preserve">update_result</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">result</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Signal that pixels have been updated and can be redrawn in the user interface</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">result</literal_strong> (<reference internal="True" reftitle="bpy.types.RenderResult" refuri="bpy.types.RenderResult#bpy.types.RenderResult"><literal classes="xref py py-class">RenderResult</literal></reference>) – Result</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'end_result()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.end_result',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.end_result" ids="bpy.types.RenderEngine.end_result" module="bpy.types" names="bpy.types.RenderEngine.end_result"><desc_name xml:space="preserve">end_result</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">result</desc_parameter><desc_parameter xml:space="preserve">cancel=False</desc_parameter><desc_parameter xml:space="preserve">highlight=False</desc_parameter><desc_parameter xml:space="preserve">do_merge_results=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>All pixels in the render result have been set and are final</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">result</literal_strong> (<reference internal="True" reftitle="bpy.types.RenderResult" refuri="bpy.types.RenderResult#bpy.types.RenderResult"><literal classes="xref py py-class">RenderResult</literal></reference>) – Result</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">cancel</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Cancel, Don’t mark tile as done, don’t merge results unless forced</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">highlight</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Highlight, Don’t mark tile as done yet</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">do_merge_results</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Merge Results, Merge results even if cancel=true</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'add_pass()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.add_pass',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.add_pass" ids="bpy.types.RenderEngine.add_pass" module="bpy.types" names="bpy.types.RenderEngine.add_pass"><desc_name xml:space="preserve">add_pass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">channels</desc_parameter><desc_parameter xml:space="preserve">chan_id</desc_parameter><desc_parameter xml:space="preserve">layer=""</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Add a pass to the render layer</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">name</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Name, Name of the Pass, without view or channel tag</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">channels</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Channels</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">chan_id</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Channel IDs, Channel names, one character per channel</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">layer</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Layer, Single layer to add render pass to</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'get_result()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.get_result',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.get_result" ids="bpy.types.RenderEngine.get_result" module="bpy.types" names="bpy.types.RenderEngine.get_result"><desc_name xml:space="preserve">get_result</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get final result for non-pixel operations</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Result</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.RenderResult" refuri="bpy.types.RenderResult#bpy.types.RenderResult"><literal classes="xref py py-class">RenderResult</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'test_break()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.test_break',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.test_break" ids="bpy.types.RenderEngine.test_break" module="bpy.types" names="bpy.types.RenderEngine.test_break"><desc_name xml:space="preserve">test_break</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Test if the render operation should been canceled, this is a fast call that should be used regularly for responsiveness</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Break</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'active_view_get()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.active_view_get',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.active_view_get" ids="bpy.types.RenderEngine.active_view_get" module="bpy.types" names="bpy.types.RenderEngine.active_view_get"><desc_name xml:space="preserve">active_view_get</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>active_view_get</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>View, Single view active</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>string, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'active_view_set()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.active_view_set',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.active_view_set" ids="bpy.types.RenderEngine.active_view_set" module="bpy.types" names="bpy.types.RenderEngine.active_view_set"><desc_name xml:space="preserve">active_view_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>active_view_set</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">view</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – View, Single view to set as active</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'camera_shift_x()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.camera_shift_x',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.camera_shift_x" ids="bpy.types.RenderEngine.camera_shift_x" module="bpy.types" names="bpy.types.RenderEngine.camera_shift_x"><desc_name xml:space="preserve">camera_shift_x</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">camera</desc_parameter><desc_parameter xml:space="preserve">use_spherical_stereo=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>camera_shift_x</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">use_spherical_stereo</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Spherical Stereo</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Shift X</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>float in [0, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'camera_model_matrix()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.camera_model_matrix',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.camera_model_matrix" ids="bpy.types.RenderEngine.camera_model_matrix" module="bpy.types" names="bpy.types.RenderEngine.camera_model_matrix"><desc_name xml:space="preserve">camera_model_matrix</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">camera</desc_parameter><desc_parameter xml:space="preserve">use_spherical_stereo=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>camera_model_matrix</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">use_spherical_stereo</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Spherical Stereo</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Model Matrix, Normalized camera model matrix</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_spherical_stereo()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.use_spherical_stereo',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.use_spherical_stereo" ids="bpy.types.RenderEngine.use_spherical_stereo" module="bpy.types" names="bpy.types.RenderEngine.use_spherical_stereo"><desc_name xml:space="preserve">use_spherical_stereo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">camera</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>use_spherical_stereo</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Spherical Stereo</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_stats()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.update_stats',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.update_stats" ids="bpy.types.RenderEngine.update_stats" module="bpy.types" names="bpy.types.RenderEngine.update_stats"><desc_name xml:space="preserve">update_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stats</desc_parameter><desc_parameter xml:space="preserve">info</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update and signal to redraw render status text</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">stats</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Stats</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">info</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Info</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'frame_set()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.frame_set',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.frame_set" ids="bpy.types.RenderEngine.frame_set" module="bpy.types" names="bpy.types.RenderEngine.frame_set"><desc_name xml:space="preserve">frame_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">frame</desc_parameter><desc_parameter xml:space="preserve">subframe</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Evaluate scene at a different frame (for motion blur)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Frame</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">subframe</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Subframe</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_progress()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.update_progress',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.update_progress" ids="bpy.types.RenderEngine.update_progress" module="bpy.types" names="bpy.types.RenderEngine.update_progress"><desc_name xml:space="preserve">update_progress</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">progress</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update progress percentage of render</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">progress</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Percentage of render that’s done</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_memory_stats()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.update_memory_stats',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.update_memory_stats" ids="bpy.types.RenderEngine.update_memory_stats" module="bpy.types" names="bpy.types.RenderEngine.update_memory_stats"><desc_name xml:space="preserve">update_memory_stats</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">memory_used=0.0</desc_parameter><desc_parameter xml:space="preserve">memory_peak=0.0</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update memory usage statistics</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">memory_used</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Current memory usage in megabytes</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">memory_peak</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Peak memory usage in megabytes</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'report()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.report',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.report" ids="bpy.types.RenderEngine.report" module="bpy.types" names="bpy.types.RenderEngine.report"><desc_name xml:space="preserve">report</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type</desc_parameter><desc_parameter xml:space="preserve">message</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Report info, warning or error messages</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum set in {'DEBUG'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'INFO'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'OPERATOR'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'PROPERTY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'WARNING'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ERROR'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ERROR_INVALID_INPUT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ERROR_INVALID_CONTEXT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ERROR_OUT_OF_MEMORY'}</literal_emphasis>) – Type</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">message</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Report Message</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'error_set()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.error_set',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.error_set" ids="bpy.types.RenderEngine.error_set" module="bpy.types" names="bpy.types.RenderEngine.error_set"><desc_name xml:space="preserve">error_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">message</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Set error message displaying after the render is finished</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">message</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Report Message</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bind_display_space_shader()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.bind_display_space_shader',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bind_display_space_shader" ids="bpy.types.RenderEngine.bind_display_space_shader" module="bpy.types" names="bpy.types.RenderEngine.bind_display_space_shader"><desc_name xml:space="preserve">bind_display_space_shader</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Bind GLSL fragment shader that converts linear colors to display space colors using scene color management settings</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'unbind_display_space_shader()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.unbind_display_space_shader',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.unbind_display_space_shader" ids="bpy.types.RenderEngine.unbind_display_space_shader" module="bpy.types" names="bpy.types.RenderEngine.unbind_display_space_shader"><desc_name xml:space="preserve">unbind_display_space_shader</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Unbind GLSL display space shader, must always be called after binding the shader</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'support_display_space_shader()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.support_display_space_shader',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.support_display_space_shader" ids="bpy.types.RenderEngine.support_display_space_shader" module="bpy.types" names="bpy.types.RenderEngine.support_display_space_shader"><desc_name xml:space="preserve">support_display_space_shader</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Test if GLSL display space shader is supported for the combination of graphics card and scene settings</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Supported</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'get_preview_pixel_size()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.get_preview_pixel_size',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.get_preview_pixel_size" ids="bpy.types.RenderEngine.get_preview_pixel_size" module="bpy.types" names="bpy.types.RenderEngine.get_preview_pixel_size"><desc_name xml:space="preserve">get_preview_pixel_size</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Free Blender side memory of render engine</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Pixel Size</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>int in [1, 8]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'free_blender_memory()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.free_blender_memory',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.free_blender_memory" ids="bpy.types.RenderEngine.free_blender_memory" module="bpy.types" names="bpy.types.RenderEngine.free_blender_memory"><desc_name xml:space="preserve">free_blender_memory</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>free_blender_memory</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'register_pass()\ (bpy.types.RenderEngine\ method)',\ u'bpy.types.RenderEngine.register_pass',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.register_pass" ids="bpy.types.RenderEngine.register_pass" module="bpy.types" names="bpy.types.RenderEngine.register_pass"><desc_name xml:space="preserve">register_pass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene</desc_parameter><desc_parameter xml:space="preserve">view_layer</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">channels</desc_parameter><desc_parameter xml:space="preserve">chanid</desc_parameter><desc_parameter xml:space="preserve">type</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Register a render pass that will be part of the render with the current settings</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">name</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Name</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">channels</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>8</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Channels</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">chanid</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Channel IDs</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'VALUE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'VECTOR'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'COLOR'</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Type</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.RenderEngine\ class\ method)',\ u'bpy.types.RenderEngine.bl_rna_get_subclass',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_rna_get_subclass" ids="bpy.types.RenderEngine.bl_rna_get_subclass" module="bpy.types" names="bpy.types.RenderEngine.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The RNA type or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.RenderEngine\ class\ method)',\ u'bpy.types.RenderEngine.bl_rna_get_subclass_py',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="RenderEngine" first="False" fullname="RenderEngine.bl_rna_get_subclass_py" ids="bpy.types.RenderEngine.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.RenderEngine.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The class or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>type</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <rubric>Inherited Properties</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>Inherited Functions</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
        </section>
    </section>
</document>
