<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.AdjustmentSequence.rst">
    <section ids="module-bpy.types adjustmentsequence-effectsequence" names="adjustmentsequence(effectsequence)">
        <title>AdjustmentSequence(EffectSequence)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.Sequence" refuri="bpy.types.Sequence#bpy.types.Sequence"><literal classes="xref py py-class">Sequence</literal></reference>, <reference internal="True" reftitle="bpy.types.EffectSequence" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence"><literal classes="xref py py-class">EffectSequence</literal></reference></paragraph>
        <index entries="['single',\ u'AdjustmentSequence\ (class\ in\ bpy.types)',\ u'bpy.types.AdjustmentSequence',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="AdjustmentSequence" ids="bpy.types.AdjustmentSequence" module="bpy.types" names="bpy.types.AdjustmentSequence"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">AdjustmentSequence</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">EffectSequence</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Sequence strip to perform filter adjustments to layers below</paragraph>
                <index entries="['single',\ u'animation_offset_end\ (bpy.types.AdjustmentSequence\ attribute)',\ u'bpy.types.AdjustmentSequence.animation_offset_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AdjustmentSequence" first="False" fullname="AdjustmentSequence.animation_offset_end" ids="bpy.types.AdjustmentSequence.animation_offset_end" module="bpy.types" names="bpy.types.AdjustmentSequence.animation_offset_end"><desc_name xml:space="preserve">animation_offset_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation end offset (trim end)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'animation_offset_start\ (bpy.types.AdjustmentSequence\ attribute)',\ u'bpy.types.AdjustmentSequence.animation_offset_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AdjustmentSequence" first="False" fullname="AdjustmentSequence.animation_offset_start" ids="bpy.types.AdjustmentSequence.animation_offset_start" module="bpy.types" names="bpy.types.AdjustmentSequence.animation_offset_start"><desc_name xml:space="preserve">animation_offset_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation start offset (trim start)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'AdjustmentSequence.input_count\ (in\ module\ bpy.types)',\ u'bpy.types.AdjustmentSequence.input_count',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="AdjustmentSequence" first="False" fullname="AdjustmentSequence.input_count" ids="bpy.types.AdjustmentSequence.input_count" module="bpy.types" names="bpy.types.AdjustmentSequence.input_count"><desc_name xml:space="preserve">input_count</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.AdjustmentSequence\ class\ method)',\ u'bpy.types.AdjustmentSequence.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AdjustmentSequence" first="False" fullname="AdjustmentSequence.bl_rna_get_subclass" ids="bpy.types.AdjustmentSequence.bl_rna_get_subclass" module="bpy.types" names="bpy.types.AdjustmentSequence.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.AdjustmentSequence\ class\ method)',\ u'bpy.types.AdjustmentSequence.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AdjustmentSequence" first="False" fullname="AdjustmentSequence.bl_rna_get_subclass_py" ids="bpy.types.AdjustmentSequence.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.AdjustmentSequence.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.name" refuri="bpy.types.Sequence#bpy.types.Sequence.name"><literal classes="xref py py-class">Sequence.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.type" refuri="bpy.types.Sequence#bpy.types.Sequence.type"><literal classes="xref py py-class">Sequence.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.select" refuri="bpy.types.Sequence#bpy.types.Sequence.select"><literal classes="xref py py-class">Sequence.select</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.select_left_handle" refuri="bpy.types.Sequence#bpy.types.Sequence.select_left_handle"><literal classes="xref py py-class">Sequence.select_left_handle</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.select_right_handle" refuri="bpy.types.Sequence#bpy.types.Sequence.select_right_handle"><literal classes="xref py py-class">Sequence.select_right_handle</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.mute" refuri="bpy.types.Sequence#bpy.types.Sequence.mute"><literal classes="xref py py-class">Sequence.mute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.lock" refuri="bpy.types.Sequence#bpy.types.Sequence.lock"><literal classes="xref py py-class">Sequence.lock</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_final_duration" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_final_duration"><literal classes="xref py py-class">Sequence.frame_final_duration</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_duration" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_duration"><literal classes="xref py py-class">Sequence.frame_duration</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_start"><literal classes="xref py py-class">Sequence.frame_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_final_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_final_start"><literal classes="xref py py-class">Sequence.frame_final_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_final_end" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_final_end"><literal classes="xref py py-class">Sequence.frame_final_end</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_offset_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_offset_start"><literal classes="xref py py-class">Sequence.frame_offset_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_offset_end" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_offset_end"><literal classes="xref py py-class">Sequence.frame_offset_end</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_still_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_still_start"><literal classes="xref py py-class">Sequence.frame_still_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_still_end" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_still_end"><literal classes="xref py py-class">Sequence.frame_still_end</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.channel" refuri="bpy.types.Sequence#bpy.types.Sequence.channel"><literal classes="xref py py-class">Sequence.channel</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.use_linear_modifiers" refuri="bpy.types.Sequence#bpy.types.Sequence.use_linear_modifiers"><literal classes="xref py py-class">Sequence.use_linear_modifiers</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.blend_type" refuri="bpy.types.Sequence#bpy.types.Sequence.blend_type"><literal classes="xref py py-class">Sequence.blend_type</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.blend_alpha" refuri="bpy.types.Sequence#bpy.types.Sequence.blend_alpha"><literal classes="xref py py-class">Sequence.blend_alpha</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.effect_fader" refuri="bpy.types.Sequence#bpy.types.Sequence.effect_fader"><literal classes="xref py py-class">Sequence.effect_fader</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.use_default_fade" refuri="bpy.types.Sequence#bpy.types.Sequence.use_default_fade"><literal classes="xref py py-class">Sequence.use_default_fade</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.speed_factor" refuri="bpy.types.Sequence#bpy.types.Sequence.speed_factor"><literal classes="xref py py-class">Sequence.speed_factor</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.modifiers" refuri="bpy.types.Sequence#bpy.types.Sequence.modifiers"><literal classes="xref py py-class">Sequence.modifiers</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_deinterlace" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_deinterlace"><literal classes="xref py py-class">EffectSequence.use_deinterlace</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.alpha_mode" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.alpha_mode"><literal classes="xref py py-class">EffectSequence.alpha_mode</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_flip_x" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_flip_x"><literal classes="xref py py-class">EffectSequence.use_flip_x</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_flip_y" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_flip_y"><literal classes="xref py py-class">EffectSequence.use_flip_y</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_float" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_float"><literal classes="xref py py-class">EffectSequence.use_float</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_reverse_frames" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_reverse_frames"><literal classes="xref py py-class">EffectSequence.use_reverse_frames</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.color_multiply" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.color_multiply"><literal classes="xref py py-class">EffectSequence.color_multiply</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.color_saturation" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.color_saturation"><literal classes="xref py py-class">EffectSequence.color_saturation</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.strobe" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.strobe"><literal classes="xref py py-class">EffectSequence.strobe</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_translation" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_translation"><literal classes="xref py py-class">EffectSequence.use_translation</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.transform" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.transform"><literal classes="xref py py-class">EffectSequence.transform</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_crop" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_crop"><literal classes="xref py py-class">EffectSequence.use_crop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.crop" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.crop"><literal classes="xref py py-class">EffectSequence.crop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.use_proxy" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.use_proxy"><literal classes="xref py py-class">EffectSequence.use_proxy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.EffectSequence.proxy" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence.proxy"><literal classes="xref py py-class">EffectSequence.proxy</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.update" refuri="bpy.types.Sequence#bpy.types.Sequence.update"><literal classes="xref py py-class">Sequence.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.strip_elem_from_frame" refuri="bpy.types.Sequence#bpy.types.Sequence.strip_elem_from_frame"><literal classes="xref py py-class">Sequence.strip_elem_from_frame</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.swap" refuri="bpy.types.Sequence#bpy.types.Sequence.swap"><literal classes="xref py py-class">Sequence.swap</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
