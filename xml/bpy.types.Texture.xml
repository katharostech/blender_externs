<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Texture.rst">
    <section ids="module-bpy.types texture-id" names="texture(id)">
        <title>Texture(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.BlendTexture" refuri="bpy.types.BlendTexture#bpy.types.BlendTexture"><literal classes="xref py py-class">BlendTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.CloudsTexture" refuri="bpy.types.CloudsTexture#bpy.types.CloudsTexture"><literal classes="xref py py-class">CloudsTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.DistortedNoiseTexture" refuri="bpy.types.DistortedNoiseTexture#bpy.types.DistortedNoiseTexture"><literal classes="xref py py-class">DistortedNoiseTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.ImageTexture" refuri="bpy.types.ImageTexture#bpy.types.ImageTexture"><literal classes="xref py py-class">ImageTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.MagicTexture" refuri="bpy.types.MagicTexture#bpy.types.MagicTexture"><literal classes="xref py py-class">MagicTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.MarbleTexture" refuri="bpy.types.MarbleTexture#bpy.types.MarbleTexture"><literal classes="xref py py-class">MarbleTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.MusgraveTexture" refuri="bpy.types.MusgraveTexture#bpy.types.MusgraveTexture"><literal classes="xref py py-class">MusgraveTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.NoiseTexture" refuri="bpy.types.NoiseTexture#bpy.types.NoiseTexture"><literal classes="xref py py-class">NoiseTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.StucciTexture" refuri="bpy.types.StucciTexture#bpy.types.StucciTexture"><literal classes="xref py py-class">StucciTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.VoronoiTexture" refuri="bpy.types.VoronoiTexture#bpy.types.VoronoiTexture"><literal classes="xref py py-class">VoronoiTexture</literal></reference>, <reference internal="True" reftitle="bpy.types.WoodTexture" refuri="bpy.types.WoodTexture#bpy.types.WoodTexture"><literal classes="xref py py-class">WoodTexture</literal></reference></paragraph>
        <index entries="['single',\ u'Texture\ (class\ in\ bpy.types)',\ u'bpy.types.Texture',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Texture" ids="bpy.types.Texture" module="bpy.types" names="bpy.types.Texture"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Texture</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Texture data-block used by materials, lights, worlds and brushes</paragraph>
                <index entries="['single',\ u'Texture.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.Texture.animation_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Texture" first="False" fullname="Texture.animation_data" ids="bpy.types.Texture.animation_data" module="bpy.types" names="bpy.types.Texture.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation data for this data-block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Texture.color_ramp\ (in\ module\ bpy.types)',\ u'bpy.types.Texture.color_ramp',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Texture" first="False" fullname="Texture.color_ramp" ids="bpy.types.Texture.color_ramp" module="bpy.types" names="bpy.types.Texture.color_ramp"><desc_name xml:space="preserve">color_ramp</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorRamp" refuri="bpy.types.ColorRamp#bpy.types.ColorRamp"><literal classes="xref py py-class">ColorRamp</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'contrast\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.contrast',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.contrast" ids="bpy.types.Texture.contrast" module="bpy.types" names="bpy.types.Texture.contrast"><desc_name xml:space="preserve">contrast</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Adjust the contrast of the texture</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 5], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'factor_blue\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.factor_blue',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.factor_blue" ids="bpy.types.Texture.factor_blue" module="bpy.types" names="bpy.types.Texture.factor_blue"><desc_name xml:space="preserve">factor_blue</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 2], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'factor_green\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.factor_green',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.factor_green" ids="bpy.types.Texture.factor_green" module="bpy.types" names="bpy.types.Texture.factor_green"><desc_name xml:space="preserve">factor_green</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 2], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'factor_red\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.factor_red',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.factor_red" ids="bpy.types.Texture.factor_red" module="bpy.types" names="bpy.types.Texture.factor_red"><desc_name xml:space="preserve">factor_red</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 2], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'intensity\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.intensity',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.intensity" ids="bpy.types.Texture.intensity" module="bpy.types" names="bpy.types.Texture.intensity"><desc_name xml:space="preserve">intensity</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Adjust the brightness of the texture</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 2], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Texture.node_tree\ (in\ module\ bpy.types)',\ u'bpy.types.Texture.node_tree',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Texture" first="False" fullname="Texture.node_tree" ids="bpy.types.Texture.node_tree" module="bpy.types" names="bpy.types.Texture.node_tree"><desc_name xml:space="preserve">node_tree</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Node tree for node-based textures</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.NodeTree" refuri="bpy.types.NodeTree#bpy.types.NodeTree"><literal classes="xref py py-class">NodeTree</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'saturation\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.saturation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.saturation" ids="bpy.types.Texture.saturation" module="bpy.types" names="bpy.types.Texture.saturation"><desc_name xml:space="preserve">saturation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Adjust the saturation of colors in the texture</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 2], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'type\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.type" ids="bpy.types.Texture.type" module="bpy.types" names="bpy.types.Texture.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NONE</literal> None.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>BLEND</literal> Blend, Procedural - create a ramp texture.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CLOUDS</literal> Clouds, Procedural - create a cloud-like fractal noise texture.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DISTORTED_NOISE</literal> Distorted Noise, Procedural - noise texture distorted by two noise algorithms.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>IMAGE</literal> Image or Movie, Allow for images or movies to be used as textures.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MAGIC</literal> Magic, Procedural - color texture based on trigonometric functions.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MARBLE</literal> Marble, Procedural - marble-like noise texture with wave generated bands.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MUSGRAVE</literal> Musgrave, Procedural - highly flexible fractal noise texture.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NOISE</literal> Noise, Procedural - random noise, gives a different result every time, for every frame, for every pixel.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>STUCCI</literal> Stucci, Procedural - create a fractal noise texture.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VORONOI</literal> Voronoi, Procedural - create cell-like patterns based on Worley noise.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>WOOD</literal> Wood, Procedural - wave generated bands or rings, with optional noise.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘BLEND’, ‘CLOUDS’, ‘DISTORTED_NOISE’, ‘IMAGE’, ‘MAGIC’, ‘MARBLE’, ‘MUSGRAVE’, ‘NOISE’, ‘STUCCI’, ‘VORONOI’, ‘WOOD’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_clamp\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.use_clamp',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.use_clamp" ids="bpy.types.Texture.use_clamp" module="bpy.types" names="bpy.types.Texture.use_clamp"><desc_name xml:space="preserve">use_clamp</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Set negative texture RGB and intensity values to zero, for some uses like displacement this option can be disabled to get the full range</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_color_ramp\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.use_color_ramp',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.use_color_ramp" ids="bpy.types.Texture.use_color_ramp" module="bpy.types" names="bpy.types.Texture.use_color_ramp"><desc_name xml:space="preserve">use_color_ramp</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Toggle color ramp operations</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_nodes\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.use_nodes',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.use_nodes" ids="bpy.types.Texture.use_nodes" module="bpy.types" names="bpy.types.Texture.use_nodes"><desc_name xml:space="preserve">use_nodes</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Make this a node-based texture</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_preview_alpha\ (bpy.types.Texture\ attribute)',\ u'bpy.types.Texture.use_preview_alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Texture" first="False" fullname="Texture.use_preview_alpha" ids="bpy.types.Texture.use_preview_alpha" module="bpy.types" names="bpy.types.Texture.use_preview_alpha"><desc_name xml:space="preserve">use_preview_alpha</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Show Alpha in Preview Render</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Texture.users_material\ (in\ module\ bpy.types)',\ u'bpy.types.Texture.users_material',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Texture" first="False" fullname="Texture.users_material" ids="bpy.types.Texture.users_material" module="bpy.types" names="bpy.types.Texture.users_material"><desc_name xml:space="preserve">users_material</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Materials that use this texture
                            (readonly)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Texture.users_object_modifier\ (in\ module\ bpy.types)',\ u'bpy.types.Texture.users_object_modifier',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Texture" first="False" fullname="Texture.users_object_modifier" ids="bpy.types.Texture.users_object_modifier" module="bpy.types" names="bpy.types.Texture.users_object_modifier"><desc_name xml:space="preserve">users_object_modifier</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Object modifiers that use this texture
                            (readonly)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'evaluate()\ (bpy.types.Texture\ method)',\ u'bpy.types.Texture.evaluate',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Texture" first="False" fullname="Texture.evaluate" ids="bpy.types.Texture.evaluate" module="bpy.types" names="bpy.types.Texture.evaluate"><desc_name xml:space="preserve">evaluate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">value</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Evaluate the texture at the coordinates given</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Result</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float array of 4 items in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Texture\ class\ method)',\ u'bpy.types.Texture.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Texture" first="False" fullname="Texture.bl_rna_get_subclass" ids="bpy.types.Texture.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Texture.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Texture\ class\ method)',\ u'bpy.types.Texture.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Texture" first="False" fullname="Texture.bl_rna_get_subclass_py" ids="bpy.types.Texture.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Texture.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.texture" refuri="bpy.context#bpy.context.texture"><literal classes="xref py py-mod">bpy.context.texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.textures" refuri="bpy.types.BlendData#bpy.types.BlendData.textures"><literal classes="xref py py-class">BlendData.textures</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataTextures.new" refuri="bpy.types.BlendDataTextures#bpy.types.BlendDataTextures.new"><literal classes="xref py py-class">BlendDataTextures.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataTextures.remove" refuri="bpy.types.BlendDataTextures#bpy.types.BlendDataTextures.remove"><literal classes="xref py py-class">BlendDataTextures.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Brush.mask_texture" refuri="bpy.types.Brush#bpy.types.Brush.mask_texture"><literal classes="xref py py-class">Brush.mask_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Brush.texture" refuri="bpy.types.Brush#bpy.types.Brush.texture"><literal classes="xref py py-class">Brush.texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeTexture.texture" refuri="bpy.types.CompositorNodeTexture#bpy.types.CompositorNodeTexture.texture"><literal classes="xref py py-class">CompositorNodeTexture.texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.DisplaceModifier.texture" refuri="bpy.types.DisplaceModifier#bpy.types.DisplaceModifier.texture"><literal classes="xref py py-class">DisplaceModifier.texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.DynamicPaintSurface.init_texture" refuri="bpy.types.DynamicPaintSurface#bpy.types.DynamicPaintSurface.init_texture"><literal classes="xref py py-class">DynamicPaintSurface.init_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FieldSettings.texture" refuri="bpy.types.FieldSettings#bpy.types.FieldSettings.texture"><literal classes="xref py py-class">FieldSettings.texture</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FreestyleLineStyle.active_texture" refuri="bpy.types.FreestyleLineStyle#bpy.types.FreestyleLineStyle.active_texture"><literal classes="xref py py-class">FreestyleLineStyle.active_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ParticleSettings.active_texture" refuri="bpy.types.ParticleSettings#bpy.types.ParticleSettings.active_texture"><literal classes="xref py py-class">ParticleSettings.active_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SmokeFlowSettings.noise_texture" refuri="bpy.types.SmokeFlowSettings#bpy.types.SmokeFlowSettings.noise_texture"><literal classes="xref py py-class">SmokeFlowSettings.noise_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.TextureNodeTexture.texture" refuri="bpy.types.TextureNodeTexture#bpy.types.TextureNodeTexture.texture"><literal classes="xref py py-class">TextureNodeTexture.texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.TextureSlot.texture" refuri="bpy.types.TextureSlot#bpy.types.TextureSlot.texture"><literal classes="xref py py-class">TextureSlot.texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.VertexWeightEditModifier.mask_texture" refuri="bpy.types.VertexWeightEditModifier#bpy.types.VertexWeightEditModifier.mask_texture"><literal classes="xref py py-class">VertexWeightEditModifier.mask_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.VertexWeightMixModifier.mask_texture" refuri="bpy.types.VertexWeightMixModifier#bpy.types.VertexWeightMixModifier.mask_texture"><literal classes="xref py py-class">VertexWeightMixModifier.mask_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.VertexWeightProximityModifier.mask_texture" refuri="bpy.types.VertexWeightProximityModifier#bpy.types.VertexWeightProximityModifier.mask_texture"><literal classes="xref py py-class">VertexWeightProximityModifier.mask_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.WarpModifier.texture" refuri="bpy.types.WarpModifier#bpy.types.WarpModifier.texture"><literal classes="xref py py-class">WarpModifier.texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.WaveModifier.texture" refuri="bpy.types.WaveModifier#bpy.types.WaveModifier.texture"><literal classes="xref py py-class">WaveModifier.texture</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
