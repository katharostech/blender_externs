<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ImageTexture.rst">
    <section ids="module-bpy.types imagetexture-texture" names="imagetexture(texture)">
        <title>ImageTexture(Texture)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>, <reference internal="True" reftitle="bpy.types.Texture" refuri="bpy.types.Texture#bpy.types.Texture"><literal classes="xref py py-class">Texture</literal></reference></paragraph>
        <index entries="['single',\ u'ImageTexture\ (class\ in\ bpy.types)',\ u'bpy.types.ImageTexture',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ImageTexture" ids="bpy.types.ImageTexture" module="bpy.types" names="bpy.types.ImageTexture"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ImageTexture</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">Texture</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ u'checker_distance\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.checker_distance',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.checker_distance" ids="bpy.types.ImageTexture.checker_distance" module="bpy.types" names="bpy.types.ImageTexture.checker_distance"><desc_name xml:space="preserve">checker_distance</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Distance between checker tiles</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 0.99], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'crop_max_x\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.crop_max_x',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.crop_max_x" ids="bpy.types.ImageTexture.crop_max_x" module="bpy.types" names="bpy.types.ImageTexture.crop_max_x"><desc_name xml:space="preserve">crop_max_x</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum X value to crop the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-10, 10], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'crop_max_y\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.crop_max_y',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.crop_max_y" ids="bpy.types.ImageTexture.crop_max_y" module="bpy.types" names="bpy.types.ImageTexture.crop_max_y"><desc_name xml:space="preserve">crop_max_y</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum Y value to crop the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-10, 10], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'crop_min_x\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.crop_min_x',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.crop_min_x" ids="bpy.types.ImageTexture.crop_min_x" module="bpy.types" names="bpy.types.ImageTexture.crop_min_x"><desc_name xml:space="preserve">crop_min_x</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Minimum X value to crop the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-10, 10], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'crop_min_y\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.crop_min_y',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.crop_min_y" ids="bpy.types.ImageTexture.crop_min_y" module="bpy.types" names="bpy.types.ImageTexture.crop_min_y"><desc_name xml:space="preserve">crop_min_y</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Minimum Y value to crop the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-10, 10], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'extension\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.extension',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.extension" ids="bpy.types.ImageTexture.extension" module="bpy.types" names="bpy.types.ImageTexture.extension"><desc_name xml:space="preserve">extension</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>How the image is extrapolated past its original bounds</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>EXTEND</literal> Extend, Extend by repeating edge pixels of the image.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CLIP</literal> Clip, Clip to image size and set exterior pixels as transparent.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CLIP_CUBE</literal> Clip Cube, Clip to cubic-shaped area around the image and set exterior pixels as transparent.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>REPEAT</literal> Repeat, Cause the image to repeat horizontally and vertically.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CHECKER</literal> Checker, Cause the image to repeat in checker board pattern.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘EXTEND’, ‘CLIP’, ‘CLIP_CUBE’, ‘REPEAT’, ‘CHECKER’], default ‘EXTEND’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filter_eccentricity\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.filter_eccentricity',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.filter_eccentricity" ids="bpy.types.ImageTexture.filter_eccentricity" module="bpy.types" names="bpy.types.ImageTexture.filter_eccentricity"><desc_name xml:space="preserve">filter_eccentricity</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum eccentricity (higher gives less blur at distant/oblique angles, but is also slower)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 256], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filter_lightprobes\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.filter_lightprobes',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.filter_lightprobes" ids="bpy.types.ImageTexture.filter_lightprobes" module="bpy.types" names="bpy.types.ImageTexture.filter_lightprobes"><desc_name xml:space="preserve">filter_lightprobes</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum number of samples (higher gives less blur at distant/oblique angles, but is also slower)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 256], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filter_size\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.filter_size',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.filter_size" ids="bpy.types.ImageTexture.filter_size" module="bpy.types" names="bpy.types.ImageTexture.filter_size"><desc_name xml:space="preserve">filter_size</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Multiply the filter size used by MIP Map and Interpolation</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0.1, 50], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filter_type\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.filter_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.filter_type" ids="bpy.types.ImageTexture.filter_type" module="bpy.types" names="bpy.types.ImageTexture.filter_type"><desc_name xml:space="preserve">filter_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Texture filter to use for sampling image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘BOX’, ‘EWA’, ‘FELINE’, ‘AREA’], default ‘BOX’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'image\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.image',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.image" ids="bpy.types.ImageTexture.image" module="bpy.types" names="bpy.types.ImageTexture.image"><desc_name xml:space="preserve">image</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Image" refuri="bpy.types.Image#bpy.types.Image"><literal classes="xref py py-class">Image</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ImageTexture.image_user\ (in\ module\ bpy.types)',\ u'bpy.types.ImageTexture.image_user',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.image_user" ids="bpy.types.ImageTexture.image_user" module="bpy.types" names="bpy.types.ImageTexture.image_user"><desc_name xml:space="preserve">image_user</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Parameters defining which layer, pass and frame of the image is displayed</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ImageUser" refuri="bpy.types.ImageUser#bpy.types.ImageUser"><literal classes="xref py py-class">ImageUser</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'invert_alpha\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.invert_alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.invert_alpha" ids="bpy.types.ImageTexture.invert_alpha" module="bpy.types" names="bpy.types.ImageTexture.invert_alpha"><desc_name xml:space="preserve">invert_alpha</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Invert all the alpha values in the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'repeat_x\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.repeat_x',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.repeat_x" ids="bpy.types.ImageTexture.repeat_x" module="bpy.types" names="bpy.types.ImageTexture.repeat_x"><desc_name xml:space="preserve">repeat_x</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Repetition multiplier in the X direction</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 512], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'repeat_y\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.repeat_y',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.repeat_y" ids="bpy.types.ImageTexture.repeat_y" module="bpy.types" names="bpy.types.ImageTexture.repeat_y"><desc_name xml:space="preserve">repeat_y</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Repetition multiplier in the Y direction</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 512], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_alpha\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_alpha" ids="bpy.types.ImageTexture.use_alpha" module="bpy.types" names="bpy.types.ImageTexture.use_alpha"><desc_name xml:space="preserve">use_alpha</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use the alpha channel information in the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_calculate_alpha\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_calculate_alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_calculate_alpha" ids="bpy.types.ImageTexture.use_calculate_alpha" module="bpy.types" names="bpy.types.ImageTexture.use_calculate_alpha"><desc_name xml:space="preserve">use_calculate_alpha</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Calculate an alpha channel based on RGB values in the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_checker_even\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_checker_even',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_checker_even" ids="bpy.types.ImageTexture.use_checker_even" module="bpy.types" names="bpy.types.ImageTexture.use_checker_even"><desc_name xml:space="preserve">use_checker_even</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Even checker tiles</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_checker_odd\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_checker_odd',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_checker_odd" ids="bpy.types.ImageTexture.use_checker_odd" module="bpy.types" names="bpy.types.ImageTexture.use_checker_odd"><desc_name xml:space="preserve">use_checker_odd</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Odd checker tiles</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_filter_size_min\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_filter_size_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_filter_size_min" ids="bpy.types.ImageTexture.use_filter_size_min" module="bpy.types" names="bpy.types.ImageTexture.use_filter_size_min"><desc_name xml:space="preserve">use_filter_size_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use Filter Size as a minimal filter value in pixels</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_flip_axis\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_flip_axis',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_flip_axis" ids="bpy.types.ImageTexture.use_flip_axis" module="bpy.types" names="bpy.types.ImageTexture.use_flip_axis"><desc_name xml:space="preserve">use_flip_axis</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Flip the texture’s X and Y axis</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_interpolation\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_interpolation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_interpolation" ids="bpy.types.ImageTexture.use_interpolation" module="bpy.types" names="bpy.types.ImageTexture.use_interpolation"><desc_name xml:space="preserve">use_interpolation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Interpolate pixels using selected filter</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_mipmap\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_mipmap',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_mipmap" ids="bpy.types.ImageTexture.use_mipmap" module="bpy.types" names="bpy.types.ImageTexture.use_mipmap"><desc_name xml:space="preserve">use_mipmap</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use auto-generated MIP maps for the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_mipmap_gauss\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_mipmap_gauss',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_mipmap_gauss" ids="bpy.types.ImageTexture.use_mipmap_gauss" module="bpy.types" names="bpy.types.ImageTexture.use_mipmap_gauss"><desc_name xml:space="preserve">use_mipmap_gauss</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use Gauss filter to sample down MIP maps</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_mirror_x\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_mirror_x',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_mirror_x" ids="bpy.types.ImageTexture.use_mirror_x" module="bpy.types" names="bpy.types.ImageTexture.use_mirror_x"><desc_name xml:space="preserve">use_mirror_x</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Mirror the image repetition on the X direction</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_mirror_y\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_mirror_y',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_mirror_y" ids="bpy.types.ImageTexture.use_mirror_y" module="bpy.types" names="bpy.types.ImageTexture.use_mirror_y"><desc_name xml:space="preserve">use_mirror_y</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Mirror the image repetition on the Y direction</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_normal_map\ (bpy.types.ImageTexture\ attribute)',\ u'bpy.types.ImageTexture.use_normal_map',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.use_normal_map" ids="bpy.types.ImageTexture.use_normal_map" module="bpy.types" names="bpy.types.ImageTexture.use_normal_map"><desc_name xml:space="preserve">use_normal_map</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use image RGB values for normal mapping</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ImageTexture.users_material\ (in\ module\ bpy.types)',\ u'bpy.types.ImageTexture.users_material',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.users_material" ids="bpy.types.ImageTexture.users_material" module="bpy.types" names="bpy.types.ImageTexture.users_material"><desc_name xml:space="preserve">users_material</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Materials that use this texture
                            (readonly)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ImageTexture.users_object_modifier\ (in\ module\ bpy.types)',\ u'bpy.types.ImageTexture.users_object_modifier',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.users_object_modifier" ids="bpy.types.ImageTexture.users_object_modifier" module="bpy.types" names="bpy.types.ImageTexture.users_object_modifier"><desc_name xml:space="preserve">users_object_modifier</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Object modifiers that use this texture
                            (readonly)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ImageTexture\ class\ method)',\ u'bpy.types.ImageTexture.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.bl_rna_get_subclass" ids="bpy.types.ImageTexture.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ImageTexture.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ImageTexture\ class\ method)',\ u'bpy.types.ImageTexture.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ImageTexture" first="False" fullname="ImageTexture.bl_rna_get_subclass_py" ids="bpy.types.ImageTexture.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ImageTexture.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.type" refuri="bpy.types.Texture#bpy.types.Texture.type"><literal classes="xref py py-class">Texture.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.use_clamp" refuri="bpy.types.Texture#bpy.types.Texture.use_clamp"><literal classes="xref py py-class">Texture.use_clamp</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.use_color_ramp" refuri="bpy.types.Texture#bpy.types.Texture.use_color_ramp"><literal classes="xref py py-class">Texture.use_color_ramp</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.color_ramp" refuri="bpy.types.Texture#bpy.types.Texture.color_ramp"><literal classes="xref py py-class">Texture.color_ramp</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.intensity" refuri="bpy.types.Texture#bpy.types.Texture.intensity"><literal classes="xref py py-class">Texture.intensity</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.contrast" refuri="bpy.types.Texture#bpy.types.Texture.contrast"><literal classes="xref py py-class">Texture.contrast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.saturation" refuri="bpy.types.Texture#bpy.types.Texture.saturation"><literal classes="xref py py-class">Texture.saturation</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.factor_red" refuri="bpy.types.Texture#bpy.types.Texture.factor_red"><literal classes="xref py py-class">Texture.factor_red</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.factor_green" refuri="bpy.types.Texture#bpy.types.Texture.factor_green"><literal classes="xref py py-class">Texture.factor_green</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.factor_blue" refuri="bpy.types.Texture#bpy.types.Texture.factor_blue"><literal classes="xref py py-class">Texture.factor_blue</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.use_preview_alpha" refuri="bpy.types.Texture#bpy.types.Texture.use_preview_alpha"><literal classes="xref py py-class">Texture.use_preview_alpha</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.use_nodes" refuri="bpy.types.Texture#bpy.types.Texture.use_nodes"><literal classes="xref py py-class">Texture.use_nodes</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.node_tree" refuri="bpy.types.Texture#bpy.types.Texture.node_tree"><literal classes="xref py py-class">Texture.node_tree</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.animation_data" refuri="bpy.types.Texture#bpy.types.Texture.animation_data"><literal classes="xref py py-class">Texture.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.users_material" refuri="bpy.types.Texture#bpy.types.Texture.users_material"><literal classes="xref py py-class">Texture.users_material</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.users_object_modifier" refuri="bpy.types.Texture#bpy.types.Texture.users_object_modifier"><literal classes="xref py py-class">Texture.users_object_modifier</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.users_material" refuri="bpy.types.Texture#bpy.types.Texture.users_material"><literal classes="xref py py-class">Texture.users_material</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.users_object_modifier" refuri="bpy.types.Texture#bpy.types.Texture.users_object_modifier"><literal classes="xref py py-class">Texture.users_object_modifier</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.evaluate" refuri="bpy.types.Texture#bpy.types.Texture.evaluate"><literal classes="xref py py-class">Texture.evaluate</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
