<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Armature.rst">
    <section ids="module-bpy.types armature-id" names="armature(id)">
        <title>Armature(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <index entries="['single',\ u'Armature\ (class\ in\ bpy.types)',\ u'bpy.types.Armature',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Armature" ids="bpy.types.Armature" module="bpy.types" names="bpy.types.Armature"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Armature</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Armature data-block containing a hierarchy of bones, usually used for rigging characters</paragraph>
                <index entries="['single',\ u'Armature.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.Armature.animation_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Armature" first="False" fullname="Armature.animation_data" ids="bpy.types.Armature.animation_data" module="bpy.types" names="bpy.types.Armature.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation data for this data-block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Armature.bones\ (in\ module\ bpy.types)',\ u'bpy.types.Armature.bones',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Armature" first="False" fullname="Armature.bones" ids="bpy.types.Armature.bones" module="bpy.types" names="bpy.types.Armature.bones"><desc_name xml:space="preserve">bones</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ArmatureBones" refuri="bpy.types.ArmatureBones#bpy.types.ArmatureBones"><literal classes="xref py py-class">ArmatureBones</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Bone" refuri="bpy.types.Bone#bpy.types.Bone"><literal classes="xref py py-class">Bone</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'display_type\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.display_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.display_type" ids="bpy.types.Armature.display_type" module="bpy.types" names="bpy.types.Armature.display_type"><desc_name xml:space="preserve">display_type</desc_name></desc_signature>
                    <desc_content>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>OCTAHEDRAL</literal> Octahedral, Display bones as octahedral shape (default).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>STICK</literal> Stick, Display bones as simple 2D lines with dots.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>BBONE</literal> B-Bone, Display bones as boxes, showing subdivision and B-Splines.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ENVELOPE</literal> Envelope, Display bones as extruded spheres, showing deformation influence volume.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>WIRE</literal> Wire, Display bones as thin wires, showing subdivision and B-Splines.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘OCTAHEDRAL’, ‘STICK’, ‘BBONE’, ‘ENVELOPE’, ‘WIRE’], default ‘OCTAHEDRAL’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Armature.edit_bones\ (in\ module\ bpy.types)',\ u'bpy.types.Armature.edit_bones',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Armature" first="False" fullname="Armature.edit_bones" ids="bpy.types.Armature.edit_bones" module="bpy.types" names="bpy.types.Armature.edit_bones"><desc_name xml:space="preserve">edit_bones</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ArmatureEditBones" refuri="bpy.types.ArmatureEditBones#bpy.types.ArmatureEditBones"><literal classes="xref py py-class">ArmatureEditBones</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.EditBone" refuri="bpy.types.EditBone#bpy.types.EditBone"><literal classes="xref py py-class">EditBone</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ghost_frame_end\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.ghost_frame_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.ghost_frame_end" ids="bpy.types.Armature.ghost_frame_end" module="bpy.types" names="bpy.types.Armature.ghost_frame_end"><desc_name xml:space="preserve">ghost_frame_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>End frame of range of Ghosts to display (not for ‘Around Current Frame’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ghost_frame_start\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.ghost_frame_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.ghost_frame_start" ids="bpy.types.Armature.ghost_frame_start" module="bpy.types" names="bpy.types.Armature.ghost_frame_start"><desc_name xml:space="preserve">ghost_frame_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Starting frame of range of Ghosts to display (not for ‘Around Current Frame’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ghost_size\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.ghost_size',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.ghost_size" ids="bpy.types.Armature.ghost_size" module="bpy.types" names="bpy.types.Armature.ghost_size"><desc_name xml:space="preserve">ghost_size</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Frame step for Ghosts (not for ‘On Keyframes’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 20], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ghost_step\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.ghost_step',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.ghost_step" ids="bpy.types.Armature.ghost_step" module="bpy.types" names="bpy.types.Armature.ghost_step"><desc_name xml:space="preserve">ghost_step</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of frame steps on either side of current frame to show as ghosts (only for ‘Around Current Frame’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 30], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ghost_type\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.ghost_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.ghost_type" ids="bpy.types.Armature.ghost_type" module="bpy.types" names="bpy.types.Armature.ghost_type"><desc_name xml:space="preserve">ghost_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Method of Onion-skinning for active Action</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>CURRENT_FRAME</literal> Around Frame, Display Ghosts of poses within a fixed number of frames around the current frame.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>RANGE</literal> In Range, Display Ghosts of poses within specified range.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>KEYS</literal> On Keyframes, Display Ghosts of poses on Keyframes.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘CURRENT_FRAME’, ‘RANGE’, ‘KEYS’], default ‘CURRENT_FRAME’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Armature.is_editmode\ (in\ module\ bpy.types)',\ u'bpy.types.Armature.is_editmode',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Armature" first="False" fullname="Armature.is_editmode" ids="bpy.types.Armature.is_editmode" module="bpy.types" names="bpy.types.Armature.is_editmode"><desc_name xml:space="preserve">is_editmode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>True when used in editmode</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'layers\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.layers',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.layers" ids="bpy.types.Armature.layers" module="bpy.types" names="bpy.types.Armature.layers"><desc_name xml:space="preserve">layers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Armature layer visibility</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean array of 32 items, default (False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'layers_protected\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.layers_protected',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.layers_protected" ids="bpy.types.Armature.layers_protected" module="bpy.types" names="bpy.types.Armature.layers_protected"><desc_name xml:space="preserve">layers_protected</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Protected layers in Proxy Instances are restored to Proxy settings on file reload and undo</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean array of 32 items, default (False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'pose_position\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.pose_position',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.pose_position" ids="bpy.types.Armature.pose_position" module="bpy.types" names="bpy.types.Armature.pose_position"><desc_name xml:space="preserve">pose_position</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Show armature in binding pose or final posed state</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>POSE</literal> Pose Position, Show armature in posed state.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>REST</literal> Rest Position, Show Armature in binding pose state (no posing possible).</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘POSE’, ‘REST’], default ‘POSE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_axes\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.show_axes',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.show_axes" ids="bpy.types.Armature.show_axes" module="bpy.types" names="bpy.types.Armature.show_axes"><desc_name xml:space="preserve">show_axes</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display bone axes</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_bone_custom_shapes\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.show_bone_custom_shapes',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.show_bone_custom_shapes" ids="bpy.types.Armature.show_bone_custom_shapes" module="bpy.types" names="bpy.types.Armature.show_bone_custom_shapes"><desc_name xml:space="preserve">show_bone_custom_shapes</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display bones with their custom shapes</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_group_colors\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.show_group_colors',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.show_group_colors" ids="bpy.types.Armature.show_group_colors" module="bpy.types" names="bpy.types.Armature.show_group_colors"><desc_name xml:space="preserve">show_group_colors</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display bone group colors</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_names\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.show_names',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.show_names" ids="bpy.types.Armature.show_names" module="bpy.types" names="bpy.types.Armature.show_names"><desc_name xml:space="preserve">show_names</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display bone names</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_only_ghost_selected\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.show_only_ghost_selected',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.show_only_ghost_selected" ids="bpy.types.Armature.show_only_ghost_selected" module="bpy.types" names="bpy.types.Armature.show_only_ghost_selected"><desc_name xml:space="preserve">show_only_ghost_selected</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_auto_ik\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.use_auto_ik',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.use_auto_ik" ids="bpy.types.Armature.use_auto_ik" module="bpy.types" names="bpy.types.Armature.use_auto_ik"><desc_name xml:space="preserve">use_auto_ik</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Add temporary IK constraints while grabbing bones in Pose Mode</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_deform_delay\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.use_deform_delay',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.use_deform_delay" ids="bpy.types.Armature.use_deform_delay" module="bpy.types" names="bpy.types.Armature.use_deform_delay"><desc_name xml:space="preserve">use_deform_delay</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Don’t deform children when manipulating bones in Pose Mode</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_mirror_x\ (bpy.types.Armature\ attribute)',\ u'bpy.types.Armature.use_mirror_x',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Armature" first="False" fullname="Armature.use_mirror_x" ids="bpy.types.Armature.use_mirror_x" module="bpy.types" names="bpy.types.Armature.use_mirror_x"><desc_name xml:space="preserve">use_mirror_x</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Apply changes to matching bone on opposite side of X-Axis</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'transform()\ (bpy.types.Armature\ method)',\ u'bpy.types.Armature.transform',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Armature" first="False" fullname="Armature.transform" ids="bpy.types.Armature.transform" module="bpy.types" names="bpy.types.Armature.transform"><desc_name xml:space="preserve">transform</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">matrix</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Transform armature bones by a matrix</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">matrix</literal_strong> (<literal_emphasis>float multi-dimensional array of 4 * 4 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Matrix</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Armature\ class\ method)',\ u'bpy.types.Armature.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Armature" first="False" fullname="Armature.bl_rna_get_subclass" ids="bpy.types.Armature.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Armature.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Armature\ class\ method)',\ u'bpy.types.Armature.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Armature" first="False" fullname="Armature.bl_rna_get_subclass_py" ids="bpy.types.Armature.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Armature.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.armature" refuri="bpy.context#bpy.context.armature"><literal classes="xref py py-mod">bpy.context.armature</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.armatures" refuri="bpy.types.BlendData#bpy.types.BlendData.armatures"><literal classes="xref py py-class">BlendData.armatures</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataArmatures.new" refuri="bpy.types.BlendDataArmatures#bpy.types.BlendDataArmatures.new"><literal classes="xref py py-class">BlendDataArmatures.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataArmatures.remove" refuri="bpy.types.BlendDataArmatures#bpy.types.BlendDataArmatures.remove"><literal classes="xref py py-class">BlendDataArmatures.remove</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
