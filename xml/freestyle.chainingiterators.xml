<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/freestyle.chainingiterators.rst">
    <section ids="module-freestyle.chainingiterators freestyle-chaining-iterators-freestyle-chainingiterators" names="freestyle\ chaining\ iterators\ (freestyle.chainingiterators)">
        <title>Freestyle Chaining Iterators (freestyle.chainingiterators)</title>
        <index entries="['single',\ u'freestyle.chainingiterators\ (module)',\ u'module-freestyle.chainingiterators',\ '',\ None]"></index>
        <paragraph>This module contains chaining iterators used for the chaining
            operation to construct long strokes by concatenating feature edges
            according to selected chaining rules.  The module is also intended to
            be a collection of examples for defining chaining iterators in Python.</paragraph>
        <index entries="['single',\ u'ChainPredicateIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.ChainPredicateIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ChainPredicateIterator" ids="freestyle.chainingiterators.ChainPredicateIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.ChainPredicateIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">ChainPredicateIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.Iterator" refuri="freestyle.types#freestyle.types.Iterator"><literal classes="xref py py-class">freestyle.types.Iterator</literal></reference> &gt;
                    <reference internal="True" reftitle="freestyle.types.ViewEdgeIterator" refuri="freestyle.types#freestyle.types.ViewEdgeIterator"><literal classes="xref py py-class">freestyle.types.ViewEdgeIterator</literal></reference> &gt;
                    <reference internal="True" reftitle="freestyle.types.ChainingIterator" refuri="freestyle.types#freestyle.types.ChainingIterator"><literal classes="xref py py-class">freestyle.types.ChainingIterator</literal></reference> &gt;
                    <reference internal="True" refid="freestyle.chainingiterators.ChainPredicateIterator" reftitle="freestyle.chainingiterators.ChainPredicateIterator"><literal classes="xref py py-class">ChainPredicateIterator</literal></reference></paragraph>
                <paragraph>A “generic” user-controlled ViewEdge iterator.  This iterator is in
                    particular built from a unary predicate and a binary predicate.
                    First, the unary predicate is evaluated for all potential next
                    ViewEdges in order to only keep the ones respecting a certain
                    constraint.  Then, the binary predicate is evaluated on the current
                    ViewEdge together with each ViewEdge of the previous selection.  The
                    first ViewEdge respecting both the unary predicate and the binary
                    predicate is kept as the next one.  If none of the potential next
                    ViewEdge respects these two predicates, None is returned.</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.ChainPredicateIterator\ method)',\ u'freestyle.chainingiterators.ChainPredicateIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ChainPredicateIterator" first="False" fullname="ChainPredicateIterator.__init__" ids="freestyle.chainingiterators.ChainPredicateIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.ChainPredicateIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">upred</desc_parameter><desc_parameter xml:space="preserve">bpred</desc_parameter><desc_parameter xml:space="preserve">restrict_to_selection=True</desc_parameter><desc_parameter xml:space="preserve">restrict_to_unvisited=True</desc_parameter><desc_parameter xml:space="preserve">begin=None</desc_parameter><desc_parameter xml:space="preserve">orientation=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a ChainPredicateIterator from a unary predicate, a binary
                            predicate, a starting ViewEdge and its orientation.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">upred</literal_strong> (<reference internal="True" reftitle="freestyle.types.UnaryPredicate1D" refuri="freestyle.types#freestyle.types.UnaryPredicate1D"><literal classes="xref py py-class">freestyle.types.UnaryPredicate1D</literal></reference>) – The unary predicate that the next ViewEdge must satisfy.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">bpred</literal_strong> (<reference internal="True" reftitle="freestyle.types.BinaryPredicate1D" refuri="freestyle.types#freestyle.types.BinaryPredicate1D"><literal classes="xref py py-class">freestyle.types.BinaryPredicate1D</literal></reference>) – The binary predicate that the next ViewEdge must
                                                satisfy together with the actual pointed ViewEdge.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">restrict_to_selection</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Indicates whether to force the chaining
                                                to stay within the set of selected ViewEdges or not.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">restrict_to_unvisited</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Indicates whether a ViewEdge that has
                                                already been chained must be ignored ot not.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">begin</literal_strong> (<reference internal="True" reftitle="freestyle.types.ViewEdge" refuri="freestyle.types#freestyle.types.ViewEdge"><literal classes="xref py py-class">freestyle.types.ViewEdge</literal></reference> or None) – The ViewEdge from where to start the iteration.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">orientation</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If true, we’ll look for the next ViewEdge among
                                                the ViewEdges that surround the ending ViewVertex of begin.  If
                                                false, we’ll search over the ViewEdges surrounding the ending
                                                ViewVertex of begin.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.ChainPredicateIterator\ method)',\ u'freestyle.chainingiterators.ChainPredicateIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ChainPredicateIterator" first="False" fullname="ChainPredicateIterator.__init__" module="freestyle.chainingiterators"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">brother</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Copy constructor.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">brother</literal_strong> (<reference internal="True" refid="freestyle.chainingiterators.ChainPredicateIterator" reftitle="freestyle.chainingiterators.ChainPredicateIterator"><literal classes="xref py py-class">ChainPredicateIterator</literal></reference>) – A ChainPredicateIterator object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ChainSilhouetteIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.ChainSilhouetteIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ChainSilhouetteIterator" ids="freestyle.chainingiterators.ChainSilhouetteIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.ChainSilhouetteIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">ChainSilhouetteIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.Iterator" refuri="freestyle.types#freestyle.types.Iterator"><literal classes="xref py py-class">freestyle.types.Iterator</literal></reference> &gt;
                    <reference internal="True" reftitle="freestyle.types.ViewEdgeIterator" refuri="freestyle.types#freestyle.types.ViewEdgeIterator"><literal classes="xref py py-class">freestyle.types.ViewEdgeIterator</literal></reference> &gt;
                    <reference internal="True" reftitle="freestyle.types.ChainingIterator" refuri="freestyle.types#freestyle.types.ChainingIterator"><literal classes="xref py py-class">freestyle.types.ChainingIterator</literal></reference> &gt;
                    <reference internal="True" refid="freestyle.chainingiterators.ChainSilhouetteIterator" reftitle="freestyle.chainingiterators.ChainSilhouetteIterator"><literal classes="xref py py-class">ChainSilhouetteIterator</literal></reference></paragraph>
                <paragraph>A ViewEdge Iterator used to follow ViewEdges the most naturally.  For
                    example, it will follow visible ViewEdges of same nature.  As soon, as
                    the nature or the visibility changes, the iteration stops (by setting
                    the pointed ViewEdge to 0).  In the case of an iteration over a set of
                    ViewEdge that are both Silhouette and Crease, there will be a
                    precedence of the silhouette over the crease criterion.</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.ChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.ChainSilhouetteIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ChainSilhouetteIterator" first="False" fullname="ChainSilhouetteIterator.__init__" ids="freestyle.chainingiterators.ChainSilhouetteIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.ChainSilhouetteIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">restrict_to_selection=True</desc_parameter><desc_parameter xml:space="preserve">begin=None</desc_parameter><desc_parameter xml:space="preserve">orientation=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a ChainSilhouetteIterator from the first ViewEdge used for
                            iteration and its orientation.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">restrict_to_selection</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Indicates whether to force the chaining
                                                to stay within the set of selected ViewEdges or not.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">begin</literal_strong> (<reference internal="True" reftitle="freestyle.types.ViewEdge" refuri="freestyle.types#freestyle.types.ViewEdge"><literal classes="xref py py-class">freestyle.types.ViewEdge</literal></reference> or None) – The ViewEdge from where to start the iteration.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">orientation</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If true, we’ll look for the next ViewEdge among
                                                the ViewEdges that surround the ending ViewVertex of begin.  If
                                                false, we’ll search over the ViewEdges surrounding the ending
                                                ViewVertex of begin.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.ChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.ChainSilhouetteIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ChainSilhouetteIterator" first="False" fullname="ChainSilhouetteIterator.__init__" module="freestyle.chainingiterators"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">brother</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Copy constructor.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">brother</literal_strong> (<reference internal="True" refid="freestyle.chainingiterators.ChainSilhouetteIterator" reftitle="freestyle.chainingiterators.ChainSilhouetteIterator"><literal classes="xref py py-class">ChainSilhouetteIterator</literal></reference>) – A ChainSilhouetteIterator object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyChainSilhouetteIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyChainSilhouetteIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyChainSilhouetteIterator" ids="freestyle.chainingiterators.pyChainSilhouetteIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyChainSilhouetteIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyChainSilhouetteIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Natural chaining iterator that follows the edges of the same nature
                    following the topology of objects, with decreasing priority for
                    silhouettes, then borders, then suggestive contours, then all other edge
                    types.  A ViewEdge is only chained once.</paragraph>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pyChainSilhouetteIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyChainSilhouetteIterator" first="False" fullname="pyChainSilhouetteIterator.init" ids="freestyle.chainingiterators.pyChainSilhouetteIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyChainSilhouetteIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pyChainSilhouetteIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyChainSilhouetteIterator" first="False" fullname="pyChainSilhouetteIterator.traverse" ids="freestyle.chainingiterators.pyChainSilhouetteIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyChainSilhouetteIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyChainSilhouetteGenericIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyChainSilhouetteGenericIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyChainSilhouetteGenericIterator" ids="freestyle.chainingiterators.pyChainSilhouetteGenericIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyChainSilhouetteGenericIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyChainSilhouetteGenericIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Natural chaining iterator that follows the edges of the same nature
                    following the topology of objects, with decreasing priority for
                    silhouettes, then borders, then suggestive contours, then all other
                    edge types.</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.pyChainSilhouetteGenericIterator\ method)',\ u'freestyle.chainingiterators.pyChainSilhouetteGenericIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyChainSilhouetteGenericIterator" first="False" fullname="pyChainSilhouetteGenericIterator.__init__" ids="freestyle.chainingiterators.pyChainSilhouetteGenericIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyChainSilhouetteGenericIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">self</desc_parameter><desc_parameter xml:space="preserve">stayInSelection=True</desc_parameter><desc_parameter xml:space="preserve">stayInUnvisited=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a pyChainSilhouetteGenericIterator object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">stayInSelection</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – True if it is allowed to go out of the selection</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">stayInUnvisited</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – May the same ViewEdge be chained twice</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyChainSilhouetteGenericIterator\ method)',\ u'freestyle.chainingiterators.pyChainSilhouetteGenericIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyChainSilhouetteGenericIterator" first="False" fullname="pyChainSilhouetteGenericIterator.init" ids="freestyle.chainingiterators.pyChainSilhouetteGenericIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyChainSilhouetteGenericIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyChainSilhouetteGenericIterator\ method)',\ u'freestyle.chainingiterators.pyChainSilhouetteGenericIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyChainSilhouetteGenericIterator" first="False" fullname="pyChainSilhouetteGenericIterator.traverse" ids="freestyle.chainingiterators.pyChainSilhouetteGenericIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyChainSilhouetteGenericIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyExternalContourChainingIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyExternalContourChainingIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyExternalContourChainingIterator" ids="freestyle.chainingiterators.pyExternalContourChainingIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyExternalContourChainingIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyExternalContourChainingIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Chains by external contour</paragraph>
                <index entries="['single',\ u'checkViewEdge()\ (freestyle.chainingiterators.pyExternalContourChainingIterator\ method)',\ u'freestyle.chainingiterators.pyExternalContourChainingIterator.checkViewEdge',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyExternalContourChainingIterator" first="False" fullname="pyExternalContourChainingIterator.checkViewEdge" ids="freestyle.chainingiterators.pyExternalContourChainingIterator.checkViewEdge" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyExternalContourChainingIterator.checkViewEdge"><desc_name xml:space="preserve">checkViewEdge</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ve</desc_parameter><desc_parameter xml:space="preserve">orientation</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyExternalContourChainingIterator\ method)',\ u'freestyle.chainingiterators.pyExternalContourChainingIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyExternalContourChainingIterator" first="False" fullname="pyExternalContourChainingIterator.init" ids="freestyle.chainingiterators.pyExternalContourChainingIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyExternalContourChainingIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyExternalContourChainingIterator\ method)',\ u'freestyle.chainingiterators.pyExternalContourChainingIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyExternalContourChainingIterator" first="False" fullname="pyExternalContourChainingIterator.traverse" ids="freestyle.chainingiterators.pyExternalContourChainingIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyExternalContourChainingIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pySketchyChainSilhouetteIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pySketchyChainSilhouetteIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pySketchyChainSilhouetteIterator" ids="freestyle.chainingiterators.pySketchyChainSilhouetteIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainSilhouetteIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pySketchyChainSilhouetteIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Natural chaining iterator with a sketchy multiple touch.  It chains the
                    same ViewEdge multiple times to achieve a sketchy effect.</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.pySketchyChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pySketchyChainSilhouetteIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySketchyChainSilhouetteIterator" first="False" fullname="pySketchyChainSilhouetteIterator.__init__" ids="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">self</desc_parameter><desc_parameter xml:space="preserve">nRounds=3</desc_parameter><desc_parameter xml:space="preserve">stayInSelection=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a pySketchyChainSilhouetteIterator object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">nRounds</literal_strong> (<literal_emphasis>int</literal_emphasis>) – Number of times every Viewedge is chained.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">stayInSelection</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – if False, edges outside of the selection can be chained.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pySketchyChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pySketchyChainSilhouetteIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySketchyChainSilhouetteIterator" first="False" fullname="pySketchyChainSilhouetteIterator.init" ids="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'make_sketchy()\ (freestyle.chainingiterators.pySketchyChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pySketchyChainSilhouetteIterator.make_sketchy',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySketchyChainSilhouetteIterator" first="False" fullname="pySketchyChainSilhouetteIterator.make_sketchy" ids="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.make_sketchy" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.make_sketchy"><desc_name xml:space="preserve">make_sketchy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ve</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Creates the skeychy effect by causing the chain to run from
                            the start again. (loop over itself again)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pySketchyChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pySketchyChainSilhouetteIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySketchyChainSilhouetteIterator" first="False" fullname="pySketchyChainSilhouetteIterator.traverse" ids="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainSilhouetteIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pySketchyChainingIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pySketchyChainingIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pySketchyChainingIterator" ids="freestyle.chainingiterators.pySketchyChainingIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainingIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pySketchyChainingIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Chaining iterator designed for sketchy style. It chains the same
                    ViewEdge several times in order to produce multiple strokes per
                    ViewEdge.</paragraph>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pySketchyChainingIterator\ method)',\ u'freestyle.chainingiterators.pySketchyChainingIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySketchyChainingIterator" first="False" fullname="pySketchyChainingIterator.init" ids="freestyle.chainingiterators.pySketchyChainingIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainingIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pySketchyChainingIterator\ method)',\ u'freestyle.chainingiterators.pySketchyChainingIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySketchyChainingIterator" first="False" fullname="pySketchyChainingIterator.traverse" ids="freestyle.chainingiterators.pySketchyChainingIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pySketchyChainingIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyFillOcclusionsRelativeChainingIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyFillOcclusionsRelativeChainingIterator" ids="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyFillOcclusionsRelativeChainingIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Chaining iterator that fills small occlusions</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsRelativeChainingIterator" first="False" fullname="pyFillOcclusionsRelativeChainingIterator.__init__" ids="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">self</desc_parameter><desc_parameter xml:space="preserve">percent</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a pyFillOcclusionsRelativeChainingIterator object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">percent</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The maximal length of the occluded part, expressed
                                        in a percentage of the total chain length.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsRelativeChainingIterator" first="False" fullname="pyFillOcclusionsRelativeChainingIterator.init" ids="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsRelativeChainingIterator" first="False" fullname="pyFillOcclusionsRelativeChainingIterator.traverse" ids="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsRelativeChainingIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyFillOcclusionsAbsoluteChainingIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyFillOcclusionsAbsoluteChainingIterator" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyFillOcclusionsAbsoluteChainingIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Chaining iterator that fills small occlusions</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsAbsoluteChainingIterator" first="False" fullname="pyFillOcclusionsAbsoluteChainingIterator.__init__" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">self</desc_parameter><desc_parameter xml:space="preserve">length</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a pyFillOcclusionsAbsoluteChainingIterator object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">length</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The maximum length of the occluded part in pixels.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsAbsoluteChainingIterator" first="False" fullname="pyFillOcclusionsAbsoluteChainingIterator.init" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsAbsoluteChainingIterator" first="False" fullname="pyFillOcclusionsAbsoluteChainingIterator.traverse" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteChainingIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyFillOcclusionsAbsoluteAndRelativeChainingIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyFillOcclusionsAbsoluteAndRelativeChainingIterator" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyFillOcclusionsAbsoluteAndRelativeChainingIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Chaining iterator that fills small occlusions regardless of the
                    selection.</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsAbsoluteAndRelativeChainingIterator" first="False" fullname="pyFillOcclusionsAbsoluteAndRelativeChainingIterator.__init__" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">self</desc_parameter><desc_parameter xml:space="preserve">percent</desc_parameter><desc_parameter xml:space="preserve">l</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a pyFillOcclusionsAbsoluteAndRelativeChainingIterator object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">percent</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The maximal length of the occluded part as a
                                                percentage of the total chain length.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">l</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Absolute length.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsAbsoluteAndRelativeChainingIterator" first="False" fullname="pyFillOcclusionsAbsoluteAndRelativeChainingIterator.init" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillOcclusionsAbsoluteAndRelativeChainingIterator" first="False" fullname="pyFillOcclusionsAbsoluteAndRelativeChainingIterator.traverse" ids="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillOcclusionsAbsoluteAndRelativeChainingIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyFillQi0AbsoluteAndRelativeChainingIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyFillQi0AbsoluteAndRelativeChainingIterator" ids="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyFillQi0AbsoluteAndRelativeChainingIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Chaining iterator that fills small occlusions regardless of the
                    selection.</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillQi0AbsoluteAndRelativeChainingIterator" first="False" fullname="pyFillQi0AbsoluteAndRelativeChainingIterator.__init__" ids="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">self</desc_parameter><desc_parameter xml:space="preserve">percent</desc_parameter><desc_parameter xml:space="preserve">l</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a pyFillQi0AbsoluteAndRelativeChainingIterator object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">percent</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The maximal length of the occluded part as a
                                                percentage of the total chain length.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">l</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Absolute length.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillQi0AbsoluteAndRelativeChainingIterator" first="False" fullname="pyFillQi0AbsoluteAndRelativeChainingIterator.init" ids="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator\ method)',\ u'freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFillQi0AbsoluteAndRelativeChainingIterator" first="False" fullname="pyFillQi0AbsoluteAndRelativeChainingIterator.traverse" ids="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyFillQi0AbsoluteAndRelativeChainingIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyNoIdChainSilhouetteIterator\ (class\ in\ freestyle.chainingiterators)',\ u'freestyle.chainingiterators.pyNoIdChainSilhouetteIterator',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyNoIdChainSilhouetteIterator" ids="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.chainingiterators.</desc_addname><desc_name xml:space="preserve">pyNoIdChainSilhouetteIterator</desc_name></desc_signature>
            <desc_content>
                <paragraph>Natural chaining iterator that follows the edges of the same nature
                    following the topology of objects, with decreasing priority for
                    silhouettes, then borders, then suggestive contours, then all other edge
                    types.  It won’t chain the same ViewEdge twice.</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.chainingiterators.pyNoIdChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyNoIdChainSilhouetteIterator" first="False" fullname="pyNoIdChainSilhouetteIterator.__init__" ids="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.__init__" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">self</desc_parameter><desc_parameter xml:space="preserve">stayInSelection=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a pyNoIdChainSilhouetteIterator object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stayInSelection</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – True if it is allowed to go out of the selection</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'init()\ (freestyle.chainingiterators.pyNoIdChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.init',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyNoIdChainSilhouetteIterator" first="False" fullname="pyNoIdChainSilhouetteIterator.init" ids="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.init" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.init"><desc_name xml:space="preserve">init</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'traverse()\ (freestyle.chainingiterators.pyNoIdChainSilhouetteIterator\ method)',\ u'freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.traverse',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyNoIdChainSilhouetteIterator" first="False" fullname="pyNoIdChainSilhouetteIterator.traverse" ids="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.traverse" module="freestyle.chainingiterators" names="freestyle.chainingiterators.pyNoIdChainSilhouetteIterator.traverse"><desc_name xml:space="preserve">traverse</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iter</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
