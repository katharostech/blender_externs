<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ObjectConstraints.rst">
    <section ids="module-bpy.types objectconstraints-bpy-struct" names="objectconstraints(bpy_struct)">
        <title>ObjectConstraints(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'ObjectConstraints\ (class\ in\ bpy.types)',\ u'bpy.types.ObjectConstraints',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ObjectConstraints" ids="bpy.types.ObjectConstraints" module="bpy.types" names="bpy.types.ObjectConstraints"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ObjectConstraints</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Collection of object constraints</paragraph>
                <index entries="['single',\ u'active\ (bpy.types.ObjectConstraints\ attribute)',\ u'bpy.types.ObjectConstraints.active',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ObjectConstraints" first="False" fullname="ObjectConstraints.active" ids="bpy.types.ObjectConstraints.active" module="bpy.types" names="bpy.types.ObjectConstraints.active"><desc_name xml:space="preserve">active</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Active Object constraint</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Constraint" refuri="bpy.types.Constraint#bpy.types.Constraint"><literal classes="xref py py-class">Constraint</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'new()\ (bpy.types.ObjectConstraints\ method)',\ u'bpy.types.ObjectConstraints.new',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ObjectConstraints" first="False" fullname="ObjectConstraints.new" ids="bpy.types.ObjectConstraints.new" module="bpy.types" names="bpy.types.ObjectConstraints.new"><desc_name xml:space="preserve">new</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Add a new constraint to this object</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'CAMERA_SOLVER'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FOLLOW_TRACK'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'OBJECT_SOLVER'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'COPY_LOCATION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'COPY_ROTATION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'COPY_SCALE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'COPY_TRANSFORMS'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LIMIT_DISTANCE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LIMIT_LOCATION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LIMIT_ROTATION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LIMIT_SCALE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'MAINTAIN_VOLUME'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TRANSFORM'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TRANSFORM_CACHE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CLAMP_TO'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DAMPED_TRACK'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'IK'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LOCKED_TRACK'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SPLINE_IK'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'STRETCH_TO'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TRACK_TO'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ACTION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CHILD_OF'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FLOOR'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FOLLOW_PATH'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'PIVOT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SHRINKWRAP'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ARMATURE'</literal_emphasis><literal_emphasis>]</literal_emphasis>) – <paragraph>Constraint type to add</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>CAMERA_SOLVER</literal> Camera Solver.</paragraph></list_item><list_item><paragraph><literal>FOLLOW_TRACK</literal> Follow Track.</paragraph></list_item><list_item><paragraph><literal>OBJECT_SOLVER</literal> Object Solver.</paragraph></list_item><list_item><paragraph><literal>COPY_LOCATION</literal> Copy Location, Copy the location of a target (with an optional offset), so that they move together.</paragraph></list_item><list_item><paragraph><literal>COPY_ROTATION</literal> Copy Rotation, Copy the rotation of a target (with an optional offset), so that they rotate together.</paragraph></list_item><list_item><paragraph><literal>COPY_SCALE</literal> Copy Scale, Copy the scale factors of a target (with an optional offset), so that they are scaled by the same amount.</paragraph></list_item><list_item><paragraph><literal>COPY_TRANSFORMS</literal> Copy Transforms, Copy all the transformations of a target, so that they move together.</paragraph></list_item><list_item><paragraph><literal>LIMIT_DISTANCE</literal> Limit Distance, Restrict movements to within a certain distance of a target (at the time of constraint evaluation only).</paragraph></list_item><list_item><paragraph><literal>LIMIT_LOCATION</literal> Limit Location, Restrict movement along each axis within given ranges.</paragraph></list_item><list_item><paragraph><literal>LIMIT_ROTATION</literal> Limit Rotation, Restrict rotation along each axis within given ranges.</paragraph></list_item><list_item><paragraph><literal>LIMIT_SCALE</literal> Limit Scale, Restrict scaling along each axis with given ranges.</paragraph></list_item><list_item><paragraph><literal>MAINTAIN_VOLUME</literal> Maintain Volume, Compensate for scaling one axis by applying suitable scaling to the other two axes.</paragraph></list_item><list_item><paragraph><literal>TRANSFORM</literal> Transformation, Use one transform property from target to control another (or same) property on owner.</paragraph></list_item><list_item><paragraph><literal>TRANSFORM_CACHE</literal> Transform Cache, Look up the transformation matrix from an external file.</paragraph></list_item><list_item><paragraph><literal>CLAMP_TO</literal> Clamp To, Restrict movements to lie along a curve by remapping location along curve’s longest axis.</paragraph></list_item><list_item><paragraph><literal>DAMPED_TRACK</literal> Damped Track, Point towards a target by performing the smallest rotation necessary.</paragraph></list_item><list_item><paragraph><literal>IK</literal> Inverse Kinematics, Control a chain of bones by specifying the endpoint target (Bones only).</paragraph></list_item><list_item><paragraph><literal>LOCKED_TRACK</literal> Locked Track, Rotate around the specified (‘locked’) axis to point towards a target.</paragraph></list_item><list_item><paragraph><literal>SPLINE_IK</literal> Spline IK, Align chain of bones along a curve (Bones only).</paragraph></list_item><list_item><paragraph><literal>STRETCH_TO</literal> Stretch To, Stretch along Y-Axis to point towards a target.</paragraph></list_item><list_item><paragraph><literal>TRACK_TO</literal> Track To, Legacy tracking constraint prone to twisting artifacts.</paragraph></list_item><list_item><paragraph><literal>ACTION</literal> Action, Use transform property of target to look up pose for owner from an Action.</paragraph></list_item><list_item><paragraph><literal>CHILD_OF</literal> Child Of, Make target the ‘detachable’ parent of owner.</paragraph></list_item><list_item><paragraph><literal>FLOOR</literal> Floor, Use position (and optionally rotation) of target to define a ‘wall’ or ‘floor’ that the owner can not cross.</paragraph></list_item><list_item><paragraph><literal>FOLLOW_PATH</literal> Follow Path, Use to animate an object/bone following a path.</paragraph></list_item><list_item><paragraph><literal>PIVOT</literal> Pivot, Change pivot point for transforms (buggy).</paragraph></list_item><list_item><paragraph><literal>SHRINKWRAP</literal> Shrinkwrap, Restrict movements to surface of target mesh.</paragraph></list_item><list_item><paragraph><literal>ARMATURE</literal> Armature, Apply weight-blended transformation from multiple bones like the Armature modifier.</paragraph></list_item></bullet_list></paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>New constraint</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Constraint" refuri="bpy.types.Constraint#bpy.types.Constraint"><literal classes="xref py py-class">Constraint</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'remove()\ (bpy.types.ObjectConstraints\ method)',\ u'bpy.types.ObjectConstraints.remove',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ObjectConstraints" first="False" fullname="ObjectConstraints.remove" ids="bpy.types.ObjectConstraints.remove" module="bpy.types" names="bpy.types.ObjectConstraints.remove"><desc_name xml:space="preserve">remove</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">constraint</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove a constraint from this object</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">constraint</literal_strong> (<reference internal="True" reftitle="bpy.types.Constraint" refuri="bpy.types.Constraint#bpy.types.Constraint"><literal classes="xref py py-class">Constraint</literal></reference>, (never None)) – Removed constraint</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'clear()\ (bpy.types.ObjectConstraints\ method)',\ u'bpy.types.ObjectConstraints.clear',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ObjectConstraints" first="False" fullname="ObjectConstraints.clear" ids="bpy.types.ObjectConstraints.clear" module="bpy.types" names="bpy.types.ObjectConstraints.clear"><desc_name xml:space="preserve">clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Remove all constraint from this object</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ObjectConstraints\ class\ method)',\ u'bpy.types.ObjectConstraints.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ObjectConstraints" first="False" fullname="ObjectConstraints.bl_rna_get_subclass" ids="bpy.types.ObjectConstraints.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ObjectConstraints.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ObjectConstraints\ class\ method)',\ u'bpy.types.ObjectConstraints.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ObjectConstraints" first="False" fullname="ObjectConstraints.bl_rna_get_subclass_py" ids="bpy.types.ObjectConstraints.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ObjectConstraints.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.constraints" refuri="bpy.types.Object#bpy.types.Object.constraints"><literal classes="xref py py-class">Object.constraints</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
