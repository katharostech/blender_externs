<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy_extras.mesh_utils.rst">
    <section ids="module-bpy_extras.mesh_utils bpy-extras-submodule-bpy-extras-mesh-utils" names="bpy_extras\ submodule\ (bpy_extras.mesh_utils)">
        <title>bpy_extras submodule (bpy_extras.mesh_utils)</title>
        <index entries="['single',\ u'bpy_extras.mesh_utils\ (module)',\ u'module-bpy_extras.mesh_utils',\ '',\ None]"></index>
        <index entries="['single',\ u'mesh_linked_uv_islands()\ (in\ module\ bpy_extras.mesh_utils)',\ u'bpy_extras.mesh_utils.mesh_linked_uv_islands',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="mesh_linked_uv_islands" ids="bpy_extras.mesh_utils.mesh_linked_uv_islands" module="bpy_extras.mesh_utils" names="bpy_extras.mesh_utils.mesh_linked_uv_islands"><desc_addname xml:space="preserve">bpy_extras.mesh_utils.</desc_addname><desc_name xml:space="preserve">mesh_linked_uv_islands</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mesh</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Splits the mesh into connected polygons, use this for separating cubes from
                    other mesh elements within 1 mesh datablock.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">mesh</literal_strong> (<reference internal="True" reftitle="bpy.types.Mesh" refuri="bpy.types.Mesh#bpy.types.Mesh"><literal classes="xref py py-class">bpy.types.Mesh</literal></reference>) – the mesh used to group with.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>lists of lists containing polygon indices</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'mesh_linked_triangles()\ (in\ module\ bpy_extras.mesh_utils)',\ u'bpy_extras.mesh_utils.mesh_linked_triangles',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="mesh_linked_triangles" ids="bpy_extras.mesh_utils.mesh_linked_triangles" module="bpy_extras.mesh_utils" names="bpy_extras.mesh_utils.mesh_linked_triangles"><desc_addname xml:space="preserve">bpy_extras.mesh_utils.</desc_addname><desc_name xml:space="preserve">mesh_linked_triangles</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mesh</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Splits the mesh into connected triangles, use this for separating cubes from
                    other mesh elements within 1 mesh datablock.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">mesh</literal_strong> (<reference internal="True" reftitle="bpy.types.Mesh" refuri="bpy.types.Mesh#bpy.types.Mesh"><literal classes="xref py py-class">bpy.types.Mesh</literal></reference>) – the mesh used to group with.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>lists of lists containing triangles.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'edge_face_count_dict()\ (in\ module\ bpy_extras.mesh_utils)',\ u'bpy_extras.mesh_utils.edge_face_count_dict',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="edge_face_count_dict" ids="bpy_extras.mesh_utils.edge_face_count_dict" module="bpy_extras.mesh_utils" names="bpy_extras.mesh_utils.edge_face_count_dict"><desc_addname xml:space="preserve">bpy_extras.mesh_utils.</desc_addname><desc_name xml:space="preserve">edge_face_count_dict</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mesh</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <field_list>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>dict of edge keys with their value set to the number of
                                faces using each edge.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>dict</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'edge_face_count()\ (in\ module\ bpy_extras.mesh_utils)',\ u'bpy_extras.mesh_utils.edge_face_count',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="edge_face_count" ids="bpy_extras.mesh_utils.edge_face_count" module="bpy_extras.mesh_utils" names="bpy_extras.mesh_utils.edge_face_count"><desc_addname xml:space="preserve">bpy_extras.mesh_utils.</desc_addname><desc_name xml:space="preserve">edge_face_count</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mesh</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <field_list>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>list face users for each item in mesh.edges.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'edge_loops_from_edges()\ (in\ module\ bpy_extras.mesh_utils)',\ u'bpy_extras.mesh_utils.edge_loops_from_edges',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="edge_loops_from_edges" ids="bpy_extras.mesh_utils.edge_loops_from_edges" module="bpy_extras.mesh_utils" names="bpy_extras.mesh_utils.edge_loops_from_edges"><desc_addname xml:space="preserve">bpy_extras.mesh_utils.</desc_addname><desc_name xml:space="preserve">edge_loops_from_edges</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mesh</desc_parameter><desc_parameter xml:space="preserve">edges=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Edge loops defined by edges</paragraph>
                <paragraph>Takes me.edges or a list of edges and returns the edge loops</paragraph>
                <paragraph>return a list of vertex indices.
                    [ [1, 6, 7, 2], …]</paragraph>
                <paragraph>closed loops have matching start and end values.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ngon_tessellate()\ (in\ module\ bpy_extras.mesh_utils)',\ u'bpy_extras.mesh_utils.ngon_tessellate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="ngon_tessellate" ids="bpy_extras.mesh_utils.ngon_tessellate" module="bpy_extras.mesh_utils" names="bpy_extras.mesh_utils.ngon_tessellate"><desc_addname xml:space="preserve">bpy_extras.mesh_utils.</desc_addname><desc_name xml:space="preserve">ngon_tessellate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">from_data</desc_parameter><desc_parameter xml:space="preserve">indices</desc_parameter><desc_parameter xml:space="preserve">fix_loops=True</desc_parameter><desc_parameter xml:space="preserve">debug_print=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes a polyline of indices (fgon) and returns a list of face
                    index lists. Designed to be used for importers that need indices for an
                    fgon to create from existing verts.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">from_data</literal_strong> (list or <reference internal="True" reftitle="bpy.types.Mesh" refuri="bpy.types.Mesh#bpy.types.Mesh"><literal classes="xref py py-class">bpy.types.Mesh</literal></reference>) – either a mesh, or a list/tuple of vectors.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">indices</literal_strong> (<literal_emphasis>list</literal_emphasis>) – a list of indices to use this list
                                        is the ordered closed polyline
                                        to fill, and can be a subset of the data given.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">fix_loops</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If this is enabled polylines
                                        that use loops to make multiple
                                        polylines are delt with correctly.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'triangle_random_points()\ (in\ module\ bpy_extras.mesh_utils)',\ u'bpy_extras.mesh_utils.triangle_random_points',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="triangle_random_points" ids="bpy_extras.mesh_utils.triangle_random_points" module="bpy_extras.mesh_utils" names="bpy_extras.mesh_utils.triangle_random_points"><desc_addname xml:space="preserve">bpy_extras.mesh_utils.</desc_addname><desc_name xml:space="preserve">triangle_random_points</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">num_points</desc_parameter><desc_parameter xml:space="preserve">loop_triangles</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Generates a list of random points over mesh loop triangles.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">num_points</literal_strong> – the number of random points to generate on each triangle.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">loop_triangles</literal_strong> (<reference internal="True" reftitle="bpy.types.MeshLoopTriangle" refuri="bpy.types.MeshLoopTriangle#bpy.types.MeshLoopTriangle"><literal classes="xref py py-class">bpy.types.MeshLoopTriangle</literal></reference>, sequence) – list of the triangles to generate points on.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>list of random points over all triangles.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
