<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.utils.previews.rst">
    <section ids="module-bpy.utils.previews bpy-utils-submodule-bpy-utils-previews" names="bpy.utils\ submodule\ (bpy.utils.previews)">
        <title>bpy.utils submodule (bpy.utils.previews)</title>
        <index entries="['single',\ u'bpy.utils.previews\ (module)',\ u'module-bpy.utils.previews',\ '',\ None]"></index>
        <paragraph>This module contains utility functions to handle custom previews.</paragraph>
        <paragraph>It behaves as a high-level ‘cached’ previews manager.</paragraph>
        <paragraph>This allows scripts to generate their own previews, and use them as icons in UI widgets
            (‘icon_value’ for UILayout functions).</paragraph>
        <section ids="custom-icon-example" names="custom\ icon\ example">
            <title>Custom Icon Example</title>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/__/__/__/release/scripts/templates_py/ui_previews_custom_icon.py" xml:space="preserve"># This sample script demonstrates how to place a custom icon on a button or
# menu entry.
#
# IMPORTANT NOTE: if you run this sample, there will be no icon in the button
# You need to replace the image path with a real existing one.
# For distributable scripts, it is recommended to place the icons inside the
# addon folder and access it relative to the py script file for portability
#
#
# Other use cases for UI-previews:
# - provide a fixed list of previews to select from
# - provide a dynamic list of preview (eg. calculated from reading a directory)
#
# For the above use cases, see the template 'ui_previews_dynamic_enum.py"


import os
import bpy


class PreviewsExamplePanel(bpy.types.Panel):
    """Creates a Panel in the Object properties window"""
    bl_label = "Previews Example Panel"
    bl_idname = "OBJECT_PT_previews"
    bl_space_type = 'PROPERTIES'
    bl_region_type = 'WINDOW'
    bl_context = "object"

    def draw(self, context):
        layout = self.layout
        pcoll = preview_collections["main"]

        row = layout.row()
        my_icon = pcoll["my_icon"]
        row.operator("render.render", icon_value=my_icon.icon_id)

        # my_icon.icon_id can be used in any UI function that accepts
        # icon_value # try also setting text=""
        # to get an icon only operator button


# We can store multiple preview collections here,
# however in this example we only store "main"
preview_collections = {}


def register():

    # Note that preview collections returned by bpy.utils.previews
    # are regular py objects - you can use them to store custom data.
    import bpy.utils.previews
    pcoll = bpy.utils.previews.new()

    # path to the folder where the icon is
    # the path is calculated relative to this py file inside the addon folder
    my_icons_dir = os.path.join(os.path.dirname(__file__), "icons")

    # load a preview thumbnail of a file and store in the previews collection
    pcoll.load("my_icon", os.path.join(my_icons_dir, "icon-image.png"), 'IMAGE')

    preview_collections["main"] = pcoll

    bpy.utils.register_class(PreviewsExamplePanel)


def unregister():

    for pcoll in preview_collections.values():
        bpy.utils.previews.remove(pcoll)
    preview_collections.clear()

    bpy.utils.unregister_class(PreviewsExamplePanel)


if __name__ == "__main__":
    register()
</literal_block>
            <index entries="['single',\ u'new()\ (in\ module\ bpy.utils.previews)',\ u'bpy.utils.previews.new',\ '',\ None]"></index>
            <desc desctype="function" domain="py" noindex="False" objtype="function">
                <desc_signature class="" first="False" fullname="new" ids="bpy.utils.previews.new" module="bpy.utils.previews" names="bpy.utils.previews.new"><desc_addname xml:space="preserve">bpy.utils.previews.</desc_addname><desc_name xml:space="preserve">new</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                <desc_content>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>a new preview collection.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="bpy.utils.previews.ImagePreviewCollection" reftitle="bpy.utils.previews.ImagePreviewCollection"><literal classes="xref py py-class">ImagePreviewCollection</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'remove()\ (in\ module\ bpy.utils.previews)',\ u'bpy.utils.previews.remove',\ '',\ None]"></index>
            <desc desctype="function" domain="py" noindex="False" objtype="function">
                <desc_signature class="" first="False" fullname="remove" ids="bpy.utils.previews.remove" module="bpy.utils.previews" names="bpy.utils.previews.remove"><desc_addname xml:space="preserve">bpy.utils.previews.</desc_addname><desc_name xml:space="preserve">remove</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pcoll</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Remove the specified previews collection.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">pcoll</literal_strong> (<reference internal="True" refid="bpy.utils.previews.ImagePreviewCollection" reftitle="bpy.utils.previews.ImagePreviewCollection"><literal classes="xref py py-class">ImagePreviewCollection</literal></reference>) – Preview collection to close.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'ImagePreviewCollection\ (class\ in\ bpy.utils.previews)',\ u'bpy.utils.previews.ImagePreviewCollection',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="ImagePreviewCollection" ids="bpy.utils.previews.ImagePreviewCollection" module="bpy.utils.previews" names="bpy.utils.previews.ImagePreviewCollection"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.utils.previews.</desc_addname><desc_name xml:space="preserve">ImagePreviewCollection</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Dictionary-like class of previews.</paragraph>
                    <paragraph>This is a subclass of Python’s built-in dict type,
                        used to store multiple image previews.</paragraph>
                    <note>
                        <bullet_list bullet="-">
                            <list_item>
                                <paragraph>instance with <reference internal="True" refid="bpy.utils.previews.new" reftitle="bpy.utils.previews.new"><literal classes="xref py py-mod">bpy.utils.previews.new</literal></reference></paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>keys must be <literal>str</literal> type.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph>values will be <reference internal="True" reftitle="bpy.types.ImagePreview" refuri="bpy.types.ImagePreview#bpy.types.ImagePreview"><literal classes="xref py py-class">bpy.types.ImagePreview</literal></reference></paragraph>
                            </list_item>
                        </bullet_list>
                    </note>
                    <index entries="['single',\ u'clear()\ (bpy.utils.previews.ImagePreviewCollection\ method)',\ u'bpy.utils.previews.ImagePreviewCollection.clear',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="ImagePreviewCollection" first="False" fullname="ImagePreviewCollection.clear" ids="bpy.utils.previews.ImagePreviewCollection.clear" module="bpy.utils.previews" names="bpy.utils.previews.ImagePreviewCollection.clear"><desc_name xml:space="preserve">clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Clear all previews.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'close()\ (bpy.utils.previews.ImagePreviewCollection\ method)',\ u'bpy.utils.previews.ImagePreviewCollection.close',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="ImagePreviewCollection" first="False" fullname="ImagePreviewCollection.close" ids="bpy.utils.previews.ImagePreviewCollection.close" module="bpy.utils.previews" names="bpy.utils.previews.ImagePreviewCollection.close"><desc_name xml:space="preserve">close</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Close the collection and clear all previews.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'load()\ (bpy.utils.previews.ImagePreviewCollection\ method)',\ u'bpy.utils.previews.ImagePreviewCollection.load',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="ImagePreviewCollection" first="False" fullname="ImagePreviewCollection.load" ids="bpy.utils.previews.ImagePreviewCollection.load" module="bpy.utils.previews" names="bpy.utils.previews.ImagePreviewCollection.load"><desc_name xml:space="preserve">load</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">filepath</desc_parameter><desc_parameter xml:space="preserve">filetype</desc_parameter><desc_parameter xml:space="preserve">force_reload=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Generate a new preview from given file path, or return existing one matching <literal>name</literal>.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The name (unique id) identifying the preview.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filepath</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The file path to generate the preview from.</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">filetype</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The type of file, needed to generate the preview in [‘IMAGE’, ‘MOVIE’, ‘BLEND’, ‘FONT’].</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">force_reload</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If True, force running thumbnail manager even if preview already exists in cache.</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The Preview matching given name, or a new empty one.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ImagePreview" refuri="bpy.types.ImagePreview#bpy.types.ImagePreview"><literal classes="xref py py-class">bpy.types.ImagePreview</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'new()\ (bpy.utils.previews.ImagePreviewCollection\ method)',\ u'bpy.utils.previews.ImagePreviewCollection.new',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="ImagePreviewCollection" first="False" fullname="ImagePreviewCollection.new" ids="bpy.utils.previews.ImagePreviewCollection.new" module="bpy.utils.previews" names="bpy.utils.previews.ImagePreviewCollection.new"><desc_name xml:space="preserve">new</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Generate a new empty preview, or return existing one matching <literal>name</literal>.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The name (unique id) identifying the preview.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The Preview matching given name, or a new empty one.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ImagePreview" refuri="bpy.types.ImagePreview#bpy.types.ImagePreview"><literal classes="xref py py-class">bpy.types.ImagePreview</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
