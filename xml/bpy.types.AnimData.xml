<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.AnimData.rst">
    <section ids="module-bpy.types animdata-bpy-struct" names="animdata(bpy_struct)">
        <title>AnimData(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'AnimData\ (class\ in\ bpy.types)',\ u'bpy.types.AnimData',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="AnimData" ids="bpy.types.AnimData" module="bpy.types" names="bpy.types.AnimData"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">AnimData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Animation data for data-block</paragraph>
                <index entries="['single',\ u'action\ (bpy.types.AnimData\ attribute)',\ u'bpy.types.AnimData.action',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.action" ids="bpy.types.AnimData.action" module="bpy.types" names="bpy.types.AnimData.action"><desc_name xml:space="preserve">action</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Active Action for this data-block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Action" refuri="bpy.types.Action#bpy.types.Action"><literal classes="xref py py-class">Action</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'action_blend_type\ (bpy.types.AnimData\ attribute)',\ u'bpy.types.AnimData.action_blend_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.action_blend_type" ids="bpy.types.AnimData.action_blend_type" module="bpy.types" names="bpy.types.AnimData.action_blend_type"><desc_name xml:space="preserve">action_blend_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Method used for combining Active Action’s result with result of NLA stack</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>REPLACE</literal> Replace, Result strip replaces the accumulated results by amount specified by influence.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ADD</literal> Add, Weighted result of strip is added to the accumulated results.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SUBTRACT</literal> Subtract, Weighted result of strip is removed from the accumulated results.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MULTIPLY</literal> Multiply, Weighted result of strip is multiplied with the accumulated results.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘REPLACE’, ‘ADD’, ‘SUBTRACT’, ‘MULTIPLY’], default ‘REPLACE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'action_extrapolation\ (bpy.types.AnimData\ attribute)',\ u'bpy.types.AnimData.action_extrapolation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.action_extrapolation" ids="bpy.types.AnimData.action_extrapolation" module="bpy.types" names="bpy.types.AnimData.action_extrapolation"><desc_name xml:space="preserve">action_extrapolation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Action to take for gaps past the Active Action’s range (when evaluating with NLA)</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NOTHING</literal> Nothing, Strip has no influence past its extents.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>HOLD</literal> Hold, Hold the first frame if no previous strips in track, and always hold last frame.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>HOLD_FORWARD</literal> Hold Forward, Only hold last frame.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NOTHING’, ‘HOLD’, ‘HOLD_FORWARD’], default ‘HOLD’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'action_influence\ (bpy.types.AnimData\ attribute)',\ u'bpy.types.AnimData.action_influence',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.action_influence" ids="bpy.types.AnimData.action_influence" module="bpy.types" names="bpy.types.AnimData.action_influence"><desc_name xml:space="preserve">action_influence</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Amount the Active Action contributes to the result of the NLA stack</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 1.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'AnimData.drivers\ (in\ module\ bpy.types)',\ u'bpy.types.AnimData.drivers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.drivers" ids="bpy.types.AnimData.drivers" module="bpy.types" names="bpy.types.AnimData.drivers"><desc_name xml:space="preserve">drivers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>The Drivers/Expressions for this data-block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.AnimDataDrivers" refuri="bpy.types.AnimDataDrivers#bpy.types.AnimDataDrivers"><literal classes="xref py py-class">AnimDataDrivers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.FCurve" refuri="bpy.types.FCurve#bpy.types.FCurve"><literal classes="xref py py-class">FCurve</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'AnimData.nla_tracks\ (in\ module\ bpy.types)',\ u'bpy.types.AnimData.nla_tracks',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.nla_tracks" ids="bpy.types.AnimData.nla_tracks" module="bpy.types" names="bpy.types.AnimData.nla_tracks"><desc_name xml:space="preserve">nla_tracks</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>NLA Tracks (i.e. Animation Layers)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.NlaTracks" refuri="bpy.types.NlaTracks#bpy.types.NlaTracks"><literal classes="xref py py-class">NlaTracks</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.NlaTrack" refuri="bpy.types.NlaTrack#bpy.types.NlaTrack"><literal classes="xref py py-class">NlaTrack</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_nla\ (bpy.types.AnimData\ attribute)',\ u'bpy.types.AnimData.use_nla',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.use_nla" ids="bpy.types.AnimData.use_nla" module="bpy.types" names="bpy.types.AnimData.use_nla"><desc_name xml:space="preserve">use_nla</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>NLA stack is evaluated when evaluating this block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_tweak_mode\ (bpy.types.AnimData\ attribute)',\ u'bpy.types.AnimData.use_tweak_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.use_tweak_mode" ids="bpy.types.AnimData.use_tweak_mode" module="bpy.types" names="bpy.types.AnimData.use_tweak_mode"><desc_name xml:space="preserve">use_tweak_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Whether to enable or disable tweak mode in NLA</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.AnimData\ class\ method)',\ u'bpy.types.AnimData.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.bl_rna_get_subclass" ids="bpy.types.AnimData.bl_rna_get_subclass" module="bpy.types" names="bpy.types.AnimData.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.AnimData\ class\ method)',\ u'bpy.types.AnimData.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AnimData" first="False" fullname="AnimData.bl_rna_get_subclass_py" ids="bpy.types.AnimData.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.AnimData.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Armature.animation_data" refuri="bpy.types.Armature#bpy.types.Armature.animation_data"><literal classes="xref py py-class">Armature.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CacheFile.animation_data" refuri="bpy.types.CacheFile#bpy.types.CacheFile.animation_data"><literal classes="xref py py-class">CacheFile.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Camera.animation_data" refuri="bpy.types.Camera#bpy.types.Camera.animation_data"><literal classes="xref py py-class">Camera.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Curve.animation_data" refuri="bpy.types.Curve#bpy.types.Curve.animation_data"><literal classes="xref py py-class">Curve.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FreestyleLineStyle.animation_data" refuri="bpy.types.FreestyleLineStyle#bpy.types.FreestyleLineStyle.animation_data"><literal classes="xref py py-class">FreestyleLineStyle.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GreasePencil.animation_data" refuri="bpy.types.GreasePencil#bpy.types.GreasePencil.animation_data"><literal classes="xref py py-class">GreasePencil.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Key.animation_data" refuri="bpy.types.Key#bpy.types.Key.animation_data"><literal classes="xref py py-class">Key.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Lattice.animation_data" refuri="bpy.types.Lattice#bpy.types.Lattice.animation_data"><literal classes="xref py py-class">Lattice.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Light.animation_data" refuri="bpy.types.Light#bpy.types.Light.animation_data"><literal classes="xref py py-class">Light.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.LightProbe.animation_data" refuri="bpy.types.LightProbe#bpy.types.LightProbe.animation_data"><literal classes="xref py py-class">LightProbe.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Mask.animation_data" refuri="bpy.types.Mask#bpy.types.Mask.animation_data"><literal classes="xref py py-class">Mask.animation_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Material.animation_data" refuri="bpy.types.Material#bpy.types.Material.animation_data"><literal classes="xref py py-class">Material.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Mesh.animation_data" refuri="bpy.types.Mesh#bpy.types.Mesh.animation_data"><literal classes="xref py py-class">Mesh.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MetaBall.animation_data" refuri="bpy.types.MetaBall#bpy.types.MetaBall.animation_data"><literal classes="xref py py-class">MetaBall.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MovieClip.animation_data" refuri="bpy.types.MovieClip#bpy.types.MovieClip.animation_data"><literal classes="xref py py-class">MovieClip.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.animation_data" refuri="bpy.types.NodeTree#bpy.types.NodeTree.animation_data"><literal classes="xref py py-class">NodeTree.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.animation_data" refuri="bpy.types.Object#bpy.types.Object.animation_data"><literal classes="xref py py-class">Object.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ParticleSettings.animation_data" refuri="bpy.types.ParticleSettings#bpy.types.ParticleSettings.animation_data"><literal classes="xref py py-class">ParticleSettings.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Scene.animation_data" refuri="bpy.types.Scene#bpy.types.Scene.animation_data"><literal classes="xref py py-class">Scene.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Speaker.animation_data" refuri="bpy.types.Speaker#bpy.types.Speaker.animation_data"><literal classes="xref py py-class">Speaker.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Texture.animation_data" refuri="bpy.types.Texture#bpy.types.Texture.animation_data"><literal classes="xref py py-class">Texture.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.World.animation_data" refuri="bpy.types.World#bpy.types.World.animation_data"><literal classes="xref py py-class">World.animation_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
