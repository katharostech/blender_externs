<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.BuildGpencilModifier.rst">
    <section ids="module-bpy.types buildgpencilmodifier-gpencilmodifier" names="buildgpencilmodifier(gpencilmodifier)">
        <title>BuildGpencilModifier(GpencilModifier)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.GpencilModifier" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier"><literal classes="xref py py-class">GpencilModifier</literal></reference></paragraph>
        <index entries="['single',\ u'BuildGpencilModifier\ (class\ in\ bpy.types)',\ u'bpy.types.BuildGpencilModifier',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BuildGpencilModifier" ids="bpy.types.BuildGpencilModifier" module="bpy.types" names="bpy.types.BuildGpencilModifier"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">BuildGpencilModifier</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">GpencilModifier</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Animate strokes appearing and disappearing</paragraph>
                <index entries="['single',\ u'concurrent_time_alignment\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.concurrent_time_alignment',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.concurrent_time_alignment" ids="bpy.types.BuildGpencilModifier.concurrent_time_alignment" module="bpy.types" names="bpy.types.BuildGpencilModifier.concurrent_time_alignment"><desc_name xml:space="preserve">concurrent_time_alignment</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>When should strokes start to appear/disappear</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>START</literal> Align Start, All strokes start at same time (i.e. short strokes finish earlier).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>END</literal> Align End, All strokes end at same time (i.e. short strokes start later).</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘START’, ‘END’], default ‘START’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_end\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.frame_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.frame_end" ids="bpy.types.BuildGpencilModifier.frame_end" module="bpy.types" names="bpy.types.BuildGpencilModifier.frame_end"><desc_name xml:space="preserve">frame_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>End Frame (when Restrict Frame Range is enabled)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-1.04857e+06, 1.04857e+06], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_start\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.frame_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.frame_start" ids="bpy.types.BuildGpencilModifier.frame_start" module="bpy.types" names="bpy.types.BuildGpencilModifier.frame_start"><desc_name xml:space="preserve">frame_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Start Frame (when Restrict Frame Range is enabled)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-1.04857e+06, 1.04857e+06], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'invert_layer_pass\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.invert_layer_pass',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.invert_layer_pass" ids="bpy.types.BuildGpencilModifier.invert_layer_pass" module="bpy.types" names="bpy.types.BuildGpencilModifier.invert_layer_pass"><desc_name xml:space="preserve">invert_layer_pass</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Inverse filter</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'invert_layers\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.invert_layers',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.invert_layers" ids="bpy.types.BuildGpencilModifier.invert_layers" module="bpy.types" names="bpy.types.BuildGpencilModifier.invert_layers"><desc_name xml:space="preserve">invert_layers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Inverse filter</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'layer\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.layer',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.layer" ids="bpy.types.BuildGpencilModifier.layer" module="bpy.types" names="bpy.types.BuildGpencilModifier.layer"><desc_name xml:space="preserve">layer</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Layer name</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'layer_pass\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.layer_pass',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.layer_pass" ids="bpy.types.BuildGpencilModifier.layer_pass" module="bpy.types" names="bpy.types.BuildGpencilModifier.layer_pass"><desc_name xml:space="preserve">layer_pass</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Layer pass index</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 100], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'length\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.length',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.length" ids="bpy.types.BuildGpencilModifier.length" module="bpy.types" names="bpy.types.BuildGpencilModifier.length"><desc_name xml:space="preserve">length</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum number of frames that the build effect can run for (unless another GP keyframe occurs before this time has elapsed)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [1, 1.04857e+06], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mode\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.mode" ids="bpy.types.BuildGpencilModifier.mode" module="bpy.types" names="bpy.types.BuildGpencilModifier.mode"><desc_name xml:space="preserve">mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>How many strokes are being animated at a time</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>SEQUENTIAL</literal> Sequential, Strokes appear/disappear one after the other, but only a single one changes at a time.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CONCURRENT</literal> Concurrent, Multiple strokes appear/disappear at once.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘SEQUENTIAL’, ‘CONCURRENT’], default ‘SEQUENTIAL’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'start_delay\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.start_delay',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.start_delay" ids="bpy.types.BuildGpencilModifier.start_delay" module="bpy.types" names="bpy.types.BuildGpencilModifier.start_delay"><desc_name xml:space="preserve">start_delay</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of frames after each GP keyframe before the modifier has any effect</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1.04857e+06], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'transition\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.transition',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.transition" ids="bpy.types.BuildGpencilModifier.transition" module="bpy.types" names="bpy.types.BuildGpencilModifier.transition"><desc_name xml:space="preserve">transition</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>How are strokes animated (i.e. are they appearing or disappearing)</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>GROW</literal> Grow, Show points in the order they occur in each stroke (e.g. for animating lines being drawn).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SHRINK</literal> Shrink, Hide points from the end of each stroke to the start (e.g. for animating lines being erased).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FADE</literal> Fade, Hide points in the order they occur in each stroke (e.g. for animating ink fading or vanishing after getting drawn).</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘GROW’, ‘SHRINK’, ‘FADE’], default ‘GROW’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_restrict_frame_range\ (bpy.types.BuildGpencilModifier\ attribute)',\ u'bpy.types.BuildGpencilModifier.use_restrict_frame_range',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.use_restrict_frame_range" ids="bpy.types.BuildGpencilModifier.use_restrict_frame_range" module="bpy.types" names="bpy.types.BuildGpencilModifier.use_restrict_frame_range"><desc_name xml:space="preserve">use_restrict_frame_range</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Only modify strokes during the specified frame range</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.BuildGpencilModifier\ class\ method)',\ u'bpy.types.BuildGpencilModifier.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.bl_rna_get_subclass" ids="bpy.types.BuildGpencilModifier.bl_rna_get_subclass" module="bpy.types" names="bpy.types.BuildGpencilModifier.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.BuildGpencilModifier\ class\ method)',\ u'bpy.types.BuildGpencilModifier.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="BuildGpencilModifier" first="False" fullname="BuildGpencilModifier.bl_rna_get_subclass_py" ids="bpy.types.BuildGpencilModifier.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.BuildGpencilModifier.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GpencilModifier.name" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier.name"><literal classes="xref py py-class">GpencilModifier.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GpencilModifier.type" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier.type"><literal classes="xref py py-class">GpencilModifier.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GpencilModifier.show_viewport" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier.show_viewport"><literal classes="xref py py-class">GpencilModifier.show_viewport</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GpencilModifier.show_render" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier.show_render"><literal classes="xref py py-class">GpencilModifier.show_render</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GpencilModifier.show_in_editmode" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier.show_in_editmode"><literal classes="xref py py-class">GpencilModifier.show_in_editmode</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GpencilModifier.show_expanded" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier.show_expanded"><literal classes="xref py py-class">GpencilModifier.show_expanded</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
