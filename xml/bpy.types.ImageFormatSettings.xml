<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ImageFormatSettings.rst">
    <section ids="module-bpy.types imageformatsettings-bpy-struct" names="imageformatsettings(bpy_struct)">
        <title>ImageFormatSettings(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'ImageFormatSettings\ (class\ in\ bpy.types)',\ u'bpy.types.ImageFormatSettings',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ImageFormatSettings" ids="bpy.types.ImageFormatSettings" module="bpy.types" names="bpy.types.ImageFormatSettings"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ImageFormatSettings</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Settings for image formats</paragraph>
                <index entries="['single',\ u'cineon_black\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.cineon_black',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.cineon_black" ids="bpy.types.ImageFormatSettings.cineon_black" module="bpy.types" names="bpy.types.ImageFormatSettings.cineon_black"><desc_name xml:space="preserve">cineon_black</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Log conversion reference blackpoint</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1024], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'cineon_gamma\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.cineon_gamma',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.cineon_gamma" ids="bpy.types.ImageFormatSettings.cineon_gamma" module="bpy.types" names="bpy.types.ImageFormatSettings.cineon_gamma"><desc_name xml:space="preserve">cineon_gamma</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Log conversion gamma</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 10], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'cineon_white\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.cineon_white',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.cineon_white" ids="bpy.types.ImageFormatSettings.cineon_white" module="bpy.types" names="bpy.types.ImageFormatSettings.cineon_white"><desc_name xml:space="preserve">cineon_white</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Log conversion reference whitepoint</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1024], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color_depth\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.color_depth',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.color_depth" ids="bpy.types.ImageFormatSettings.color_depth" module="bpy.types" names="bpy.types.ImageFormatSettings.color_depth"><desc_name xml:space="preserve">color_depth</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Bit depth per channel</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>8</literal> 8, 8 bit color channels.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>10</literal> 10, 10 bit color channels.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>12</literal> 12, 12 bit color channels.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>16</literal> 16, 16 bit color channels.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>32</literal> 32, 32 bit color channels.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘8’, ‘10’, ‘12’, ‘16’, ‘32’], default ‘8’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color_mode\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.color_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.color_mode" ids="bpy.types.ImageFormatSettings.color_mode" module="bpy.types" names="bpy.types.ImageFormatSettings.color_mode"><desc_name xml:space="preserve">color_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Choose BW for saving grayscale images, RGB for saving red, green and blue channels, and RGBA for saving red, green, blue and alpha channels</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>BW</literal> BW, Images get saved in 8 bits grayscale (only PNG, JPEG, TGA, TIF).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>RGB</literal> RGB, Images are saved with RGB (color) data.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>RGBA</literal> RGBA, Images are saved with RGB and Alpha data (if supported).</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘BW’, ‘RGB’, ‘RGBA’], default ‘BW’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'compression\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.compression',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.compression" ids="bpy.types.ImageFormatSettings.compression" module="bpy.types" names="bpy.types.ImageFormatSettings.compression"><desc_name xml:space="preserve">compression</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Amount of time to determine best compression: 0 = no compression with fast file output, 100 = maximum lossless compression with slow file output</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 100], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ImageFormatSettings.display_settings\ (in\ module\ bpy.types)',\ u'bpy.types.ImageFormatSettings.display_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.display_settings" ids="bpy.types.ImageFormatSettings.display_settings" module="bpy.types" names="bpy.types.ImageFormatSettings.display_settings"><desc_name xml:space="preserve">display_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Settings of device saved image would be displayed on</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorManagedDisplaySettings" refuri="bpy.types.ColorManagedDisplaySettings#bpy.types.ColorManagedDisplaySettings"><literal classes="xref py py-class">ColorManagedDisplaySettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'exr_codec\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.exr_codec',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.exr_codec" ids="bpy.types.ImageFormatSettings.exr_codec" module="bpy.types" names="bpy.types.ImageFormatSettings.exr_codec"><desc_name xml:space="preserve">exr_codec</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Codec settings for OpenEXR</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘PXR24’, ‘ZIP’, ‘PIZ’, ‘RLE’, ‘ZIPS’, ‘B44’, ‘B44A’, ‘DWAA’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'file_format\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.file_format',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.file_format" ids="bpy.types.ImageFormatSettings.file_format" module="bpy.types" names="bpy.types.ImageFormatSettings.file_format"><desc_name xml:space="preserve">file_format</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>File format to save the rendered images as</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>BMP</literal> BMP, Output image in bitmap format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>IRIS</literal> Iris, Output image in (old!) SGI IRIS format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PNG</literal> PNG, Output image in PNG format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>JPEG</literal> JPEG, Output image in JPEG format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>JPEG2000</literal> JPEG 2000, Output image in JPEG 2000 format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TARGA</literal> Targa, Output image in Targa format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TARGA_RAW</literal> Targa Raw, Output image in uncompressed Targa format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CINEON</literal> Cineon, Output image in Cineon format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DPX</literal> DPX, Output image in DPX format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OPEN_EXR_MULTILAYER</literal> OpenEXR MultiLayer, Output image in multilayer OpenEXR format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OPEN_EXR</literal> OpenEXR, Output image in OpenEXR format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>HDR</literal> Radiance HDR, Output image in Radiance HDR format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TIFF</literal> TIFF, Output image in TIFF format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AVI_JPEG</literal> AVI JPEG, Output video in AVI JPEG format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AVI_RAW</literal> AVI Raw, Output video in AVI Raw format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FFMPEG</literal> FFmpeg video, The most versatile way to output video files.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘BMP’, ‘IRIS’, ‘PNG’, ‘JPEG’, ‘JPEG2000’, ‘TARGA’, ‘TARGA_RAW’, ‘CINEON’, ‘DPX’, ‘OPEN_EXR_MULTILAYER’, ‘OPEN_EXR’, ‘HDR’, ‘TIFF’, ‘AVI_JPEG’, ‘AVI_RAW’, ‘FFMPEG’], default ‘TARGA’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'jpeg2k_codec\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.jpeg2k_codec',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.jpeg2k_codec" ids="bpy.types.ImageFormatSettings.jpeg2k_codec" module="bpy.types" names="bpy.types.ImageFormatSettings.jpeg2k_codec"><desc_name xml:space="preserve">jpeg2k_codec</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Codec settings for Jpeg2000</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘JP2’, ‘J2K’], default ‘JP2’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'quality\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.quality',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.quality" ids="bpy.types.ImageFormatSettings.quality" module="bpy.types" names="bpy.types.ImageFormatSettings.quality"><desc_name xml:space="preserve">quality</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Quality for image formats that support lossy compression</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 100], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ImageFormatSettings.stereo_3d_format\ (in\ module\ bpy.types)',\ u'bpy.types.ImageFormatSettings.stereo_3d_format',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.stereo_3d_format" ids="bpy.types.ImageFormatSettings.stereo_3d_format" module="bpy.types" names="bpy.types.ImageFormatSettings.stereo_3d_format"><desc_name xml:space="preserve">stereo_3d_format</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Settings for stereo 3d</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Stereo3dFormat" refuri="bpy.types.Stereo3dFormat#bpy.types.Stereo3dFormat"><literal classes="xref py py-class">Stereo3dFormat</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'tiff_codec\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.tiff_codec',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.tiff_codec" ids="bpy.types.ImageFormatSettings.tiff_codec" module="bpy.types" names="bpy.types.ImageFormatSettings.tiff_codec"><desc_name xml:space="preserve">tiff_codec</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Compression mode for TIFF</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘DEFLATE’, ‘LZW’, ‘PACKBITS’], default ‘DEFLATE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_cineon_log\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.use_cineon_log',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.use_cineon_log" ids="bpy.types.ImageFormatSettings.use_cineon_log" module="bpy.types" names="bpy.types.ImageFormatSettings.use_cineon_log"><desc_name xml:space="preserve">use_cineon_log</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Convert to logarithmic color space</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_jpeg2k_cinema_48\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.use_jpeg2k_cinema_48',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.use_jpeg2k_cinema_48" ids="bpy.types.ImageFormatSettings.use_jpeg2k_cinema_48" module="bpy.types" names="bpy.types.ImageFormatSettings.use_jpeg2k_cinema_48"><desc_name xml:space="preserve">use_jpeg2k_cinema_48</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use Openjpeg Cinema Preset (48fps)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_jpeg2k_cinema_preset\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.use_jpeg2k_cinema_preset',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.use_jpeg2k_cinema_preset" ids="bpy.types.ImageFormatSettings.use_jpeg2k_cinema_preset" module="bpy.types" names="bpy.types.ImageFormatSettings.use_jpeg2k_cinema_preset"><desc_name xml:space="preserve">use_jpeg2k_cinema_preset</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use Openjpeg Cinema Preset</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_jpeg2k_ycc\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.use_jpeg2k_ycc',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.use_jpeg2k_ycc" ids="bpy.types.ImageFormatSettings.use_jpeg2k_ycc" module="bpy.types" names="bpy.types.ImageFormatSettings.use_jpeg2k_ycc"><desc_name xml:space="preserve">use_jpeg2k_ycc</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Save luminance-chrominance-chrominance channels instead of RGB colors</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_preview\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.use_preview',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.use_preview" ids="bpy.types.ImageFormatSettings.use_preview" module="bpy.types" names="bpy.types.ImageFormatSettings.use_preview"><desc_name xml:space="preserve">use_preview</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>When rendering animations, save JPG preview images in same directory</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_zbuffer\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.use_zbuffer',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.use_zbuffer" ids="bpy.types.ImageFormatSettings.use_zbuffer" module="bpy.types" names="bpy.types.ImageFormatSettings.use_zbuffer"><desc_name xml:space="preserve">use_zbuffer</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Save the z-depth per pixel (32 bit unsigned int z-buffer)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ImageFormatSettings.view_settings\ (in\ module\ bpy.types)',\ u'bpy.types.ImageFormatSettings.view_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.view_settings" ids="bpy.types.ImageFormatSettings.view_settings" module="bpy.types" names="bpy.types.ImageFormatSettings.view_settings"><desc_name xml:space="preserve">view_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Color management settings applied on image before saving</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorManagedViewSettings" refuri="bpy.types.ColorManagedViewSettings#bpy.types.ColorManagedViewSettings"><literal classes="xref py py-class">ColorManagedViewSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'views_format\ (bpy.types.ImageFormatSettings\ attribute)',\ u'bpy.types.ImageFormatSettings.views_format',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.views_format" ids="bpy.types.ImageFormatSettings.views_format" module="bpy.types" names="bpy.types.ImageFormatSettings.views_format"><desc_name xml:space="preserve">views_format</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Format of multiview media</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>INDIVIDUAL</literal> Individual, Individual files for each view with the prefix as defined by the scene views.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>STEREO_3D</literal> Stereo 3D, Single file with an encoded stereo pair.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘INDIVIDUAL’, ‘STEREO_3D’], default ‘INDIVIDUAL’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ImageFormatSettings\ class\ method)',\ u'bpy.types.ImageFormatSettings.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.bl_rna_get_subclass" ids="bpy.types.ImageFormatSettings.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ImageFormatSettings.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ImageFormatSettings\ class\ method)',\ u'bpy.types.ImageFormatSettings.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ImageFormatSettings" first="False" fullname="ImageFormatSettings.bl_rna_get_subclass_py" ids="bpy.types.ImageFormatSettings.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ImageFormatSettings.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeOutputFile.format" refuri="bpy.types.CompositorNodeOutputFile#bpy.types.CompositorNodeOutputFile.format"><literal classes="xref py py-class">CompositorNodeOutputFile.format</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeOutputFileSlotFile.format" refuri="bpy.types.NodeOutputFileSlotFile#bpy.types.NodeOutputFileSlotFile.format"><literal classes="xref py py-class">NodeOutputFileSlotFile.format</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BakeSettings.image_settings" refuri="bpy.types.BakeSettings#bpy.types.BakeSettings.image_settings"><literal classes="xref py py-class">BakeSettings.image_settings</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderSettings.image_settings" refuri="bpy.types.RenderSettings#bpy.types.RenderSettings.image_settings"><literal classes="xref py py-class">RenderSettings.image_settings</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_image_settings" refuri="bpy.types.UILayout#bpy.types.UILayout.template_image_settings"><literal classes="xref py py-class">UILayout.template_image_settings</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_image_views" refuri="bpy.types.UILayout#bpy.types.UILayout.template_image_views"><literal classes="xref py py-class">UILayout.template_image_views</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
