<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.app.translations.rst">
    <section ids="module-bpy.app.translations application-translations-bpy-app-translations" names="application\ translations\ (bpy.app.translations)">
        <title>Application Translations (bpy.app.translations)</title>
        <index entries="['single',\ u'bpy.app.translations\ (module)',\ u'module-bpy.app.translations',\ '',\ None]"></index>
        <paragraph>This object contains some data/methods regarding internationalization in Blender, and allows every py script
            to feature translations for its own UI messages.</paragraph>
        <section ids="intro" names="intro">
            <title>Intro</title>
            <warning>
                <paragraph>Most of this object should only be useful if you actually manipulate i18n stuff from Python.
                    If you are a regular add-on, you should only bother about <reference internal="True" refid="bpy.app.translations.contexts" reftitle="bpy.app.translations.contexts"><literal classes="xref py py-const">contexts</literal></reference> member,
                    and the <reference internal="True" refid="bpy.app.translations.register" reftitle="bpy.app.translations.register"><literal classes="xref py py-func">register()</literal></reference>/<reference internal="True" refid="bpy.app.translations.unregister" reftitle="bpy.app.translations.unregister"><literal classes="xref py py-func">unregister()</literal></reference> functions! The <reference internal="True" refid="bpy.app.translations.pgettext" reftitle="bpy.app.translations.pgettext"><literal classes="xref py py-func">pgettext()</literal></reference> family of functions
                    should only be used in rare, specific cases (like e.g. complex “composited” UI strings…).</paragraph>
            </warning>
            <line_block>
                <line>To add translations to your python script, you must define a dictionary formatted like that:</line>
                <line_block>
                    <line><literal>{locale: {msg_key: msg_translation, ...}, ...}</literal></line>
                </line_block>
                <line>where:</line>
            </line_block>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph>locale is either a lang iso code (e.g. <literal>fr</literal>), a lang+country code (e.g. <literal>pt_BR</literal>),
                        a lang+variant code (e.g. <literal>sr@latin</literal>), or a full code (e.g. <literal>uz_UZ@cyrilic</literal>).</paragraph>
                </list_item>
                <list_item>
                    <paragraph>msg_key is a tuple (context, org message) - use, as much as possible, the predefined <reference internal="True" refid="bpy.app.translations.contexts" reftitle="bpy.app.translations.contexts"><literal classes="xref py py-const">contexts</literal></reference>.</paragraph>
                </list_item>
                <list_item>
                    <paragraph>msg_translation is the translated message in given language!</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Then, call <literal>bpy.app.translations.register(__name__, your_dict)</literal> in your <literal>register()</literal> function, and
                <literal>bpy.app.translations.unregister(__name__)</literal> in your <literal>unregister()</literal> one.</paragraph>
            <paragraph>The <literal>Manage UI translations</literal> add-on has several functions to help you collect strings to translate, and
                generate the needed python code (the translation dictionary), as well as optional intermediary po files
                if you want some… See
                <reference name="How to Translate Blender" refuri="https://wiki.blender.org/wiki/Process/Translate_Blender">How to Translate Blender</reference><target ids="how-to-translate-blender" names="how\ to\ translate\ blender" refuri="https://wiki.blender.org/wiki/Process/Translate_Blender"></target> and
                <reference name="Using i18n in Blender Code" refuri="https://wiki.blender.org/wiki/Source/Interface/Internationalization">Using i18n in Blender Code</reference><target ids="using-i18n-in-blender-code" names="using\ i18n\ in\ blender\ code" refuri="https://wiki.blender.org/wiki/Source/Interface/Internationalization"></target>
                for more info.</paragraph>
        </section>
        <section ids="module-references" names="module\ references">
            <title>Module References</title>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.app.translations.py" xml:space="preserve">
import bpy

# This block can be automatically generated by UI translations addon, which also handles conversion with PO format.
# See also https://wiki.blender.org/wiki/Process/Translate_Blender#Translating_non-official_addons
# It can (should) also be put in a different, specific py file.

# ##### BEGIN AUTOGENERATED I18N SECTION #####
# NOTE: You can safely move around this auto-generated block (with the begin/end markers!),
#       and edit the translations by hand.
#       Just carefully respect the format of the tuple!

# Tuple of tuples ((msgctxt, msgid), (sources, gen_comments), (lang, translation, (is_fuzzy, comments)), ...)
translations_tuple = (
    (("*", ""),
     ((), ()),
     ("fr_FR", "Project-Id-Version: Copy Settings 0.1.5 (r0)\nReport-Msgid-Bugs-To: \nPOT-Creation-Date: 2013-04-18 15:27:45.563524\nPO-Revision-Date: 2013-04-18 15:38+0100\nLast-Translator: Bastien Montagne &lt;montagne29@wanadoo.fr&gt;\nLanguage-Team: LANGUAGE &lt;LL@li.org&gt;\nLanguage: __POT__\nMIME-Version: 1.0\nContent-Type: text/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n",
               (False,
                ("Blender's translation file (po format).",
                 "Copyright (C) 2013 The Blender Foundation.",
                 "This file is distributed under the same license as the Blender package.",
                 "FIRST AUTHOR &lt;EMAIL@ADDRESS&gt;, YEAR."))),
     ),
    (("Operator", "Render: Copy Settings"),
     (("bpy.types.SCENE_OT_render_copy_settings",),
      ()),
     ("fr_FR", "Rendu : copier réglages",
               (False, ())),
     ),
    (("*", "Copy render settings from current scene to others"),
     (("bpy.types.SCENE_OT_render_copy_settings",),
      ()),
     ("fr_FR", "Copier les réglages de rendu depuis la scène courante vers d’autres",
               (False, ())),
     ),
    # ... etc, all messages from your addon.
)

translations_dict = {}
for msg in translations_tuple:
    key = msg[0]
    for lang, trans, (is_fuzzy, comments) in msg[2:]:
        if trans and not is_fuzzy:
            translations_dict.setdefault(lang, {})[key] = trans

# ##### END AUTOGENERATED I18N SECTION #####

# Define remaining addon (operators, UI...) here.


def register():
   # Usual operator/UI/etc. registration...

    bpy.app.translations.register(__name__, translations_dict)


def unregister():
    bpy.app.translations.unregister(__name__)

   # Usual operator/UI/etc. unregistration...
</literal_block>
            <index entries="['single',\ u'locale\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.locale',\ '',\ None]"></index>
            <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                <desc_signature class="" first="False" fullname="locale" ids="bpy.app.translations.locale" module="bpy.app.translations" names="bpy.app.translations.locale"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">locale</desc_name></desc_signature>
                <desc_content>
                    <paragraph>The actual locale currently in use (will always return a void string when Blender is built without internationalization support).</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'locales\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.locales',\ '',\ None]"></index>
            <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                <desc_signature class="" first="False" fullname="locales" ids="bpy.app.translations.locales" module="bpy.app.translations" names="bpy.app.translations.locales"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">locales</desc_name></desc_signature>
                <desc_content>
                    <paragraph>All locales currently known by Blender (i.e. available as translations).</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'contexts_C_to_py\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.contexts_C_to_py',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="contexts_C_to_py" ids="bpy.app.translations.contexts_C_to_py" module="bpy.app.translations" names="bpy.app.translations.contexts_C_to_py"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">contexts_C_to_py</desc_name></desc_signature>
                <desc_content>
                    <paragraph>A readonly dict mapping contexts’ C-identifiers to their py-identifiers.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'contexts\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.contexts',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="contexts" ids="bpy.app.translations.contexts" module="bpy.app.translations" names="bpy.app.translations.contexts"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">contexts</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value bpy.app.translations.contexts(default_real=None, default=’*’, operator_default=’Operator’, ui_events_keymaps=’UI_Events_KeyMaps’, plural=’Plural’, id_action=’Action’, id_armature=’Armature’, id_brush=’Brush’, id_camera=’Camera’, id_cachefile=’CacheFile’, id_collection=’Collection’, id_curve=’Curve’, id_fs_linestyle=’FreestyleLineStyle’, id_gpencil=’GPencil’, id_id=’ID’, id_image=’Image’, id_shapekey=’Key’, id_lamp=’Lamp’, id_library=’Library’, id_lattice=’Lattice’, id_mask=’Mask’, …)</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'locale_explode()\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.locale_explode',\ '',\ None]"></index>
            <desc desctype="method" domain="py" noindex="False" objtype="method">
                <desc_signature class="" first="False" fullname="locale_explode" ids="bpy.app.translations.locale_explode" module="bpy.app.translations" names="bpy.app.translations.locale_explode"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">locale_explode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">locale</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Return all components and their combinations  of the given ISO locale string.</paragraph>
                    <doctest_block xml:space="preserve">&gt;&gt;&gt; bpy.app.translations.locale_explode("sr_RS@latin")
("sr", "RS", "latin", "sr_RS", "sr@latin")</doctest_block>
                    <paragraph>For non-complete locales, missing elements will be None.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">locale</literal_strong> – The ISO locale string to explode.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A tuple <literal>(language, country, variant, language_country, language@variant)</literal>.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'pgettext()\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.pgettext',\ '',\ None]"></index>
            <desc desctype="method" domain="py" noindex="False" objtype="method">
                <desc_signature class="" first="False" fullname="pgettext" ids="bpy.app.translations.pgettext" module="bpy.app.translations" names="bpy.app.translations.pgettext"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">pgettext</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">msgid</desc_parameter><desc_parameter xml:space="preserve">msgctxt</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Try to translate the given msgid (with optional msgctxt).</paragraph>
                    <note>
                        <paragraph>The <literal>(msgid, msgctxt)</literal> parameters order has been switched compared to gettext function, to allow
                            single-parameter calls (context then defaults to BLT_I18NCONTEXT_DEFAULT).</paragraph>
                    </note>
                    <note>
                        <paragraph>You should really rarely need to use this function in regular addon code, as all translation should be
                            handled by Blender internal code. The only exception are string containing formatting (like “File: %r”),
                            but you should rather use <reference internal="True" refid="bpy.app.translations.pgettext_iface" reftitle="bpy.app.translations.pgettext_iface"><literal classes="xref py py-func">pgettext_iface()</literal></reference>/<reference internal="True" refid="bpy.app.translations.pgettext_tip" reftitle="bpy.app.translations.pgettext_tip"><literal classes="xref py py-func">pgettext_tip()</literal></reference> in those cases!</paragraph>
                    </note>
                    <note>
                        <paragraph>Does nothing when Blender is built without internationalization support (hence always returns <literal>msgid</literal>).</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgid</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The string to translate.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgctxt</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>None</literal_emphasis>) – The translation context (defaults to BLT_I18NCONTEXT_DEFAULT).</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The translated string (or msgid if no translation was found).</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'pgettext_data()\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.pgettext_data',\ '',\ None]"></index>
            <desc desctype="method" domain="py" noindex="False" objtype="method">
                <desc_signature class="" first="False" fullname="pgettext_data" ids="bpy.app.translations.pgettext_data" module="bpy.app.translations" names="bpy.app.translations.pgettext_data"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">pgettext_data</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">msgid</desc_parameter><desc_parameter xml:space="preserve">msgctxt</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Try to translate the given msgid (with optional msgctxt), if new data name’s translation is enabled.</paragraph>
                    <note>
                        <paragraph>See <reference internal="True" refid="bpy.app.translations.pgettext" reftitle="bpy.app.translations.pgettext"><literal classes="xref py py-func">pgettext()</literal></reference> notes.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgid</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The string to translate.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgctxt</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>None</literal_emphasis>) – The translation context (defaults to BLT_I18NCONTEXT_DEFAULT).</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The translated string (or <literal>msgid</literal> if no translation was found).</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'pgettext_iface()\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.pgettext_iface',\ '',\ None]"></index>
            <desc desctype="method" domain="py" noindex="False" objtype="method">
                <desc_signature class="" first="False" fullname="pgettext_iface" ids="bpy.app.translations.pgettext_iface" module="bpy.app.translations" names="bpy.app.translations.pgettext_iface"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">pgettext_iface</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">msgid</desc_parameter><desc_parameter xml:space="preserve">msgctxt</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Try to translate the given msgid (with optional msgctxt), if labels’ translation is enabled.</paragraph>
                    <note>
                        <paragraph>See <reference internal="True" refid="bpy.app.translations.pgettext" reftitle="bpy.app.translations.pgettext"><literal classes="xref py py-func">pgettext()</literal></reference> notes.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgid</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The string to translate.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgctxt</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>None</literal_emphasis>) – The translation context (defaults to BLT_I18NCONTEXT_DEFAULT).</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The translated string (or msgid if no translation was found).</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'pgettext_tip()\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.pgettext_tip',\ '',\ None]"></index>
            <desc desctype="method" domain="py" noindex="False" objtype="method">
                <desc_signature class="" first="False" fullname="pgettext_tip" ids="bpy.app.translations.pgettext_tip" module="bpy.app.translations" names="bpy.app.translations.pgettext_tip"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">pgettext_tip</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">msgid</desc_parameter><desc_parameter xml:space="preserve">msgctxt</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Try to translate the given msgid (with optional msgctxt), if tooltips’ translation is enabled.</paragraph>
                    <note>
                        <paragraph>See <reference internal="True" refid="bpy.app.translations.pgettext" reftitle="bpy.app.translations.pgettext"><literal classes="xref py py-func">pgettext()</literal></reference> notes.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgid</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The string to translate.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">msgctxt</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>None</literal_emphasis>) – The translation context (defaults to BLT_I18NCONTEXT_DEFAULT).</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The translated string (or msgid if no translation was found).</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'register()\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.register',\ '',\ None]"></index>
            <desc desctype="method" domain="py" noindex="False" objtype="method">
                <desc_signature class="" first="False" fullname="register" ids="bpy.app.translations.register" module="bpy.app.translations" names="bpy.app.translations.register"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">register</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">module_name</desc_parameter><desc_parameter xml:space="preserve">translations_dict</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Registers an addon’s UI translations.</paragraph>
                    <note>
                        <paragraph>Does nothing when Blender is built without internationalization support.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">module_name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The name identifying the addon.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">translations_dict</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – A dictionary built like that:
                                            <literal>{locale: {msg_key: msg_translation, ...}, ...}</literal></paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'unregister()\ (in\ module\ bpy.app.translations)',\ u'bpy.app.translations.unregister',\ '',\ None]"></index>
            <desc desctype="method" domain="py" noindex="False" objtype="method">
                <desc_signature class="" first="False" fullname="unregister" ids="bpy.app.translations.unregister" module="bpy.app.translations" names="bpy.app.translations.unregister"><desc_addname xml:space="preserve">bpy.app.translations.</desc_addname><desc_name xml:space="preserve">unregister</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">module_name</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Unregisters an addon’s UI translations.</paragraph>
                    <note>
                        <paragraph>Does nothing when Blender is built without internationalization support.</paragraph>
                    </note>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">module_name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The name identifying the addon.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
