<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/freestyle.shaders.rst">
    <section ids="module-freestyle.shaders freestyle-shaders-freestyle-shaders" names="freestyle\ shaders\ (freestyle.shaders)">
        <title>Freestyle Shaders (freestyle.shaders)</title>
        <index entries="['single',\ u'freestyle.shaders\ (module)',\ u'module-freestyle.shaders',\ '',\ None]"></index>
        <paragraph>This module contains stroke shaders used for creation of stylized
            strokes.  It is also intended to be a collection of examples for
            shader definition in Python.</paragraph>
        <paragraph>User-defined stroke shaders inherit the
            <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> class.</paragraph>
        <index entries="['single',\ u'BackboneStretcherShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.BackboneStretcherShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BackboneStretcherShader" ids="freestyle.shaders.BackboneStretcherShader" module="freestyle.shaders" names="freestyle.shaders.BackboneStretcherShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">BackboneStretcherShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.BackboneStretcherShader" reftitle="freestyle.shaders.BackboneStretcherShader"><literal classes="xref py py-class">BackboneStretcherShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.BackboneStretcherShader\ method)',\ u'freestyle.shaders.BackboneStretcherShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackboneStretcherShader" first="False" fullname="BackboneStretcherShader.__init__" ids="freestyle.shaders.BackboneStretcherShader.__init__" module="freestyle.shaders" names="freestyle.shaders.BackboneStretcherShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">amount=2.0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a BackboneStretcherShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">amount</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The stretching amount value.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.BackboneStretcherShader\ method)',\ u'freestyle.shaders.BackboneStretcherShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BackboneStretcherShader" first="False" fullname="BackboneStretcherShader.shade" ids="freestyle.shaders.BackboneStretcherShader.shade" module="freestyle.shaders" names="freestyle.shaders.BackboneStretcherShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Stretches the stroke at its two extremities and following the
                            respective directions: v(1)v(0) and v(n-1)v(n).</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'BezierCurveShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.BezierCurveShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BezierCurveShader" ids="freestyle.shaders.BezierCurveShader" module="freestyle.shaders" names="freestyle.shaders.BezierCurveShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">BezierCurveShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.BezierCurveShader" reftitle="freestyle.shaders.BezierCurveShader"><literal classes="xref py py-class">BezierCurveShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.BezierCurveShader\ method)',\ u'freestyle.shaders.BezierCurveShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BezierCurveShader" first="False" fullname="BezierCurveShader.__init__" ids="freestyle.shaders.BezierCurveShader.__init__" module="freestyle.shaders" names="freestyle.shaders.BezierCurveShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">error=4.0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a BezierCurveShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">error</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The error we’re allowing for the approximation.  This
                                        error is the max distance allowed between the new curve and the
                                        original geometry.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.BezierCurveShader\ method)',\ u'freestyle.shaders.BezierCurveShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BezierCurveShader" first="False" fullname="BezierCurveShader.shade" ids="freestyle.shaders.BezierCurveShader.shade" module="freestyle.shaders" names="freestyle.shaders.BezierCurveShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Transforms the stroke backbone geometry so that it corresponds to a
                            Bezier Curve approximation of the original backbone geometry.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'BlenderTextureShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.BlenderTextureShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BlenderTextureShader" ids="freestyle.shaders.BlenderTextureShader" module="freestyle.shaders" names="freestyle.shaders.BlenderTextureShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">BlenderTextureShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.BlenderTextureShader" reftitle="freestyle.shaders.BlenderTextureShader"><literal classes="xref py py-class">BlenderTextureShader</literal></reference></paragraph>
                <paragraph>[Texture shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.BlenderTextureShader\ method)',\ u'freestyle.shaders.BlenderTextureShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BlenderTextureShader" first="False" fullname="BlenderTextureShader.__init__" ids="freestyle.shaders.BlenderTextureShader.__init__" module="freestyle.shaders" names="freestyle.shaders.BlenderTextureShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">texture</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a BlenderTextureShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">texture</literal_strong> (<reference internal="True" reftitle="bpy.types.LineStyleTextureSlot" refuri="bpy.types.LineStyleTextureSlot#bpy.types.LineStyleTextureSlot"><literal classes="xref py py-class">bpy.types.LineStyleTextureSlot</literal></reference> or
                                        <reference internal="True" reftitle="bpy.types.ShaderNodeTree" refuri="bpy.types.ShaderNodeTree#bpy.types.ShaderNodeTree"><literal classes="xref py py-class">bpy.types.ShaderNodeTree</literal></reference>) – A line style texture slot or a shader node tree to define
                                        a set of textures.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.BlenderTextureShader\ method)',\ u'freestyle.shaders.BlenderTextureShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BlenderTextureShader" first="False" fullname="BlenderTextureShader.shade" ids="freestyle.shaders.BlenderTextureShader.shade" module="freestyle.shaders" names="freestyle.shaders.BlenderTextureShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Assigns a blender texture slot to the stroke  shading in order to
                            simulate marks.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'CalligraphicShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.CalligraphicShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CalligraphicShader" ids="freestyle.shaders.CalligraphicShader" module="freestyle.shaders" names="freestyle.shaders.CalligraphicShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">CalligraphicShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.CalligraphicShader" reftitle="freestyle.shaders.CalligraphicShader"><literal classes="xref py py-class">CalligraphicShader</literal></reference></paragraph>
                <paragraph>[Thickness Shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.CalligraphicShader\ method)',\ u'freestyle.shaders.CalligraphicShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CalligraphicShader" first="False" fullname="CalligraphicShader.__init__" ids="freestyle.shaders.CalligraphicShader.__init__" module="freestyle.shaders" names="freestyle.shaders.CalligraphicShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">thickness_min</desc_parameter><desc_parameter xml:space="preserve">thickness_max</desc_parameter><desc_parameter xml:space="preserve">orientation</desc_parameter><desc_parameter xml:space="preserve">clamp</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a CalligraphicShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">thickness_min</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The minimum thickness in the direction
                                                perpendicular to the main direction.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">thickness_max</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The maximum thickness in the main direction.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">orientation</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The 2D vector giving the main direction.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">clamp</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If true, the strokes are drawn in black when the stroke
                                                direction is between -90 and 90 degrees with respect to the main
                                                direction and drawn in white otherwise.  If false, the strokes
                                                are always drawn in black.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.CalligraphicShader\ method)',\ u'freestyle.shaders.CalligraphicShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="CalligraphicShader" first="False" fullname="CalligraphicShader.shade" ids="freestyle.shaders.CalligraphicShader.shade" module="freestyle.shaders" names="freestyle.shaders.CalligraphicShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Assigns thicknesses to the stroke vertices so that the stroke looks
                            like made with a calligraphic tool, i.e. the stroke will be the
                            thickest in a main direction, and the thinest in the direction
                            perpendicular to this one, and an interpolation inbetween.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ColorNoiseShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.ColorNoiseShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ColorNoiseShader" ids="freestyle.shaders.ColorNoiseShader" module="freestyle.shaders" names="freestyle.shaders.ColorNoiseShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">ColorNoiseShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.ColorNoiseShader" reftitle="freestyle.shaders.ColorNoiseShader"><literal classes="xref py py-class">ColorNoiseShader</literal></reference></paragraph>
                <paragraph>[Color shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.ColorNoiseShader\ method)',\ u'freestyle.shaders.ColorNoiseShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ColorNoiseShader" first="False" fullname="ColorNoiseShader.__init__" ids="freestyle.shaders.ColorNoiseShader.__init__" module="freestyle.shaders" names="freestyle.shaders.ColorNoiseShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">amplitude</desc_parameter><desc_parameter xml:space="preserve">period</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a ColorNoiseShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">amplitude</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The amplitude of the noise signal.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">period</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The period of the noise signal.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.ColorNoiseShader\ method)',\ u'freestyle.shaders.ColorNoiseShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ColorNoiseShader" first="False" fullname="ColorNoiseShader.shade" ids="freestyle.shaders.ColorNoiseShader.shade" module="freestyle.shaders" names="freestyle.shaders.ColorNoiseShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Shader to add noise to the stroke colors.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ConstantColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.ConstantColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ConstantColorShader" ids="freestyle.shaders.ConstantColorShader" module="freestyle.shaders" names="freestyle.shaders.ConstantColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">ConstantColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.ConstantColorShader" reftitle="freestyle.shaders.ConstantColorShader"><literal classes="xref py py-class">ConstantColorShader</literal></reference></paragraph>
                <paragraph>[Color shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.ConstantColorShader\ method)',\ u'freestyle.shaders.ConstantColorShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConstantColorShader" first="False" fullname="ConstantColorShader.__init__" ids="freestyle.shaders.ConstantColorShader.__init__" module="freestyle.shaders" names="freestyle.shaders.ConstantColorShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">red</desc_parameter><desc_parameter xml:space="preserve">green</desc_parameter><desc_parameter xml:space="preserve">blue</desc_parameter><desc_parameter xml:space="preserve">alpha=1.0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a ConstantColorShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">red</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The red component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">green</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The green component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">blue</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The blue component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">alpha</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The alpha value.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.ConstantColorShader\ method)',\ u'freestyle.shaders.ConstantColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConstantColorShader" first="False" fullname="ConstantColorShader.shade" ids="freestyle.shaders.ConstantColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.ConstantColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Assigns a constant color to every vertex of the Stroke.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ConstantThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.ConstantThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ConstantThicknessShader" ids="freestyle.shaders.ConstantThicknessShader" module="freestyle.shaders" names="freestyle.shaders.ConstantThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">ConstantThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.ConstantThicknessShader" reftitle="freestyle.shaders.ConstantThicknessShader"><literal classes="xref py py-class">ConstantThicknessShader</literal></reference></paragraph>
                <paragraph>[Thickness shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.ConstantThicknessShader\ method)',\ u'freestyle.shaders.ConstantThicknessShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConstantThicknessShader" first="False" fullname="ConstantThicknessShader.__init__" ids="freestyle.shaders.ConstantThicknessShader.__init__" module="freestyle.shaders" names="freestyle.shaders.ConstantThicknessShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">thickness</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a ConstantThicknessShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">thickness</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The thickness that must be assigned to the stroke.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.ConstantThicknessShader\ method)',\ u'freestyle.shaders.ConstantThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConstantThicknessShader" first="False" fullname="ConstantThicknessShader.shade" ids="freestyle.shaders.ConstantThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.ConstantThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Assigns an absolute constant thickness to every vertex of the Stroke.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ConstrainedIncreasingThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.ConstrainedIncreasingThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ConstrainedIncreasingThicknessShader" ids="freestyle.shaders.ConstrainedIncreasingThicknessShader" module="freestyle.shaders" names="freestyle.shaders.ConstrainedIncreasingThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">ConstrainedIncreasingThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.ConstrainedIncreasingThicknessShader" reftitle="freestyle.shaders.ConstrainedIncreasingThicknessShader"><literal classes="xref py py-class">ConstrainedIncreasingThicknessShader</literal></reference></paragraph>
                <paragraph>[Thickness shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.ConstrainedIncreasingThicknessShader\ method)',\ u'freestyle.shaders.ConstrainedIncreasingThicknessShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConstrainedIncreasingThicknessShader" first="False" fullname="ConstrainedIncreasingThicknessShader.__init__" ids="freestyle.shaders.ConstrainedIncreasingThicknessShader.__init__" module="freestyle.shaders" names="freestyle.shaders.ConstrainedIncreasingThicknessShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">thickness_min</desc_parameter><desc_parameter xml:space="preserve">thickness_max</desc_parameter><desc_parameter xml:space="preserve">ratio</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a ConstrainedIncreasingThicknessShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">thickness_min</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The minimum thickness.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">thickness_max</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The maximum thickness.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ratio</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The thickness/length ratio that we don’t want to exceed.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.ConstrainedIncreasingThicknessShader\ method)',\ u'freestyle.shaders.ConstrainedIncreasingThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ConstrainedIncreasingThicknessShader" first="False" fullname="ConstrainedIncreasingThicknessShader.shade" ids="freestyle.shaders.ConstrainedIncreasingThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.ConstrainedIncreasingThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Same as the <reference internal="True" refid="freestyle.shaders.IncreasingThicknessShader" reftitle="freestyle.shaders.IncreasingThicknessShader"><literal classes="xref py py-class">IncreasingThicknessShader</literal></reference>, but here we allow
                            the user to control the thickness/length ratio so that we don’t get
                            fat short lines.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'GuidingLinesShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.GuidingLinesShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GuidingLinesShader" ids="freestyle.shaders.GuidingLinesShader" module="freestyle.shaders" names="freestyle.shaders.GuidingLinesShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">GuidingLinesShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.GuidingLinesShader" reftitle="freestyle.shaders.GuidingLinesShader"><literal classes="xref py py-class">GuidingLinesShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.GuidingLinesShader\ method)',\ u'freestyle.shaders.GuidingLinesShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GuidingLinesShader" first="False" fullname="GuidingLinesShader.__init__" ids="freestyle.shaders.GuidingLinesShader.__init__" module="freestyle.shaders" names="freestyle.shaders.GuidingLinesShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">offset</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a GuidingLinesShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">offset</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The line that replaces the stroke is initially in the
                                        middle of the initial stroke bounding box.  offset is the value
                                        of the displacement which is applied to this line along its
                                        normal.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.GuidingLinesShader\ method)',\ u'freestyle.shaders.GuidingLinesShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GuidingLinesShader" first="False" fullname="GuidingLinesShader.shade" ids="freestyle.shaders.GuidingLinesShader.shade" module="freestyle.shaders" names="freestyle.shaders.GuidingLinesShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Shader to modify the Stroke geometry so that it corresponds to its
                            main direction line.  This shader must be used together with the
                            splitting operator using the curvature criterion. Indeed, the
                            precision of the approximation will depend on the size of the
                            stroke’s pieces.  The bigger the pieces are, the rougher the
                            approximation is.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'IncreasingColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.IncreasingColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="IncreasingColorShader" ids="freestyle.shaders.IncreasingColorShader" module="freestyle.shaders" names="freestyle.shaders.IncreasingColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">IncreasingColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.IncreasingColorShader" reftitle="freestyle.shaders.IncreasingColorShader"><literal classes="xref py py-class">IncreasingColorShader</literal></reference></paragraph>
                <paragraph>[Color shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.IncreasingColorShader\ method)',\ u'freestyle.shaders.IncreasingColorShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="IncreasingColorShader" first="False" fullname="IncreasingColorShader.__init__" ids="freestyle.shaders.IncreasingColorShader.__init__" module="freestyle.shaders" names="freestyle.shaders.IncreasingColorShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">red_min</desc_parameter><desc_parameter xml:space="preserve">green_min</desc_parameter><desc_parameter xml:space="preserve">blue_min</desc_parameter><desc_parameter xml:space="preserve">alpha_min</desc_parameter><desc_parameter xml:space="preserve">red_max</desc_parameter><desc_parameter xml:space="preserve">green_max</desc_parameter><desc_parameter xml:space="preserve">blue_max</desc_parameter><desc_parameter xml:space="preserve">alpha_max</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds an IncreasingColorShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">red_min</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The first color red component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">green_min</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The first color green component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">blue_min</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The first color blue component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">alpha_min</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The first color alpha value.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">red_max</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The second color red component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">green_max</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The second color green component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">blue_max</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The second color blue component.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">alpha_max</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The second color alpha value.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.IncreasingColorShader\ method)',\ u'freestyle.shaders.IncreasingColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="IncreasingColorShader" first="False" fullname="IncreasingColorShader.shade" ids="freestyle.shaders.IncreasingColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.IncreasingColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Assigns a varying color to the stroke.  The user specifies two
                            colors A and B.  The stroke color will change linearly from A to B
                            between the first and the last vertex.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'IncreasingThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.IncreasingThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="IncreasingThicknessShader" ids="freestyle.shaders.IncreasingThicknessShader" module="freestyle.shaders" names="freestyle.shaders.IncreasingThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">IncreasingThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.IncreasingThicknessShader" reftitle="freestyle.shaders.IncreasingThicknessShader"><literal classes="xref py py-class">IncreasingThicknessShader</literal></reference></paragraph>
                <paragraph>[Thickness shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.IncreasingThicknessShader\ method)',\ u'freestyle.shaders.IncreasingThicknessShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="IncreasingThicknessShader" first="False" fullname="IncreasingThicknessShader.__init__" ids="freestyle.shaders.IncreasingThicknessShader.__init__" module="freestyle.shaders" names="freestyle.shaders.IncreasingThicknessShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">thickness_A</desc_parameter><desc_parameter xml:space="preserve">thickness_B</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds an IncreasingThicknessShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">thickness_A</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The first thickness value.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">thickness_B</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The second thickness value.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.IncreasingThicknessShader\ method)',\ u'freestyle.shaders.IncreasingThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="IncreasingThicknessShader" first="False" fullname="IncreasingThicknessShader.shade" ids="freestyle.shaders.IncreasingThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.IncreasingThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Assigns thicknesses values such as the thickness increases from a
                            thickness value A to a thickness value B between the first vertex
                            to the midpoint vertex and then decreases from B to a A between
                            this midpoint vertex and the last vertex.  The thickness is
                            linearly interpolated from A to B.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'PolygonalizationShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.PolygonalizationShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="PolygonalizationShader" ids="freestyle.shaders.PolygonalizationShader" module="freestyle.shaders" names="freestyle.shaders.PolygonalizationShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">PolygonalizationShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.PolygonalizationShader" reftitle="freestyle.shaders.PolygonalizationShader"><literal classes="xref py py-class">PolygonalizationShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.PolygonalizationShader\ method)',\ u'freestyle.shaders.PolygonalizationShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PolygonalizationShader" first="False" fullname="PolygonalizationShader.__init__" ids="freestyle.shaders.PolygonalizationShader.__init__" module="freestyle.shaders" names="freestyle.shaders.PolygonalizationShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">error</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a PolygonalizationShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">error</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The error we want our polygonal approximation to have
                                        with respect to the original geometry.  The smaller, the closer
                                        the new stroke is to the orinal one.  This error corresponds to
                                        the maximum distance between the new stroke and the old one.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.PolygonalizationShader\ method)',\ u'freestyle.shaders.PolygonalizationShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="PolygonalizationShader" first="False" fullname="PolygonalizationShader.shade" ids="freestyle.shaders.PolygonalizationShader.shade" module="freestyle.shaders" names="freestyle.shaders.PolygonalizationShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Modifies the Stroke geometry so that it looks more “polygonal”.
                            The basic idea is to start from the minimal stroke approximation
                            consisting in a line joining the first vertex to the last one and
                            to subdivide using the original stroke vertices until a certain
                            error is reached.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'RoundCapShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.RoundCapShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="RoundCapShader" ids="freestyle.shaders.RoundCapShader" module="freestyle.shaders" names="freestyle.shaders.RoundCapShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">RoundCapShader</desc_name></desc_signature>
            <desc_content>
                <index entries="['single',\ u'round_cap_thickness()\ (freestyle.shaders.RoundCapShader\ method)',\ u'freestyle.shaders.RoundCapShader.round_cap_thickness',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="RoundCapShader" first="False" fullname="RoundCapShader.round_cap_thickness" ids="freestyle.shaders.RoundCapShader.round_cap_thickness" module="freestyle.shaders" names="freestyle.shaders.RoundCapShader.round_cap_thickness"><desc_name xml:space="preserve">round_cap_thickness</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">x</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.RoundCapShader\ method)',\ u'freestyle.shaders.RoundCapShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="RoundCapShader" first="False" fullname="RoundCapShader.shade" ids="freestyle.shaders.RoundCapShader.shade" module="freestyle.shaders" names="freestyle.shaders.RoundCapShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'SamplingShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.SamplingShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SamplingShader" ids="freestyle.shaders.SamplingShader" module="freestyle.shaders" names="freestyle.shaders.SamplingShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">SamplingShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.SamplingShader" reftitle="freestyle.shaders.SamplingShader"><literal classes="xref py py-class">SamplingShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.SamplingShader\ method)',\ u'freestyle.shaders.SamplingShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SamplingShader" first="False" fullname="SamplingShader.__init__" ids="freestyle.shaders.SamplingShader.__init__" module="freestyle.shaders" names="freestyle.shaders.SamplingShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">sampling</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a SamplingShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">sampling</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The sampling to use for the stroke resampling.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.SamplingShader\ method)',\ u'freestyle.shaders.SamplingShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SamplingShader" first="False" fullname="SamplingShader.shade" ids="freestyle.shaders.SamplingShader.shade" module="freestyle.shaders" names="freestyle.shaders.SamplingShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Resamples the stroke.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'SmoothingShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.SmoothingShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SmoothingShader" ids="freestyle.shaders.SmoothingShader" module="freestyle.shaders" names="freestyle.shaders.SmoothingShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">SmoothingShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.SmoothingShader" reftitle="freestyle.shaders.SmoothingShader"><literal classes="xref py py-class">SmoothingShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries=""></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature first="False"><desc_name xml:space="preserve">__init__(num_iterations=100, factor_point=0.1,</desc_name></desc_signature>
                    <desc_signature first="False"><desc_name xml:space="preserve">factor_curvature=0.0, factor_curvature_difference=0.2,</desc_name></desc_signature>
                    <desc_signature first="False"><desc_name xml:space="preserve">aniso_point=0.0, aniso_normal=0.0, aniso_curvature=0.0,</desc_name></desc_signature>
                    <desc_signature first="False"><desc_name xml:space="preserve">carricature_factor=1.0)</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Builds a SmoothingShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">num_iterations</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of iterations.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">factor_point</literal_strong> (<literal_emphasis>float</literal_emphasis>) – 0.1</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">factor_curvature</literal_strong> (<literal_emphasis>float</literal_emphasis>) – 0.0</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">factor_curvature_difference</literal_strong> (<literal_emphasis>float</literal_emphasis>) – 0.2</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">aniso_point</literal_strong> (<literal_emphasis>float</literal_emphasis>) – 0.0</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">aniso_normal</literal_strong> (<literal_emphasis>float</literal_emphasis>) – 0.0</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">aniso_curvature</literal_strong> (<literal_emphasis>float</literal_emphasis>) – 0.0</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">carricature_factor</literal_strong> (<literal_emphasis>float</literal_emphasis>) – 1.0</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.SmoothingShader\ method)',\ u'freestyle.shaders.SmoothingShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SmoothingShader" first="False" fullname="SmoothingShader.shade" ids="freestyle.shaders.SmoothingShader.shade" module="freestyle.shaders" names="freestyle.shaders.SmoothingShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Smoothes the stroke by moving the vertices to make the stroke
                            smoother.  Uses curvature flow to converge towards a curve of
                            constant curvature.  The diffusion method we use is anisotropic to
                            prevent the diffusion across corners.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'SpatialNoiseShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.SpatialNoiseShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SpatialNoiseShader" ids="freestyle.shaders.SpatialNoiseShader" module="freestyle.shaders" names="freestyle.shaders.SpatialNoiseShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">SpatialNoiseShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.SpatialNoiseShader" reftitle="freestyle.shaders.SpatialNoiseShader"><literal classes="xref py py-class">SpatialNoiseShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.SpatialNoiseShader\ method)',\ u'freestyle.shaders.SpatialNoiseShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SpatialNoiseShader" first="False" fullname="SpatialNoiseShader.__init__" ids="freestyle.shaders.SpatialNoiseShader.__init__" module="freestyle.shaders" names="freestyle.shaders.SpatialNoiseShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">amount</desc_parameter><desc_parameter xml:space="preserve">scale</desc_parameter><desc_parameter xml:space="preserve">num_octaves</desc_parameter><desc_parameter xml:space="preserve">smooth</desc_parameter><desc_parameter xml:space="preserve">pure_random</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a SpatialNoiseShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">amount</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The amplitude of the noise.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scale</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The noise frequency.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">num_octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of octaves</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">smooth</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – True if you want the noise to be smooth.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">pure_random</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – True if you don’t want any coherence.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.SpatialNoiseShader\ method)',\ u'freestyle.shaders.SpatialNoiseShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SpatialNoiseShader" first="False" fullname="SpatialNoiseShader.shade" ids="freestyle.shaders.SpatialNoiseShader.shade" module="freestyle.shaders" names="freestyle.shaders.SpatialNoiseShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Spatial Noise stroke shader.  Moves the vertices to make the stroke
                            more noisy.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'SquareCapShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.SquareCapShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SquareCapShader" ids="freestyle.shaders.SquareCapShader" module="freestyle.shaders" names="freestyle.shaders.SquareCapShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">SquareCapShader</desc_name></desc_signature>
            <desc_content>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.SquareCapShader\ method)',\ u'freestyle.shaders.SquareCapShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="SquareCapShader" first="False" fullname="SquareCapShader.shade" ids="freestyle.shaders.SquareCapShader.shade" module="freestyle.shaders" names="freestyle.shaders.SquareCapShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'StrokeTextureStepShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.StrokeTextureStepShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="StrokeTextureStepShader" ids="freestyle.shaders.StrokeTextureStepShader" module="freestyle.shaders" names="freestyle.shaders.StrokeTextureStepShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">StrokeTextureStepShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.StrokeTextureStepShader" reftitle="freestyle.shaders.StrokeTextureStepShader"><literal classes="xref py py-class">StrokeTextureStepShader</literal></reference></paragraph>
                <paragraph>[Texture shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.StrokeTextureStepShader\ method)',\ u'freestyle.shaders.StrokeTextureStepShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="StrokeTextureStepShader" first="False" fullname="StrokeTextureStepShader.__init__" ids="freestyle.shaders.StrokeTextureStepShader.__init__" module="freestyle.shaders" names="freestyle.shaders.StrokeTextureStepShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">step</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a StrokeTextureStepShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">step</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The spacing along the stroke.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.StrokeTextureStepShader\ method)',\ u'freestyle.shaders.StrokeTextureStepShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="StrokeTextureStepShader" first="False" fullname="StrokeTextureStepShader.shade" ids="freestyle.shaders.StrokeTextureStepShader.shade" module="freestyle.shaders" names="freestyle.shaders.StrokeTextureStepShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Assigns a spacing factor to the texture coordinates of the Stroke.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ThicknessNoiseShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.ThicknessNoiseShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ThicknessNoiseShader" ids="freestyle.shaders.ThicknessNoiseShader" module="freestyle.shaders" names="freestyle.shaders.ThicknessNoiseShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">ThicknessNoiseShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.ThicknessNoiseShader" reftitle="freestyle.shaders.ThicknessNoiseShader"><literal classes="xref py py-class">ThicknessNoiseShader</literal></reference></paragraph>
                <paragraph>[Thickness shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.ThicknessNoiseShader\ method)',\ u'freestyle.shaders.ThicknessNoiseShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ThicknessNoiseShader" first="False" fullname="ThicknessNoiseShader.__init__" ids="freestyle.shaders.ThicknessNoiseShader.__init__" module="freestyle.shaders" names="freestyle.shaders.ThicknessNoiseShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">amplitude</desc_parameter><desc_parameter xml:space="preserve">period</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a ThicknessNoiseShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">amplitude</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The amplitude of the noise signal.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">period</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The period of the noise signal.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.ThicknessNoiseShader\ method)',\ u'freestyle.shaders.ThicknessNoiseShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ThicknessNoiseShader" first="False" fullname="ThicknessNoiseShader.shade" ids="freestyle.shaders.ThicknessNoiseShader.shade" module="freestyle.shaders" names="freestyle.shaders.ThicknessNoiseShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Adds some noise to the stroke thickness.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'TipRemoverShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.TipRemoverShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TipRemoverShader" ids="freestyle.shaders.TipRemoverShader" module="freestyle.shaders" names="freestyle.shaders.TipRemoverShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">TipRemoverShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Class hierarchy: <reference internal="True" reftitle="freestyle.types.StrokeShader" refuri="freestyle.types#freestyle.types.StrokeShader"><literal classes="xref py py-class">freestyle.types.StrokeShader</literal></reference> &gt; <reference internal="True" refid="freestyle.shaders.TipRemoverShader" reftitle="freestyle.shaders.TipRemoverShader"><literal classes="xref py py-class">TipRemoverShader</literal></reference></paragraph>
                <paragraph>[Geometry shader]</paragraph>
                <index entries="['single',\ u'__init__()\ (freestyle.shaders.TipRemoverShader\ method)',\ u'freestyle.shaders.TipRemoverShader.__init__',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TipRemoverShader" first="False" fullname="TipRemoverShader.__init__" ids="freestyle.shaders.TipRemoverShader.__init__" module="freestyle.shaders" names="freestyle.shaders.TipRemoverShader.__init__"><desc_name xml:space="preserve">__init__</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">tip_length</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Builds a TipRemoverShader object.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">tip_length</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The length of the piece of stroke we want to remove
                                        at each extremity.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.TipRemoverShader\ method)',\ u'freestyle.shaders.TipRemoverShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="TipRemoverShader" first="False" fullname="TipRemoverShader.shade" ids="freestyle.shaders.TipRemoverShader.shade" module="freestyle.shaders" names="freestyle.shaders.TipRemoverShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Removes the stroke’s extremities.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<reference internal="True" reftitle="freestyle.types.Stroke" refuri="freestyle.types#freestyle.types.Stroke"><literal classes="xref py py-class">freestyle.types.Stroke</literal></reference>) – A Stroke object.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'py2DCurvatureColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.py2DCurvatureColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="py2DCurvatureColorShader" ids="freestyle.shaders.py2DCurvatureColorShader" module="freestyle.shaders" names="freestyle.shaders.py2DCurvatureColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">py2DCurvatureColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns a color (grayscale) to the stroke based on the curvature.
                    A higher curvature will yield a brighter color.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.py2DCurvatureColorShader\ method)',\ u'freestyle.shaders.py2DCurvatureColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="py2DCurvatureColorShader" first="False" fullname="py2DCurvatureColorShader.shade" ids="freestyle.shaders.py2DCurvatureColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.py2DCurvatureColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyBackboneStretcherNoCuspShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyBackboneStretcherNoCuspShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyBackboneStretcherNoCuspShader" ids="freestyle.shaders.pyBackboneStretcherNoCuspShader" module="freestyle.shaders" names="freestyle.shaders.pyBackboneStretcherNoCuspShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyBackboneStretcherNoCuspShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Stretches the stroke’s backbone, excluding cusp vertices (end junctions).</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyBackboneStretcherNoCuspShader\ method)',\ u'freestyle.shaders.pyBackboneStretcherNoCuspShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyBackboneStretcherNoCuspShader" first="False" fullname="pyBackboneStretcherNoCuspShader.shade" ids="freestyle.shaders.pyBackboneStretcherNoCuspShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyBackboneStretcherNoCuspShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyBackboneStretcherShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyBackboneStretcherShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyBackboneStretcherShader" ids="freestyle.shaders.pyBackboneStretcherShader" module="freestyle.shaders" names="freestyle.shaders.pyBackboneStretcherShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyBackboneStretcherShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Stretches the stroke’s backbone by a given length (in pixels).</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyBackboneStretcherShader\ method)',\ u'freestyle.shaders.pyBackboneStretcherShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyBackboneStretcherShader" first="False" fullname="pyBackboneStretcherShader.shade" ids="freestyle.shaders.pyBackboneStretcherShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyBackboneStretcherShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyBluePrintCirclesShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyBluePrintCirclesShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyBluePrintCirclesShader" ids="freestyle.shaders.pyBluePrintCirclesShader" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintCirclesShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyBluePrintCirclesShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Draws the silhouette of the object as a circle.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyBluePrintCirclesShader\ method)',\ u'freestyle.shaders.pyBluePrintCirclesShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyBluePrintCirclesShader" first="False" fullname="pyBluePrintCirclesShader.shade" ids="freestyle.shaders.pyBluePrintCirclesShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintCirclesShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyBluePrintDirectedSquaresShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyBluePrintDirectedSquaresShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyBluePrintDirectedSquaresShader" ids="freestyle.shaders.pyBluePrintDirectedSquaresShader" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintDirectedSquaresShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyBluePrintDirectedSquaresShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Replaces the stroke with a directed square.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyBluePrintDirectedSquaresShader\ method)',\ u'freestyle.shaders.pyBluePrintDirectedSquaresShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyBluePrintDirectedSquaresShader" first="False" fullname="pyBluePrintDirectedSquaresShader.shade" ids="freestyle.shaders.pyBluePrintDirectedSquaresShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintDirectedSquaresShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyBluePrintEllipsesShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyBluePrintEllipsesShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyBluePrintEllipsesShader" ids="freestyle.shaders.pyBluePrintEllipsesShader" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintEllipsesShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyBluePrintEllipsesShader</desc_name></desc_signature>
            <desc_content>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyBluePrintEllipsesShader\ method)',\ u'freestyle.shaders.pyBluePrintEllipsesShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyBluePrintEllipsesShader" first="False" fullname="pyBluePrintEllipsesShader.shade" ids="freestyle.shaders.pyBluePrintEllipsesShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintEllipsesShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyBluePrintSquaresShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyBluePrintSquaresShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyBluePrintSquaresShader" ids="freestyle.shaders.pyBluePrintSquaresShader" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintSquaresShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyBluePrintSquaresShader</desc_name></desc_signature>
            <desc_content>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyBluePrintSquaresShader\ method)',\ u'freestyle.shaders.pyBluePrintSquaresShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyBluePrintSquaresShader" first="False" fullname="pyBluePrintSquaresShader.shade" ids="freestyle.shaders.pyBluePrintSquaresShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyBluePrintSquaresShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyConstantColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyConstantColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyConstantColorShader" ids="freestyle.shaders.pyConstantColorShader" module="freestyle.shaders" names="freestyle.shaders.pyConstantColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyConstantColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns a constant color to the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyConstantColorShader\ method)',\ u'freestyle.shaders.pyConstantColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyConstantColorShader" first="False" fullname="pyConstantColorShader.shade" ids="freestyle.shaders.pyConstantColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyConstantColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyConstantThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyConstantThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyConstantThicknessShader" ids="freestyle.shaders.pyConstantThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyConstantThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyConstantThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns a constant thickness along the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyConstantThicknessShader\ method)',\ u'freestyle.shaders.pyConstantThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyConstantThicknessShader" first="False" fullname="pyConstantThicknessShader.shade" ids="freestyle.shaders.pyConstantThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyConstantThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyConstrainedIncreasingThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyConstrainedIncreasingThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyConstrainedIncreasingThicknessShader" ids="freestyle.shaders.pyConstrainedIncreasingThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyConstrainedIncreasingThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyConstrainedIncreasingThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Increasingly thickens the stroke, constrained by a ratio of the
                    stroke’s length.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyConstrainedIncreasingThicknessShader\ method)',\ u'freestyle.shaders.pyConstrainedIncreasingThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyConstrainedIncreasingThicknessShader" first="False" fullname="pyConstrainedIncreasingThicknessShader.shade" ids="freestyle.shaders.pyConstrainedIncreasingThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyConstrainedIncreasingThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyDecreasingThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyDecreasingThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyDecreasingThicknessShader" ids="freestyle.shaders.pyDecreasingThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyDecreasingThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyDecreasingThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Inverse of pyIncreasingThicknessShader, decreasingly thickens the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyDecreasingThicknessShader\ method)',\ u'freestyle.shaders.pyDecreasingThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyDecreasingThicknessShader" first="False" fullname="pyDecreasingThicknessShader.shade" ids="freestyle.shaders.pyDecreasingThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyDecreasingThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyDepthDiscontinuityThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyDepthDiscontinuityThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyDepthDiscontinuityThicknessShader" ids="freestyle.shaders.pyDepthDiscontinuityThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyDepthDiscontinuityThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyDepthDiscontinuityThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns a thickness to the stroke based on the stroke’s distance
                    to the camera (Z-value).</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyDepthDiscontinuityThicknessShader\ method)',\ u'freestyle.shaders.pyDepthDiscontinuityThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyDepthDiscontinuityThicknessShader" first="False" fullname="pyDepthDiscontinuityThicknessShader.shade" ids="freestyle.shaders.pyDepthDiscontinuityThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyDepthDiscontinuityThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyDiffusion2Shader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyDiffusion2Shader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyDiffusion2Shader" ids="freestyle.shaders.pyDiffusion2Shader" module="freestyle.shaders" names="freestyle.shaders.pyDiffusion2Shader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyDiffusion2Shader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Iteratively adds an offset to the position of each stroke vertex
                    in the direction perpendicular to the stroke direction at the
                    point. The offset is scaled by the 2D curvature (i.e. how quickly
                    the stroke curve is) at the point.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyDiffusion2Shader\ method)',\ u'freestyle.shaders.pyDiffusion2Shader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyDiffusion2Shader" first="False" fullname="pyDiffusion2Shader.shade" ids="freestyle.shaders.pyDiffusion2Shader.shade" module="freestyle.shaders" names="freestyle.shaders.pyDiffusion2Shader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyFXSVaryingThicknessWithDensityShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyFXSVaryingThicknessWithDensityShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyFXSVaryingThicknessWithDensityShader" ids="freestyle.shaders.pyFXSVaryingThicknessWithDensityShader" module="freestyle.shaders" names="freestyle.shaders.pyFXSVaryingThicknessWithDensityShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyFXSVaryingThicknessWithDensityShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns thickness to a stroke based on the density of the diffuse map.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyFXSVaryingThicknessWithDensityShader\ method)',\ u'freestyle.shaders.pyFXSVaryingThicknessWithDensityShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyFXSVaryingThicknessWithDensityShader" first="False" fullname="pyFXSVaryingThicknessWithDensityShader.shade" ids="freestyle.shaders.pyFXSVaryingThicknessWithDensityShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyFXSVaryingThicknessWithDensityShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyGuidingLineShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyGuidingLineShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyGuidingLineShader" ids="freestyle.shaders.pyGuidingLineShader" module="freestyle.shaders" names="freestyle.shaders.pyGuidingLineShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyGuidingLineShader</desc_name></desc_signature>
            <desc_content>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyGuidingLineShader\ method)',\ u'freestyle.shaders.pyGuidingLineShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyGuidingLineShader" first="False" fullname="pyGuidingLineShader.shade" ids="freestyle.shaders.pyGuidingLineShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyGuidingLineShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyHLRShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyHLRShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyHLRShader" ids="freestyle.shaders.pyHLRShader" module="freestyle.shaders" names="freestyle.shaders.pyHLRShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyHLRShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Controls visibility based upon the quantitative invisibility (QI)
                    based on hidden line removal (HLR).</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyHLRShader\ method)',\ u'freestyle.shaders.pyHLRShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyHLRShader" first="False" fullname="pyHLRShader.shade" ids="freestyle.shaders.pyHLRShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyHLRShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyImportance2DThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyImportance2DThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyImportance2DThicknessShader" ids="freestyle.shaders.pyImportance2DThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyImportance2DThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyImportance2DThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns thickness based on distance to a given point in 2D space.
                    the thickness is inverted, so the vertices closest to the
                    specified point have the lowest thickness.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyImportance2DThicknessShader\ method)',\ u'freestyle.shaders.pyImportance2DThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyImportance2DThicknessShader" first="False" fullname="pyImportance2DThicknessShader.shade" ids="freestyle.shaders.pyImportance2DThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyImportance2DThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyImportance3DThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyImportance3DThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyImportance3DThicknessShader" ids="freestyle.shaders.pyImportance3DThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyImportance3DThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyImportance3DThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns thickness based on distance to a given point in 3D space.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyImportance3DThicknessShader\ method)',\ u'freestyle.shaders.pyImportance3DThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyImportance3DThicknessShader" first="False" fullname="pyImportance3DThicknessShader.shade" ids="freestyle.shaders.pyImportance3DThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyImportance3DThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyIncreasingColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyIncreasingColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyIncreasingColorShader" ids="freestyle.shaders.pyIncreasingColorShader" module="freestyle.shaders" names="freestyle.shaders.pyIncreasingColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyIncreasingColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Fades from one color to another along the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyIncreasingColorShader\ method)',\ u'freestyle.shaders.pyIncreasingColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyIncreasingColorShader" first="False" fullname="pyIncreasingColorShader.shade" ids="freestyle.shaders.pyIncreasingColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyIncreasingColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyIncreasingThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyIncreasingThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyIncreasingThicknessShader" ids="freestyle.shaders.pyIncreasingThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyIncreasingThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyIncreasingThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Increasingly thickens the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyIncreasingThicknessShader\ method)',\ u'freestyle.shaders.pyIncreasingThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyIncreasingThicknessShader" first="False" fullname="pyIncreasingThicknessShader.shade" ids="freestyle.shaders.pyIncreasingThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyIncreasingThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyInterpolateColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyInterpolateColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyInterpolateColorShader" ids="freestyle.shaders.pyInterpolateColorShader" module="freestyle.shaders" names="freestyle.shaders.pyInterpolateColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyInterpolateColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Fades from one color to another and back.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyInterpolateColorShader\ method)',\ u'freestyle.shaders.pyInterpolateColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyInterpolateColorShader" first="False" fullname="pyInterpolateColorShader.shade" ids="freestyle.shaders.pyInterpolateColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyInterpolateColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyLengthDependingBackboneStretcherShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyLengthDependingBackboneStretcherShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyLengthDependingBackboneStretcherShader" ids="freestyle.shaders.pyLengthDependingBackboneStretcherShader" module="freestyle.shaders" names="freestyle.shaders.pyLengthDependingBackboneStretcherShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyLengthDependingBackboneStretcherShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Stretches the stroke’s backbone proportional to the stroke’s length
                    NOTE: you’ll probably want an l somewhere between (0.5 - 0). A value that
                    is too high may yield unexpected results.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyLengthDependingBackboneStretcherShader\ method)',\ u'freestyle.shaders.pyLengthDependingBackboneStretcherShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyLengthDependingBackboneStretcherShader" first="False" fullname="pyLengthDependingBackboneStretcherShader.shade" ids="freestyle.shaders.pyLengthDependingBackboneStretcherShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyLengthDependingBackboneStretcherShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyMaterialColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyMaterialColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyMaterialColorShader" ids="freestyle.shaders.pyMaterialColorShader" module="freestyle.shaders" names="freestyle.shaders.pyMaterialColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyMaterialColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns the color of the underlying material to the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyMaterialColorShader\ method)',\ u'freestyle.shaders.pyMaterialColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyMaterialColorShader" first="False" fullname="pyMaterialColorShader.shade" ids="freestyle.shaders.pyMaterialColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyMaterialColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyModulateAlphaShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyModulateAlphaShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyModulateAlphaShader" ids="freestyle.shaders.pyModulateAlphaShader" module="freestyle.shaders" names="freestyle.shaders.pyModulateAlphaShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyModulateAlphaShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Limits the stroke’s alpha between a min and max value.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyModulateAlphaShader\ method)',\ u'freestyle.shaders.pyModulateAlphaShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyModulateAlphaShader" first="False" fullname="pyModulateAlphaShader.shade" ids="freestyle.shaders.pyModulateAlphaShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyModulateAlphaShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyNonLinearVaryingThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyNonLinearVaryingThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyNonLinearVaryingThicknessShader" ids="freestyle.shaders.pyNonLinearVaryingThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyNonLinearVaryingThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyNonLinearVaryingThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns thickness to a stroke based on an exponential function.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyNonLinearVaryingThicknessShader\ method)',\ u'freestyle.shaders.pyNonLinearVaryingThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyNonLinearVaryingThicknessShader" first="False" fullname="pyNonLinearVaryingThicknessShader.shade" ids="freestyle.shaders.pyNonLinearVaryingThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyNonLinearVaryingThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyPerlinNoise1DShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyPerlinNoise1DShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyPerlinNoise1DShader" ids="freestyle.shaders.pyPerlinNoise1DShader" module="freestyle.shaders" names="freestyle.shaders.pyPerlinNoise1DShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyPerlinNoise1DShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Displaces the stroke using the curvilinear abscissa.  This means
                    that lines with the same length and sampling interval will be
                    identically distorded.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyPerlinNoise1DShader\ method)',\ u'freestyle.shaders.pyPerlinNoise1DShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyPerlinNoise1DShader" first="False" fullname="pyPerlinNoise1DShader.shade" ids="freestyle.shaders.pyPerlinNoise1DShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyPerlinNoise1DShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyPerlinNoise2DShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyPerlinNoise2DShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyPerlinNoise2DShader" ids="freestyle.shaders.pyPerlinNoise2DShader" module="freestyle.shaders" names="freestyle.shaders.pyPerlinNoise2DShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyPerlinNoise2DShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Displaces the stroke using the strokes coordinates.  This means
                    that in a scene no strokes will be distorded identically.</paragraph>
                <paragraph>More information on the noise shaders can be found at:
                    freestyleintegration.wordpress.com/2011/09/25/development-updates-on-september-25/</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyPerlinNoise2DShader\ method)',\ u'freestyle.shaders.pyPerlinNoise2DShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyPerlinNoise2DShader" first="False" fullname="pyPerlinNoise2DShader.shade" ids="freestyle.shaders.pyPerlinNoise2DShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyPerlinNoise2DShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyRandomColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyRandomColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyRandomColorShader" ids="freestyle.shaders.pyRandomColorShader" module="freestyle.shaders" names="freestyle.shaders.pyRandomColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyRandomColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns a color to the stroke based on given seed.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyRandomColorShader\ method)',\ u'freestyle.shaders.pyRandomColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyRandomColorShader" first="False" fullname="pyRandomColorShader.shade" ids="freestyle.shaders.pyRandomColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyRandomColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pySLERPThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pySLERPThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pySLERPThicknessShader" ids="freestyle.shaders.pySLERPThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pySLERPThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pySLERPThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns thickness to a stroke based on spherical linear interpolation.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pySLERPThicknessShader\ method)',\ u'freestyle.shaders.pySLERPThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySLERPThicknessShader" first="False" fullname="pySLERPThicknessShader.shade" ids="freestyle.shaders.pySLERPThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pySLERPThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pySamplingShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pySamplingShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pySamplingShader" ids="freestyle.shaders.pySamplingShader" module="freestyle.shaders" names="freestyle.shaders.pySamplingShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pySamplingShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Resamples the stroke, which gives the stroke the amount of
                    vertices specified.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pySamplingShader\ method)',\ u'freestyle.shaders.pySamplingShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySamplingShader" first="False" fullname="pySamplingShader.shade" ids="freestyle.shaders.pySamplingShader.shade" module="freestyle.shaders" names="freestyle.shaders.pySamplingShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pySinusDisplacementShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pySinusDisplacementShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pySinusDisplacementShader" ids="freestyle.shaders.pySinusDisplacementShader" module="freestyle.shaders" names="freestyle.shaders.pySinusDisplacementShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pySinusDisplacementShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Displaces the stroke in the shape of a sine wave.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pySinusDisplacementShader\ method)',\ u'freestyle.shaders.pySinusDisplacementShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pySinusDisplacementShader" first="False" fullname="pySinusDisplacementShader.shade" ids="freestyle.shaders.pySinusDisplacementShader.shade" module="freestyle.shaders" names="freestyle.shaders.pySinusDisplacementShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyTVertexRemoverShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyTVertexRemoverShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyTVertexRemoverShader" ids="freestyle.shaders.pyTVertexRemoverShader" module="freestyle.shaders" names="freestyle.shaders.pyTVertexRemoverShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyTVertexRemoverShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Removes t-vertices from the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyTVertexRemoverShader\ method)',\ u'freestyle.shaders.pyTVertexRemoverShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyTVertexRemoverShader" first="False" fullname="pyTVertexRemoverShader.shade" ids="freestyle.shaders.pyTVertexRemoverShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyTVertexRemoverShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyTVertexThickenerShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyTVertexThickenerShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyTVertexThickenerShader" ids="freestyle.shaders.pyTVertexThickenerShader" module="freestyle.shaders" names="freestyle.shaders.pyTVertexThickenerShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyTVertexThickenerShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Thickens TVertices (visual intersections between two edges).</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyTVertexThickenerShader\ method)',\ u'freestyle.shaders.pyTVertexThickenerShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyTVertexThickenerShader" first="False" fullname="pyTVertexThickenerShader.shade" ids="freestyle.shaders.pyTVertexThickenerShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyTVertexThickenerShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyTimeColorShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyTimeColorShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyTimeColorShader" ids="freestyle.shaders.pyTimeColorShader" module="freestyle.shaders" names="freestyle.shaders.pyTimeColorShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyTimeColorShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns a grayscale value that increases for every vertex.
                    The brightness will increase along the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyTimeColorShader\ method)',\ u'freestyle.shaders.pyTimeColorShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyTimeColorShader" first="False" fullname="pyTimeColorShader.shade" ids="freestyle.shaders.pyTimeColorShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyTimeColorShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyTipRemoverShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyTipRemoverShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyTipRemoverShader" ids="freestyle.shaders.pyTipRemoverShader" module="freestyle.shaders" names="freestyle.shaders.pyTipRemoverShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyTipRemoverShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Removes the tips of the stroke.</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyTipRemoverShader\ method)',\ u'freestyle.shaders.pyTipRemoverShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyTipRemoverShader" first="False" fullname="pyTipRemoverShader.shade" ids="freestyle.shaders.pyTipRemoverShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyTipRemoverShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <paragraph>Undocumented</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pyZDependingThicknessShader\ (class\ in\ freestyle.shaders)',\ u'freestyle.shaders.pyZDependingThicknessShader',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="pyZDependingThicknessShader" ids="freestyle.shaders.pyZDependingThicknessShader" module="freestyle.shaders" names="freestyle.shaders.pyZDependingThicknessShader"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.shaders.</desc_addname><desc_name xml:space="preserve">pyZDependingThicknessShader</desc_name></desc_signature>
            <desc_content>
                <paragraph>Assigns thickness based on an object’s local Z depth (point
                    closest to camera is 1, point furthest from camera is zero).</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.shaders.pyZDependingThicknessShader\ method)',\ u'freestyle.shaders.pyZDependingThicknessShader.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="pyZDependingThicknessShader" first="False" fullname="pyZDependingThicknessShader.shade" ids="freestyle.shaders.pyZDependingThicknessShader.shade" module="freestyle.shaders" names="freestyle.shaders.pyZDependingThicknessShader.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
