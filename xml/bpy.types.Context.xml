<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Context.rst">
    <section ids="module-bpy.types context-bpy-struct" names="context(bpy_struct)">
        <title>Context(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'Context\ (class\ in\ bpy.types)',\ u'bpy.types.Context',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Context" ids="bpy.types.Context" module="bpy.types" names="bpy.types.Context"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Context</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Current windowmanager and data context</paragraph>
                <index entries="['single',\ u'Context.area\ (in\ module\ bpy.types)',\ u'bpy.types.Context.area',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.area" ids="bpy.types.Context.area" module="bpy.types" names="bpy.types.Context.area"><desc_name xml:space="preserve">area</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Area" refuri="bpy.types.Area#bpy.types.Area"><literal classes="xref py py-class">Area</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.blend_data\ (in\ module\ bpy.types)',\ u'bpy.types.Context.blend_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.blend_data" ids="bpy.types.Context.blend_data" module="bpy.types" names="bpy.types.Context.blend_data"><desc_name xml:space="preserve">blend_data</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.BlendData" refuri="bpy.types.BlendData#bpy.types.BlendData"><literal classes="xref py py-class">BlendData</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.collection\ (in\ module\ bpy.types)',\ u'bpy.types.Context.collection',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.collection" ids="bpy.types.Context.collection" module="bpy.types" names="bpy.types.Context.collection"><desc_name xml:space="preserve">collection</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Collection" refuri="bpy.types.Collection#bpy.types.Collection"><literal classes="xref py py-class">Collection</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.depsgraph\ (in\ module\ bpy.types)',\ u'bpy.types.Context.depsgraph',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.depsgraph" ids="bpy.types.Context.depsgraph" module="bpy.types" names="bpy.types.Context.depsgraph"><desc_name xml:space="preserve">depsgraph</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Depsgraph" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph"><literal classes="xref py py-class">Depsgraph</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.engine\ (in\ module\ bpy.types)',\ u'bpy.types.Context.engine',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.engine" ids="bpy.types.Context.engine" module="bpy.types" names="bpy.types.Context.engine"><desc_name xml:space="preserve">engine</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.gizmo_group\ (in\ module\ bpy.types)',\ u'bpy.types.Context.gizmo_group',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.gizmo_group" ids="bpy.types.Context.gizmo_group" module="bpy.types" names="bpy.types.Context.gizmo_group"><desc_name xml:space="preserve">gizmo_group</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup"><literal classes="xref py py-class">GizmoGroup</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.layer_collection\ (in\ module\ bpy.types)',\ u'bpy.types.Context.layer_collection',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.layer_collection" ids="bpy.types.Context.layer_collection" module="bpy.types" names="bpy.types.Context.layer_collection"><desc_name xml:space="preserve">layer_collection</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.LayerCollection" refuri="bpy.types.LayerCollection#bpy.types.LayerCollection"><literal classes="xref py py-class">LayerCollection</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.mode\ (in\ module\ bpy.types)',\ u'bpy.types.Context.mode',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.mode" ids="bpy.types.Context.mode" module="bpy.types" names="bpy.types.Context.mode"><desc_name xml:space="preserve">mode</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘EDIT_MESH’, ‘EDIT_CURVE’, ‘EDIT_SURFACE’, ‘EDIT_TEXT’, ‘EDIT_ARMATURE’, ‘EDIT_METABALL’, ‘EDIT_LATTICE’, ‘POSE’, ‘SCULPT’, ‘PAINT_WEIGHT’, ‘PAINT_VERTEX’, ‘PAINT_TEXTURE’, ‘PARTICLE’, ‘OBJECT’, ‘GPENCIL_PAINT’, ‘GPENCIL_EDIT’, ‘GPENCIL_SCULPT’, ‘GPENCIL_WEIGHT’], default ‘EDIT_MESH’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.region\ (in\ module\ bpy.types)',\ u'bpy.types.Context.region',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.region" ids="bpy.types.Context.region" module="bpy.types" names="bpy.types.Context.region"><desc_name xml:space="preserve">region</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Region" refuri="bpy.types.Region#bpy.types.Region"><literal classes="xref py py-class">Region</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.region_data\ (in\ module\ bpy.types)',\ u'bpy.types.Context.region_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.region_data" ids="bpy.types.Context.region_data" module="bpy.types" names="bpy.types.Context.region_data"><desc_name xml:space="preserve">region_data</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.RegionView3D" refuri="bpy.types.RegionView3D#bpy.types.RegionView3D"><literal classes="xref py py-class">RegionView3D</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.scene\ (in\ module\ bpy.types)',\ u'bpy.types.Context.scene',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.scene" ids="bpy.types.Context.scene" module="bpy.types" names="bpy.types.Context.scene"><desc_name xml:space="preserve">scene</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.screen\ (in\ module\ bpy.types)',\ u'bpy.types.Context.screen',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.screen" ids="bpy.types.Context.screen" module="bpy.types" names="bpy.types.Context.screen"><desc_name xml:space="preserve">screen</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Screen" refuri="bpy.types.Screen#bpy.types.Screen"><literal classes="xref py py-class">Screen</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.space_data\ (in\ module\ bpy.types)',\ u'bpy.types.Context.space_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.space_data" ids="bpy.types.Context.space_data" module="bpy.types" names="bpy.types.Context.space_data"><desc_name xml:space="preserve">space_data</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Space" refuri="bpy.types.Space#bpy.types.Space"><literal classes="xref py py-class">Space</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.tool_settings\ (in\ module\ bpy.types)',\ u'bpy.types.Context.tool_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.tool_settings" ids="bpy.types.Context.tool_settings" module="bpy.types" names="bpy.types.Context.tool_settings"><desc_name xml:space="preserve">tool_settings</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ToolSettings" refuri="bpy.types.ToolSettings#bpy.types.ToolSettings"><literal classes="xref py py-class">ToolSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.user_preferences\ (in\ module\ bpy.types)',\ u'bpy.types.Context.user_preferences',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.user_preferences" ids="bpy.types.Context.user_preferences" module="bpy.types" names="bpy.types.Context.user_preferences"><desc_name xml:space="preserve">user_preferences</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.UserPreferences" refuri="bpy.types.UserPreferences#bpy.types.UserPreferences"><literal classes="xref py py-class">UserPreferences</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.view_layer\ (in\ module\ bpy.types)',\ u'bpy.types.Context.view_layer',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.view_layer" ids="bpy.types.Context.view_layer" module="bpy.types" names="bpy.types.Context.view_layer"><desc_name xml:space="preserve">view_layer</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.window\ (in\ module\ bpy.types)',\ u'bpy.types.Context.window',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.window" ids="bpy.types.Context.window" module="bpy.types" names="bpy.types.Context.window"><desc_name xml:space="preserve">window</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Window" refuri="bpy.types.Window#bpy.types.Window"><literal classes="xref py py-class">Window</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.window_manager\ (in\ module\ bpy.types)',\ u'bpy.types.Context.window_manager',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.window_manager" ids="bpy.types.Context.window_manager" module="bpy.types" names="bpy.types.Context.window_manager"><desc_name xml:space="preserve">window_manager</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.WindowManager" refuri="bpy.types.WindowManager#bpy.types.WindowManager"><literal classes="xref py py-class">WindowManager</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Context.workspace\ (in\ module\ bpy.types)',\ u'bpy.types.Context.workspace',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Context" first="False" fullname="Context.workspace" ids="bpy.types.Context.workspace" module="bpy.types" names="bpy.types.Context.workspace"><desc_name xml:space="preserve">workspace</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.WorkSpace" refuri="bpy.types.WorkSpace#bpy.types.WorkSpace"><literal classes="xref py py-class">WorkSpace</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'copy()\ (bpy.types.Context\ method)',\ u'bpy.types.Context.copy',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Context" first="False" fullname="Context.copy" ids="bpy.types.Context.copy" module="bpy.types" names="bpy.types.Context.copy"><desc_name xml:space="preserve">copy</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Context\ class\ method)',\ u'bpy.types.Context.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Context" first="False" fullname="Context.bl_rna_get_subclass" ids="bpy.types.Context.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Context.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Context\ class\ method)',\ u'bpy.types.Context.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Context" first="False" fullname="Context.bl_rna_get_subclass_py" ids="bpy.types.Context.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Context.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.draw" refuri="bpy.types.Gizmo#bpy.types.Gizmo.draw"><literal classes="xref py py-class">Gizmo.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.draw_select" refuri="bpy.types.Gizmo#bpy.types.Gizmo.draw_select"><literal classes="xref py py-class">Gizmo.draw_select</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.exit" refuri="bpy.types.Gizmo#bpy.types.Gizmo.exit"><literal classes="xref py py-class">Gizmo.exit</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.invoke" refuri="bpy.types.Gizmo#bpy.types.Gizmo.invoke"><literal classes="xref py py-class">Gizmo.invoke</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.modal" refuri="bpy.types.Gizmo#bpy.types.Gizmo.modal"><literal classes="xref py py-class">Gizmo.modal</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.test_select" refuri="bpy.types.Gizmo#bpy.types.Gizmo.test_select"><literal classes="xref py py-class">Gizmo.test_select</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.draw_prepare" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.draw_prepare"><literal classes="xref py py-class">GizmoGroup.draw_prepare</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.invoke_prepare" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.invoke_prepare"><literal classes="xref py py-class">GizmoGroup.invoke_prepare</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.poll" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.poll"><literal classes="xref py py-class">GizmoGroup.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.refresh" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.refresh"><literal classes="xref py py-class">GizmoGroup.refresh</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.setup" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.setup"><literal classes="xref py py-class">GizmoGroup.setup</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Header.draw" refuri="bpy.types.Header#bpy.types.Header.draw"><literal classes="xref py py-class">Header.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetInfo.generate" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo.generate"><literal classes="xref py py-class">KeyingSetInfo.generate</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetInfo.iterator" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo.iterator"><literal classes="xref py py-class">KeyingSetInfo.iterator</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetInfo.poll" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo.poll"><literal classes="xref py py-class">KeyingSetInfo.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Macro.draw" refuri="bpy.types.Macro#bpy.types.Macro.draw"><literal classes="xref py py-class">Macro.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Macro.poll" refuri="bpy.types.Macro#bpy.types.Macro.poll"><literal classes="xref py py-class">Macro.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Menu.draw" refuri="bpy.types.Menu#bpy.types.Menu.draw"><literal classes="xref py py-class">Menu.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Menu.poll" refuri="bpy.types.Menu#bpy.types.Menu.poll"><literal classes="xref py py-class">Menu.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons" refuri="bpy.types.Node#bpy.types.Node.draw_buttons"><literal classes="xref py py-class">Node.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons_ext" refuri="bpy.types.Node#bpy.types.Node.draw_buttons_ext"><literal classes="xref py py-class">Node.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.init" refuri="bpy.types.Node#bpy.types.Node.init"><literal classes="xref py py-class">Node.init</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.socket_value_update" refuri="bpy.types.Node#bpy.types.Node.socket_value_update"><literal classes="xref py py-class">Node.socket_value_update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons"><literal classes="xref py py-class">NodeInternal.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons_ext" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons_ext"><literal classes="xref py py-class">NodeInternal.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.draw" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.draw"><literal classes="xref py py-class">NodeSocket.draw</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.draw_color" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.draw_color"><literal classes="xref py py-class">NodeSocket.draw_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocketInterface.draw" refuri="bpy.types.NodeSocketInterface#bpy.types.NodeSocketInterface.draw"><literal classes="xref py py-class">NodeSocketInterface.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocketInterface.draw_color" refuri="bpy.types.NodeSocketInterface#bpy.types.NodeSocketInterface.draw_color"><literal classes="xref py py-class">NodeSocketInterface.draw_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocketInterfaceStandard.draw" refuri="bpy.types.NodeSocketInterfaceStandard#bpy.types.NodeSocketInterfaceStandard.draw"><literal classes="xref py py-class">NodeSocketInterfaceStandard.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocketInterfaceStandard.draw_color" refuri="bpy.types.NodeSocketInterfaceStandard#bpy.types.NodeSocketInterfaceStandard.draw_color"><literal classes="xref py py-class">NodeSocketInterfaceStandard.draw_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocketStandard.draw" refuri="bpy.types.NodeSocketStandard#bpy.types.NodeSocketStandard.draw"><literal classes="xref py py-class">NodeSocketStandard.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocketStandard.draw_color" refuri="bpy.types.NodeSocketStandard#bpy.types.NodeSocketStandard.draw_color"><literal classes="xref py py-class">NodeSocketStandard.draw_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.get_from_context" refuri="bpy.types.NodeTree#bpy.types.NodeTree.get_from_context"><literal classes="xref py py-class">NodeTree.get_from_context</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.interface_update" refuri="bpy.types.NodeTree#bpy.types.NodeTree.interface_update"><literal classes="xref py py-class">NodeTree.interface_update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.poll" refuri="bpy.types.NodeTree#bpy.types.NodeTree.poll"><literal classes="xref py py-class">NodeTree.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Operator.cancel" refuri="bpy.types.Operator#bpy.types.Operator.cancel"><literal classes="xref py py-class">Operator.cancel</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Operator.check" refuri="bpy.types.Operator#bpy.types.Operator.check"><literal classes="xref py py-class">Operator.check</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Operator.draw" refuri="bpy.types.Operator#bpy.types.Operator.draw"><literal classes="xref py py-class">Operator.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Operator.execute" refuri="bpy.types.Operator#bpy.types.Operator.execute"><literal classes="xref py py-class">Operator.execute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Operator.invoke" refuri="bpy.types.Operator#bpy.types.Operator.invoke"><literal classes="xref py py-class">Operator.invoke</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Operator.modal" refuri="bpy.types.Operator#bpy.types.Operator.modal"><literal classes="xref py py-class">Operator.modal</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Operator.poll" refuri="bpy.types.Operator#bpy.types.Operator.poll"><literal classes="xref py py-class">Operator.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Panel.draw" refuri="bpy.types.Panel#bpy.types.Panel.draw"><literal classes="xref py py-class">Panel.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Panel.draw_header" refuri="bpy.types.Panel#bpy.types.Panel.draw_header"><literal classes="xref py py-class">Panel.draw_header</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Panel.draw_header_preset" refuri="bpy.types.Panel#bpy.types.Panel.draw_header_preset"><literal classes="xref py py-class">Panel.draw_header_preset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Panel.poll" refuri="bpy.types.Panel#bpy.types.Panel.poll"><literal classes="xref py py-class">Panel.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.view_draw" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.view_draw"><literal classes="xref py py-class">RenderEngine.view_draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.view_update" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.view_update"><literal classes="xref py py-class">RenderEngine.view_update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UIList.draw_filter" refuri="bpy.types.UIList#bpy.types.UIList.draw_filter"><literal classes="xref py py-class">UIList.draw_filter</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UIList.draw_item" refuri="bpy.types.UIList#bpy.types.UIList.draw_item"><literal classes="xref py py-class">UIList.draw_item</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UIList.filter_items" refuri="bpy.types.UIList#bpy.types.UIList.filter_items"><literal classes="xref py py-class">UIList.filter_items</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
