<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/aud.rst">
    <section ids="module-aud audio-system-aud" names="audio\ system\ (aud)">
        <title>Audio System (aud)</title>
        <index entries="['single',\ u'aud\ (module)',\ u'module-aud',\ '',\ None]"></index>
        <paragraph>Audaspace (pronounced “outer space”) is a high level audio library.</paragraph>
        <section ids="basic-sound-playback" names="basic\ sound\ playback">
            <title>Basic Sound Playback</title>
            <paragraph>This script shows how to use the classes: <reference internal="True" refid="aud.Device" reftitle="aud.Device"><literal classes="xref py py-class">Device</literal></reference>, <literal classes="xref py py-class">Factory</literal> and
                <reference internal="True" refid="aud.Handle" reftitle="aud.Handle"><literal classes="xref py py-class">Handle</literal></reference>.</paragraph>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/aud.py" xml:space="preserve">import aud

device = aud.device()
# load sound file (it can be a video file with audio)
factory = aud.Factory('music.ogg')

# play the audio, this return a handle to control play/pause
handle = device.play(factory)
# if the audio is not too big and will be used often you can buffer it
factory_buffered = aud.Factory.buffer(factory)
handle_buffered = device.play(factory_buffered)

# stop the sounds (otherwise they play until their ends)
handle.stop()
handle_buffered.stop()
</literal_block>
            <index entries="['single',\ u'AP_LOCATION\ (in\ module\ aud)',\ u'aud.AP_LOCATION',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="AP_LOCATION" ids="aud.AP_LOCATION" module="aud" names="aud.AP_LOCATION"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">AP_LOCATION</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 3</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'AP_ORIENTATION\ (in\ module\ aud)',\ u'aud.AP_ORIENTATION',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="AP_ORIENTATION" ids="aud.AP_ORIENTATION" module="aud" names="aud.AP_ORIENTATION"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">AP_ORIENTATION</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 4</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'AP_PANNING\ (in\ module\ aud)',\ u'aud.AP_PANNING',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="AP_PANNING" ids="aud.AP_PANNING" module="aud" names="aud.AP_PANNING"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">AP_PANNING</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 1</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'AP_PITCH\ (in\ module\ aud)',\ u'aud.AP_PITCH',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="AP_PITCH" ids="aud.AP_PITCH" module="aud" names="aud.AP_PITCH"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">AP_PITCH</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 2</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'AP_VOLUME\ (in\ module\ aud)',\ u'aud.AP_VOLUME',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="AP_VOLUME" ids="aud.AP_VOLUME" module="aud" names="aud.AP_VOLUME"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">AP_VOLUME</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_INVALID\ (in\ module\ aud)',\ u'aud.CHANNELS_INVALID',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_INVALID" ids="aud.CHANNELS_INVALID" module="aud" names="aud.CHANNELS_INVALID"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_INVALID</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_MONO\ (in\ module\ aud)',\ u'aud.CHANNELS_MONO',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_MONO" ids="aud.CHANNELS_MONO" module="aud" names="aud.CHANNELS_MONO"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_MONO</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 1</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_STEREO\ (in\ module\ aud)',\ u'aud.CHANNELS_STEREO',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_STEREO" ids="aud.CHANNELS_STEREO" module="aud" names="aud.CHANNELS_STEREO"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_STEREO</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 2</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_STEREO_LFE\ (in\ module\ aud)',\ u'aud.CHANNELS_STEREO_LFE',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_STEREO_LFE" ids="aud.CHANNELS_STEREO_LFE" module="aud" names="aud.CHANNELS_STEREO_LFE"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_STEREO_LFE</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 3</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_SURROUND4\ (in\ module\ aud)',\ u'aud.CHANNELS_SURROUND4',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_SURROUND4" ids="aud.CHANNELS_SURROUND4" module="aud" names="aud.CHANNELS_SURROUND4"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_SURROUND4</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 4</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_SURROUND5\ (in\ module\ aud)',\ u'aud.CHANNELS_SURROUND5',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_SURROUND5" ids="aud.CHANNELS_SURROUND5" module="aud" names="aud.CHANNELS_SURROUND5"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_SURROUND5</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 5</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_SURROUND51\ (in\ module\ aud)',\ u'aud.CHANNELS_SURROUND51',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_SURROUND51" ids="aud.CHANNELS_SURROUND51" module="aud" names="aud.CHANNELS_SURROUND51"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_SURROUND51</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 6</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_SURROUND61\ (in\ module\ aud)',\ u'aud.CHANNELS_SURROUND61',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_SURROUND61" ids="aud.CHANNELS_SURROUND61" module="aud" names="aud.CHANNELS_SURROUND61"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_SURROUND61</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 7</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CHANNELS_SURROUND71\ (in\ module\ aud)',\ u'aud.CHANNELS_SURROUND71',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CHANNELS_SURROUND71" ids="aud.CHANNELS_SURROUND71" module="aud" names="aud.CHANNELS_SURROUND71"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CHANNELS_SURROUND71</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 8</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_AAC\ (in\ module\ aud)',\ u'aud.CODEC_AAC',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_AAC" ids="aud.CODEC_AAC" module="aud" names="aud.CODEC_AAC"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_AAC</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 1</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_AC3\ (in\ module\ aud)',\ u'aud.CODEC_AC3',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_AC3" ids="aud.CODEC_AC3" module="aud" names="aud.CODEC_AC3"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_AC3</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 2</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_FLAC\ (in\ module\ aud)',\ u'aud.CODEC_FLAC',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_FLAC" ids="aud.CODEC_FLAC" module="aud" names="aud.CODEC_FLAC"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_FLAC</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 3</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_INVALID\ (in\ module\ aud)',\ u'aud.CODEC_INVALID',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_INVALID" ids="aud.CODEC_INVALID" module="aud" names="aud.CODEC_INVALID"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_INVALID</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_MP2\ (in\ module\ aud)',\ u'aud.CODEC_MP2',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_MP2" ids="aud.CODEC_MP2" module="aud" names="aud.CODEC_MP2"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_MP2</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 4</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_MP3\ (in\ module\ aud)',\ u'aud.CODEC_MP3',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_MP3" ids="aud.CODEC_MP3" module="aud" names="aud.CODEC_MP3"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_MP3</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 5</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_OPUS\ (in\ module\ aud)',\ u'aud.CODEC_OPUS',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_OPUS" ids="aud.CODEC_OPUS" module="aud" names="aud.CODEC_OPUS"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_OPUS</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 8</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_PCM\ (in\ module\ aud)',\ u'aud.CODEC_PCM',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_PCM" ids="aud.CODEC_PCM" module="aud" names="aud.CODEC_PCM"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_PCM</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 6</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CODEC_VORBIS\ (in\ module\ aud)',\ u'aud.CODEC_VORBIS',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CODEC_VORBIS" ids="aud.CODEC_VORBIS" module="aud" names="aud.CODEC_VORBIS"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CODEC_VORBIS</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 7</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_AC3\ (in\ module\ aud)',\ u'aud.CONTAINER_AC3',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_AC3" ids="aud.CONTAINER_AC3" module="aud" names="aud.CONTAINER_AC3"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_AC3</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 1</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_FLAC\ (in\ module\ aud)',\ u'aud.CONTAINER_FLAC',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_FLAC" ids="aud.CONTAINER_FLAC" module="aud" names="aud.CONTAINER_FLAC"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_FLAC</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 2</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_INVALID\ (in\ module\ aud)',\ u'aud.CONTAINER_INVALID',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_INVALID" ids="aud.CONTAINER_INVALID" module="aud" names="aud.CONTAINER_INVALID"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_INVALID</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_MATROSKA\ (in\ module\ aud)',\ u'aud.CONTAINER_MATROSKA',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_MATROSKA" ids="aud.CONTAINER_MATROSKA" module="aud" names="aud.CONTAINER_MATROSKA"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_MATROSKA</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 3</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_MP2\ (in\ module\ aud)',\ u'aud.CONTAINER_MP2',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_MP2" ids="aud.CONTAINER_MP2" module="aud" names="aud.CONTAINER_MP2"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_MP2</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 4</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_MP3\ (in\ module\ aud)',\ u'aud.CONTAINER_MP3',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_MP3" ids="aud.CONTAINER_MP3" module="aud" names="aud.CONTAINER_MP3"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_MP3</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 5</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_OGG\ (in\ module\ aud)',\ u'aud.CONTAINER_OGG',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_OGG" ids="aud.CONTAINER_OGG" module="aud" names="aud.CONTAINER_OGG"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_OGG</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 6</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'CONTAINER_WAV\ (in\ module\ aud)',\ u'aud.CONTAINER_WAV',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="CONTAINER_WAV" ids="aud.CONTAINER_WAV" module="aud" names="aud.CONTAINER_WAV"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">CONTAINER_WAV</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 7</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DISTANCE_MODEL_EXPONENT\ (in\ module\ aud)',\ u'aud.DISTANCE_MODEL_EXPONENT',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="DISTANCE_MODEL_EXPONENT" ids="aud.DISTANCE_MODEL_EXPONENT" module="aud" names="aud.DISTANCE_MODEL_EXPONENT"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DISTANCE_MODEL_EXPONENT</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 5</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DISTANCE_MODEL_EXPONENT_CLAMPED\ (in\ module\ aud)',\ u'aud.DISTANCE_MODEL_EXPONENT_CLAMPED',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="DISTANCE_MODEL_EXPONENT_CLAMPED" ids="aud.DISTANCE_MODEL_EXPONENT_CLAMPED" module="aud" names="aud.DISTANCE_MODEL_EXPONENT_CLAMPED"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DISTANCE_MODEL_EXPONENT_CLAMPED</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 6</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DISTANCE_MODEL_INVALID\ (in\ module\ aud)',\ u'aud.DISTANCE_MODEL_INVALID',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="DISTANCE_MODEL_INVALID" ids="aud.DISTANCE_MODEL_INVALID" module="aud" names="aud.DISTANCE_MODEL_INVALID"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DISTANCE_MODEL_INVALID</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DISTANCE_MODEL_INVERSE\ (in\ module\ aud)',\ u'aud.DISTANCE_MODEL_INVERSE',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="DISTANCE_MODEL_INVERSE" ids="aud.DISTANCE_MODEL_INVERSE" module="aud" names="aud.DISTANCE_MODEL_INVERSE"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DISTANCE_MODEL_INVERSE</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 1</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DISTANCE_MODEL_INVERSE_CLAMPED\ (in\ module\ aud)',\ u'aud.DISTANCE_MODEL_INVERSE_CLAMPED',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="DISTANCE_MODEL_INVERSE_CLAMPED" ids="aud.DISTANCE_MODEL_INVERSE_CLAMPED" module="aud" names="aud.DISTANCE_MODEL_INVERSE_CLAMPED"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DISTANCE_MODEL_INVERSE_CLAMPED</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 2</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DISTANCE_MODEL_LINEAR\ (in\ module\ aud)',\ u'aud.DISTANCE_MODEL_LINEAR',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="DISTANCE_MODEL_LINEAR" ids="aud.DISTANCE_MODEL_LINEAR" module="aud" names="aud.DISTANCE_MODEL_LINEAR"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DISTANCE_MODEL_LINEAR</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 3</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DISTANCE_MODEL_LINEAR_CLAMPED\ (in\ module\ aud)',\ u'aud.DISTANCE_MODEL_LINEAR_CLAMPED',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="DISTANCE_MODEL_LINEAR_CLAMPED" ids="aud.DISTANCE_MODEL_LINEAR_CLAMPED" module="aud" names="aud.DISTANCE_MODEL_LINEAR_CLAMPED"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DISTANCE_MODEL_LINEAR_CLAMPED</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 4</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'FORMAT_FLOAT32\ (in\ module\ aud)',\ u'aud.FORMAT_FLOAT32',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="FORMAT_FLOAT32" ids="aud.FORMAT_FLOAT32" module="aud" names="aud.FORMAT_FLOAT32"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">FORMAT_FLOAT32</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 36</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'FORMAT_FLOAT64\ (in\ module\ aud)',\ u'aud.FORMAT_FLOAT64',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="FORMAT_FLOAT64" ids="aud.FORMAT_FLOAT64" module="aud" names="aud.FORMAT_FLOAT64"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">FORMAT_FLOAT64</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 40</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'FORMAT_INVALID\ (in\ module\ aud)',\ u'aud.FORMAT_INVALID',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="FORMAT_INVALID" ids="aud.FORMAT_INVALID" module="aud" names="aud.FORMAT_INVALID"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">FORMAT_INVALID</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'FORMAT_S16\ (in\ module\ aud)',\ u'aud.FORMAT_S16',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="FORMAT_S16" ids="aud.FORMAT_S16" module="aud" names="aud.FORMAT_S16"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">FORMAT_S16</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 18</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'FORMAT_S24\ (in\ module\ aud)',\ u'aud.FORMAT_S24',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="FORMAT_S24" ids="aud.FORMAT_S24" module="aud" names="aud.FORMAT_S24"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">FORMAT_S24</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 19</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'FORMAT_S32\ (in\ module\ aud)',\ u'aud.FORMAT_S32',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="FORMAT_S32" ids="aud.FORMAT_S32" module="aud" names="aud.FORMAT_S32"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">FORMAT_S32</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 20</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'FORMAT_U8\ (in\ module\ aud)',\ u'aud.FORMAT_U8',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="FORMAT_U8" ids="aud.FORMAT_U8" module="aud" names="aud.FORMAT_U8"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">FORMAT_U8</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 1</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_11025\ (in\ module\ aud)',\ u'aud.RATE_11025',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_11025" ids="aud.RATE_11025" module="aud" names="aud.RATE_11025"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_11025</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 11025</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_16000\ (in\ module\ aud)',\ u'aud.RATE_16000',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_16000" ids="aud.RATE_16000" module="aud" names="aud.RATE_16000"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_16000</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 16000</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_192000\ (in\ module\ aud)',\ u'aud.RATE_192000',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_192000" ids="aud.RATE_192000" module="aud" names="aud.RATE_192000"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_192000</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 192000</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_22050\ (in\ module\ aud)',\ u'aud.RATE_22050',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_22050" ids="aud.RATE_22050" module="aud" names="aud.RATE_22050"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_22050</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 22050</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_32000\ (in\ module\ aud)',\ u'aud.RATE_32000',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_32000" ids="aud.RATE_32000" module="aud" names="aud.RATE_32000"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_32000</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 32000</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_44100\ (in\ module\ aud)',\ u'aud.RATE_44100',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_44100" ids="aud.RATE_44100" module="aud" names="aud.RATE_44100"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_44100</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 44100</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_48000\ (in\ module\ aud)',\ u'aud.RATE_48000',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_48000" ids="aud.RATE_48000" module="aud" names="aud.RATE_48000"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_48000</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 48000</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_8000\ (in\ module\ aud)',\ u'aud.RATE_8000',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_8000" ids="aud.RATE_8000" module="aud" names="aud.RATE_8000"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_8000</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 8000</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_88200\ (in\ module\ aud)',\ u'aud.RATE_88200',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_88200" ids="aud.RATE_88200" module="aud" names="aud.RATE_88200"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_88200</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 88200</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_96000\ (in\ module\ aud)',\ u'aud.RATE_96000',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_96000" ids="aud.RATE_96000" module="aud" names="aud.RATE_96000"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_96000</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 96000</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'RATE_INVALID\ (in\ module\ aud)',\ u'aud.RATE_INVALID',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="RATE_INVALID" ids="aud.RATE_INVALID" module="aud" names="aud.RATE_INVALID"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">RATE_INVALID</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'STATUS_INVALID\ (in\ module\ aud)',\ u'aud.STATUS_INVALID',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="STATUS_INVALID" ids="aud.STATUS_INVALID" module="aud" names="aud.STATUS_INVALID"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">STATUS_INVALID</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 0</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'STATUS_PAUSED\ (in\ module\ aud)',\ u'aud.STATUS_PAUSED',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="STATUS_PAUSED" ids="aud.STATUS_PAUSED" module="aud" names="aud.STATUS_PAUSED"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">STATUS_PAUSED</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 2</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'STATUS_PLAYING\ (in\ module\ aud)',\ u'aud.STATUS_PLAYING',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="STATUS_PLAYING" ids="aud.STATUS_PLAYING" module="aud" names="aud.STATUS_PLAYING"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">STATUS_PLAYING</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 1</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'STATUS_STOPPED\ (in\ module\ aud)',\ u'aud.STATUS_STOPPED',\ '',\ None]"></index>
            <desc desctype="data" domain="py" noindex="False" objtype="data">
                <desc_signature class="" first="False" fullname="STATUS_STOPPED" ids="aud.STATUS_STOPPED" module="aud" names="aud.STATUS_STOPPED"><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">STATUS_STOPPED</desc_name></desc_signature>
                <desc_content>
                    <paragraph>constant value 3</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'Device\ (class\ in\ aud)',\ u'aud.Device',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Device" ids="aud.Device" module="aud" names="aud.Device"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">Device</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Device objects represent an audio output backend like OpenAL or SDL, but might also represent a file output or RAM buffer output.</paragraph>
                    <paragraph>lock()</paragraph>
                    <paragraph>Locks the device so that it’s guaranteed, that no samples are read from the streams until <literal classes="xref py py-meth">unlock()</literal> is called.
                        This is useful if you want to do start/stop/pause/resume some sounds at the same time.</paragraph>
                    <note>
                        <paragraph>The device has to be unlocked as often as locked to be able to continue playback.</paragraph>
                    </note>
                    <warning>
                        <paragraph>Make sure the time between locking and unlocking is as short as possible to avoid clicks.</paragraph>
                    </warning>
                    <paragraph>play(sound, keep=False)</paragraph>
                    <paragraph>Plays a sound.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">sound</literal_strong> (<reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>) – The sound to play.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">keep</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – See <reference internal="True" refid="aud.Handle.keep" reftitle="aud.Handle.keep"><literal classes="xref py py-attr">Handle.keep</literal></reference>.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The playback handle with which playback can be controlled with.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Handle" reftitle="aud.Handle"><literal classes="xref py py-class">Handle</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>stopAll()</paragraph>
                    <paragraph>Stops all playing and paused sounds.</paragraph>
                    <paragraph>unlock()</paragraph>
                    <paragraph>Unlocks the device after a lock call, see <literal classes="xref py py-meth">lock()</literal> for details.</paragraph>
                    <index entries="['single',\ u'channels\ (aud.Device\ attribute)',\ u'aud.Device.channels',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.channels" ids="aud.Device.channels" module="aud" names="aud.Device.channels"><desc_name xml:space="preserve">channels</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The channel count of the device.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'distance_model\ (aud.Device\ attribute)',\ u'aud.Device.distance_model',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.distance_model" ids="aud.Device.distance_model" module="aud" names="aud.Device.distance_model"><desc_name xml:space="preserve">distance_model</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The distance model of the device.</paragraph>
                            <seealso>
                                <paragraph><reference refuri="http://connect.creativelabs.com/openal/Documentation/OpenAL%201.1%20Specification.htm#_Toc199835864">http://connect.creativelabs.com/openal/Documentation/OpenAL%201.1%20Specification.htm#_Toc199835864</reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'doppler_factor\ (aud.Device\ attribute)',\ u'aud.Device.doppler_factor',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.doppler_factor" ids="aud.Device.doppler_factor" module="aud" names="aud.Device.doppler_factor"><desc_name xml:space="preserve">doppler_factor</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The doppler factor of the device.
                                This factor is a scaling factor for the velocity vectors in doppler calculation. So a value bigger than 1 will exaggerate the effect as it raises the velocity.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'format\ (aud.Device\ attribute)',\ u'aud.Device.format',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.format" ids="aud.Device.format" module="aud" names="aud.Device.format"><desc_name xml:space="preserve">format</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The native sample format of the device.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'listener_location\ (aud.Device\ attribute)',\ u'aud.Device.listener_location',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.listener_location" ids="aud.Device.listener_location" module="aud" names="aud.Device.listener_location"><desc_name xml:space="preserve">listener_location</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The listeners’s location in 3D space, a 3D tuple of floats.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'listener_orientation\ (aud.Device\ attribute)',\ u'aud.Device.listener_orientation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.listener_orientation" ids="aud.Device.listener_orientation" module="aud" names="aud.Device.listener_orientation"><desc_name xml:space="preserve">listener_orientation</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The listener’s orientation in 3D space as quaternion, a 4 float tuple.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'listener_velocity\ (aud.Device\ attribute)',\ u'aud.Device.listener_velocity',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.listener_velocity" ids="aud.Device.listener_velocity" module="aud" names="aud.Device.listener_velocity"><desc_name xml:space="preserve">listener_velocity</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The listener’s velocity in 3D space, a 3D tuple of floats.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'rate\ (aud.Device\ attribute)',\ u'aud.Device.rate',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.rate" ids="aud.Device.rate" module="aud" names="aud.Device.rate"><desc_name xml:space="preserve">rate</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The sampling rate of the device in Hz.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'speed_of_sound\ (aud.Device\ attribute)',\ u'aud.Device.speed_of_sound',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.speed_of_sound" ids="aud.Device.speed_of_sound" module="aud" names="aud.Device.speed_of_sound"><desc_name xml:space="preserve">speed_of_sound</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The speed of sound of the device.
                                The speed of sound in air is typically 343.3 m/s.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'volume\ (aud.Device\ attribute)',\ u'aud.Device.volume',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Device" first="False" fullname="Device.volume" ids="aud.Device.volume" module="aud" names="aud.Device.volume"><desc_name xml:space="preserve">volume</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The overall volume of the device.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ u'DynamicMusic\ (class\ in\ aud)',\ u'aud.DynamicMusic',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="DynamicMusic" ids="aud.DynamicMusic" module="aud" names="aud.DynamicMusic"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">DynamicMusic</desc_name></desc_signature>
                <desc_content>
                    <paragraph>The DynamicMusic object allows to play music depending on a current scene, scene changes are managed by the class, with the possibility of custom transitions.
                        The default transition is a crossfade effect, and the default scene is silent and has id 0</paragraph>
                    <paragraph>addScene(scene)</paragraph>
                    <paragraph>Adds a new scene.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">scene</literal_strong> (<reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>) – The scene sound.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The new scene id.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>int</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>addTransition(ini, end, transition)</paragraph>
                    <paragraph>Adds a new scene.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">ini</literal_strong> (<literal_emphasis>int</literal_emphasis>) – the initial scene foor the transition.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">end</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The final scene for the transition.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">transition</literal_strong> (<reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>) – The transition sound.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>false if the ini or end scenes don’t exist, true othrwise.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>pause()</paragraph>
                    <paragraph>Pauses playback of the scene.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>resume()</paragraph>
                    <paragraph>Resumes playback of the scene.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>stop()</paragraph>
                    <paragraph>Stops playback of the scene.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <index entries="['single',\ u'fadeTime\ (aud.DynamicMusic\ attribute)',\ u'aud.DynamicMusic.fadeTime',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="DynamicMusic" first="False" fullname="DynamicMusic.fadeTime" ids="aud.DynamicMusic.fadeTime" module="aud" names="aud.DynamicMusic.fadeTime"><desc_name xml:space="preserve">fadeTime</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The length in seconds of the crossfade transition</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'position\ (aud.DynamicMusic\ attribute)',\ u'aud.DynamicMusic.position',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="DynamicMusic" first="False" fullname="DynamicMusic.position" ids="aud.DynamicMusic.position" module="aud" names="aud.DynamicMusic.position"><desc_name xml:space="preserve">position</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The playback position of the scene in seconds.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'scene\ (aud.DynamicMusic\ attribute)',\ u'aud.DynamicMusic.scene',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="DynamicMusic" first="False" fullname="DynamicMusic.scene" ids="aud.DynamicMusic.scene" module="aud" names="aud.DynamicMusic.scene"><desc_name xml:space="preserve">scene</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The current scene</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'status\ (aud.DynamicMusic\ attribute)',\ u'aud.DynamicMusic.status',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="DynamicMusic" first="False" fullname="DynamicMusic.status" ids="aud.DynamicMusic.status" module="aud" names="aud.DynamicMusic.status"><desc_name xml:space="preserve">status</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the scene is playing, paused or stopped (=invalid).</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'volume\ (aud.DynamicMusic\ attribute)',\ u'aud.DynamicMusic.volume',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="DynamicMusic" first="False" fullname="DynamicMusic.volume" ids="aud.DynamicMusic.volume" module="aud" names="aud.DynamicMusic.volume"><desc_name xml:space="preserve">volume</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The volume of the scene.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ u'Handle\ (class\ in\ aud)',\ u'aud.Handle',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Handle" ids="aud.Handle" module="aud" names="aud.Handle"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">Handle</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Handle objects are playback handles that can be used to control playback of a sound. If a sound is played back multiple times then there are as many handles.</paragraph>
                    <paragraph>pause()</paragraph>
                    <paragraph>Pauses playback.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>resume()</paragraph>
                    <paragraph>Resumes playback.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>stop()</paragraph>
                    <paragraph>Stops playback.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>This makes the handle invalid.</paragraph>
                    </note>
                    <index entries="['single',\ u'attenuation\ (aud.Handle\ attribute)',\ u'aud.Handle.attenuation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.attenuation" ids="aud.Handle.attenuation" module="aud" names="aud.Handle.attenuation"><desc_name xml:space="preserve">attenuation</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>This factor is used for distance based attenuation of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'cone_angle_inner\ (aud.Handle\ attribute)',\ u'aud.Handle.cone_angle_inner',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.cone_angle_inner" ids="aud.Handle.cone_angle_inner" module="aud" names="aud.Handle.cone_angle_inner"><desc_name xml:space="preserve">cone_angle_inner</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The opening angle of the inner cone of the source. If the cone values of a source are set there are two (audible) cones with the apex at the <reference internal="True" refid="aud.Handle.location" reftitle="aud.Handle.location"><literal classes="xref py py-attr">location</literal></reference> of the source and with infinite height, heading in the direction of the source’s <reference internal="True" refid="aud.Handle.orientation" reftitle="aud.Handle.orientation"><literal classes="xref py py-attr">orientation</literal></reference>.
                                In the inner cone the volume is normal. Outside the outer cone the volume will be <reference internal="True" refid="aud.Handle.cone_volume_outer" reftitle="aud.Handle.cone_volume_outer"><literal classes="xref py py-attr">cone_volume_outer</literal></reference> and in the area between the volume will be interpolated linearly.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'cone_angle_outer\ (aud.Handle\ attribute)',\ u'aud.Handle.cone_angle_outer',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.cone_angle_outer" ids="aud.Handle.cone_angle_outer" module="aud" names="aud.Handle.cone_angle_outer"><desc_name xml:space="preserve">cone_angle_outer</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The opening angle of the outer cone of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Handle.cone_angle_inner" reftitle="aud.Handle.cone_angle_inner"><literal classes="xref py py-attr">cone_angle_inner</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'cone_volume_outer\ (aud.Handle\ attribute)',\ u'aud.Handle.cone_volume_outer',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.cone_volume_outer" ids="aud.Handle.cone_volume_outer" module="aud" names="aud.Handle.cone_volume_outer"><desc_name xml:space="preserve">cone_volume_outer</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The volume outside the outer cone of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Handle.cone_angle_inner" reftitle="aud.Handle.cone_angle_inner"><literal classes="xref py py-attr">cone_angle_inner</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'distance_maximum\ (aud.Handle\ attribute)',\ u'aud.Handle.distance_maximum',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.distance_maximum" ids="aud.Handle.distance_maximum" module="aud" names="aud.Handle.distance_maximum"><desc_name xml:space="preserve">distance_maximum</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The maximum distance of the source.
                                If the listener is further away the source volume will be 0.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'distance_reference\ (aud.Handle\ attribute)',\ u'aud.Handle.distance_reference',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.distance_reference" ids="aud.Handle.distance_reference" module="aud" names="aud.Handle.distance_reference"><desc_name xml:space="preserve">distance_reference</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The reference distance of the source.
                                At this distance the volume will be exactly <reference internal="True" refid="aud.Handle.volume" reftitle="aud.Handle.volume"><literal classes="xref py py-attr">volume</literal></reference>.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'keep\ (aud.Handle\ attribute)',\ u'aud.Handle.keep',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.keep" ids="aud.Handle.keep" module="aud" names="aud.Handle.keep"><desc_name xml:space="preserve">keep</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the sound should be kept paused in the device when its end is reached.
                                This can be used to seek the sound to some position and start playback again.</paragraph>
                            <warning>
                                <paragraph>If this is set to true and you forget stopping this equals a memory leak as the handle exists until the device is destroyed.</paragraph>
                            </warning>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'location\ (aud.Handle\ attribute)',\ u'aud.Handle.location',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.location" ids="aud.Handle.location" module="aud" names="aud.Handle.location"><desc_name xml:space="preserve">location</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The source’s location in 3D space, a 3D tuple of floats.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'loop_count\ (aud.Handle\ attribute)',\ u'aud.Handle.loop_count',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.loop_count" ids="aud.Handle.loop_count" module="aud" names="aud.Handle.loop_count"><desc_name xml:space="preserve">loop_count</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The (remaining) loop count of the sound. A negative value indicates infinity.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'orientation\ (aud.Handle\ attribute)',\ u'aud.Handle.orientation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.orientation" ids="aud.Handle.orientation" module="aud" names="aud.Handle.orientation"><desc_name xml:space="preserve">orientation</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The source’s orientation in 3D space as quaternion, a 4 float tuple.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'pitch\ (aud.Handle\ attribute)',\ u'aud.Handle.pitch',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.pitch" ids="aud.Handle.pitch" module="aud" names="aud.Handle.pitch"><desc_name xml:space="preserve">pitch</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The pitch of the sound.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'position\ (aud.Handle\ attribute)',\ u'aud.Handle.position',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.position" ids="aud.Handle.position" module="aud" names="aud.Handle.position"><desc_name xml:space="preserve">position</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The playback position of the sound in seconds.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'relative\ (aud.Handle\ attribute)',\ u'aud.Handle.relative',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.relative" ids="aud.Handle.relative" module="aud" names="aud.Handle.relative"><desc_name xml:space="preserve">relative</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the source’s location, velocity and orientation is relative or absolute to the listener.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'status\ (aud.Handle\ attribute)',\ u'aud.Handle.status',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.status" ids="aud.Handle.status" module="aud" names="aud.Handle.status"><desc_name xml:space="preserve">status</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the sound is playing, paused or stopped (=invalid).</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'velocity\ (aud.Handle\ attribute)',\ u'aud.Handle.velocity',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.velocity" ids="aud.Handle.velocity" module="aud" names="aud.Handle.velocity"><desc_name xml:space="preserve">velocity</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The source’s velocity in 3D space, a 3D tuple of floats.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'volume\ (aud.Handle\ attribute)',\ u'aud.Handle.volume',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.volume" ids="aud.Handle.volume" module="aud" names="aud.Handle.volume"><desc_name xml:space="preserve">volume</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The volume of the sound.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'volume_maximum\ (aud.Handle\ attribute)',\ u'aud.Handle.volume_maximum',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.volume_maximum" ids="aud.Handle.volume_maximum" module="aud" names="aud.Handle.volume_maximum"><desc_name xml:space="preserve">volume_maximum</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The maximum volume of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'volume_minimum\ (aud.Handle\ attribute)',\ u'aud.Handle.volume_minimum',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Handle" first="False" fullname="Handle.volume_minimum" ids="aud.Handle.volume_minimum" module="aud" names="aud.Handle.volume_minimum"><desc_name xml:space="preserve">volume_minimum</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The minimum volume of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ u'PlaybackManager\ (class\ in\ aud)',\ u'aud.PlaybackManager',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="PlaybackManager" ids="aud.PlaybackManager" module="aud" names="aud.PlaybackManager"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">PlaybackManager</desc_name></desc_signature>
                <desc_content>
                    <paragraph>A PlabackManager object allows to easily control groups os sounds organized in categories.</paragraph>
                    <paragraph>addCategory(volume)</paragraph>
                    <paragraph>Adds a category with a custom volume.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">volume</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The volume for ther new category.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The key of the new category.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>int</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>clean()</paragraph>
                    <paragraph>Cleans all the invalid and finished sound from the playback manager.</paragraph>
                    <paragraph>getVolume(catKey)</paragraph>
                    <paragraph>Retrieves the volume of a category.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">catKey</literal_strong> (<literal_emphasis>int</literal_emphasis>) – the key of the category.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The volume of the cateogry.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>float</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>pause(catKey)</paragraph>
                    <paragraph>Pauses playback of the category.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">catKey</literal_strong> (<literal_emphasis>int</literal_emphasis>) – the key of the category.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>setVolume(sound, catKey)</paragraph>
                    <paragraph>Plays a sound through the playback manager and assigns it to a category.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">sound</literal_strong> (<reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>) – The sound to play.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">catKey</literal_strong> (<literal_emphasis>int</literal_emphasis>) – the key of the category in which the sound will be added, if it doesn’t exist, a new one will be created.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The playback handle with which playback can be controlled with.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Handle" reftitle="aud.Handle"><literal classes="xref py py-class">Handle</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>resume(catKey)</paragraph>
                    <paragraph>Resumes playback of the catgory.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">catKey</literal_strong> (<literal_emphasis>int</literal_emphasis>) – the key of the category.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>setVolume(volume, catKey)</paragraph>
                    <paragraph>Changes the volume of a category.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">volume</literal_strong> (<literal_emphasis>float</literal_emphasis>) – the new volume value.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">catKey</literal_strong> (<literal_emphasis>int</literal_emphasis>) – the key of the category.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>int</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>stop(catKey)</paragraph>
                    <paragraph>Stops playback of the category.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">catKey</literal_strong> (<literal_emphasis>int</literal_emphasis>) – the key of the category.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>Whether the action succeeded.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph>bool</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                </desc_content>
            </desc>
            <index entries="['single',\ u'Sequence\ (class\ in\ aud)',\ u'aud.Sequence',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Sequence" ids="aud.Sequence" module="aud" names="aud.Sequence"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">Sequence</desc_name></desc_signature>
                <desc_content>
                    <paragraph>This sound represents sequenced entries to play a sound scene.</paragraph>
                    <paragraph>add()</paragraph>
                    <paragraph>Adds a new entry to the scene.
                        :arg sound: The sound this entry should play.
                        :type sound: <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>
                        :arg begin: The start time.
                        :type begin: float
                        :arg end: The end time or a negative value if determined by the sound.
                        :type end: float
                        :arg skip: How much seconds should be skipped at the beginning.
                        :type skip: float
                        :return: The entry added.
                        :rtype: <reference internal="True" refid="aud.SequenceEntry" reftitle="aud.SequenceEntry"><literal classes="xref py py-class">SequenceEntry</literal></reference></paragraph>
                    <paragraph>reomve()</paragraph>
                    <paragraph>Adds a new entry to the scene.
                        :arg entry: The entry to remove.
                        :type entry: <reference internal="True" refid="aud.SequenceEntry" reftitle="aud.SequenceEntry"><literal classes="xref py py-class">SequenceEntry</literal></reference></paragraph>
                    <paragraph>setAnimationData()</paragraph>
                    <paragraph>Writes animation data to a sequence.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The type of animation data.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The frame this data is for.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">data</literal_strong> (<literal_emphasis>sequence of float</literal_emphasis>) – The data to write.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">animated</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Whether the attribute is animated.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <index entries="['single',\ u'channels\ (aud.Sequence\ attribute)',\ u'aud.Sequence.channels',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sequence" first="False" fullname="Sequence.channels" ids="aud.Sequence.channels" module="aud" names="aud.Sequence.channels"><desc_name xml:space="preserve">channels</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The channel count of the sequence.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'distance_model\ (aud.Sequence\ attribute)',\ u'aud.Sequence.distance_model',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sequence" first="False" fullname="Sequence.distance_model" ids="aud.Sequence.distance_model" module="aud" names="aud.Sequence.distance_model"><desc_name xml:space="preserve">distance_model</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The distance model of the sequence.</paragraph>
                            <seealso>
                                <paragraph><reference refuri="http://connect.creativelabs.com/openal/Documentation/OpenAL%201.1%20Specification.htm#_Toc199835864">http://connect.creativelabs.com/openal/Documentation/OpenAL%201.1%20Specification.htm#_Toc199835864</reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'doppler_factor\ (aud.Sequence\ attribute)',\ u'aud.Sequence.doppler_factor',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sequence" first="False" fullname="Sequence.doppler_factor" ids="aud.Sequence.doppler_factor" module="aud" names="aud.Sequence.doppler_factor"><desc_name xml:space="preserve">doppler_factor</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The doppler factor of the sequence.
                                This factor is a scaling factor for the velocity vectors in doppler calculation. So a value bigger than 1 will exaggerate the effect as it raises the velocity.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'fps\ (aud.Sequence\ attribute)',\ u'aud.Sequence.fps',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sequence" first="False" fullname="Sequence.fps" ids="aud.Sequence.fps" module="aud" names="aud.Sequence.fps"><desc_name xml:space="preserve">fps</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The listeners’s location in 3D space, a 3D tuple of floats.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'muted\ (aud.Sequence\ attribute)',\ u'aud.Sequence.muted',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sequence" first="False" fullname="Sequence.muted" ids="aud.Sequence.muted" module="aud" names="aud.Sequence.muted"><desc_name xml:space="preserve">muted</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the whole sequence is muted.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'rate\ (aud.Sequence\ attribute)',\ u'aud.Sequence.rate',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sequence" first="False" fullname="Sequence.rate" ids="aud.Sequence.rate" module="aud" names="aud.Sequence.rate"><desc_name xml:space="preserve">rate</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The sampling rate of the sequence in Hz.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'speed_of_sound\ (aud.Sequence\ attribute)',\ u'aud.Sequence.speed_of_sound',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sequence" first="False" fullname="Sequence.speed_of_sound" ids="aud.Sequence.speed_of_sound" module="aud" names="aud.Sequence.speed_of_sound"><desc_name xml:space="preserve">speed_of_sound</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The speed of sound of the sequence.
                                The speed of sound in air is typically 343.3 m/s.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ u'SequenceEntry\ (class\ in\ aud)',\ u'aud.SequenceEntry',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="SequenceEntry" ids="aud.SequenceEntry" module="aud" names="aud.SequenceEntry"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">SequenceEntry</desc_name></desc_signature>
                <desc_content>
                    <paragraph>SequenceEntry objects represent an entry of a sequenced sound.</paragraph>
                    <paragraph>move()</paragraph>
                    <paragraph>Moves the entry.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">begin</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The new start time.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">end</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The new end time or a negative value if unknown.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">skip</literal_strong> (<literal_emphasis>float</literal_emphasis>) – How many seconds to skip at the beginning.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>setAnimationData()</paragraph>
                    <paragraph>Writes animation data to a sequenced entry.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The type of animation data.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The frame this data is for.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">data</literal_strong> (<literal_emphasis>sequence of float</literal_emphasis>) – The data to write.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">animated</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Whether the attribute is animated.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <index entries="['single',\ u'attenuation\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.attenuation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.attenuation" ids="aud.SequenceEntry.attenuation" module="aud" names="aud.SequenceEntry.attenuation"><desc_name xml:space="preserve">attenuation</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>This factor is used for distance based attenuation of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'cone_angle_inner\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.cone_angle_inner',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.cone_angle_inner" ids="aud.SequenceEntry.cone_angle_inner" module="aud" names="aud.SequenceEntry.cone_angle_inner"><desc_name xml:space="preserve">cone_angle_inner</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The opening angle of the inner cone of the source. If the cone values of a source are set there are two (audible) cones with the apex at the <literal classes="xref py py-attr">location</literal> of the source and with infinite height, heading in the direction of the source’s <literal classes="xref py py-attr">orientation</literal>.
                                In the inner cone the volume is normal. Outside the outer cone the volume will be <reference internal="True" refid="aud.SequenceEntry.cone_volume_outer" reftitle="aud.SequenceEntry.cone_volume_outer"><literal classes="xref py py-attr">cone_volume_outer</literal></reference> and in the area between the volume will be interpolated linearly.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'cone_angle_outer\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.cone_angle_outer',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.cone_angle_outer" ids="aud.SequenceEntry.cone_angle_outer" module="aud" names="aud.SequenceEntry.cone_angle_outer"><desc_name xml:space="preserve">cone_angle_outer</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The opening angle of the outer cone of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.SequenceEntry.cone_angle_inner" reftitle="aud.SequenceEntry.cone_angle_inner"><literal classes="xref py py-attr">cone_angle_inner</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'cone_volume_outer\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.cone_volume_outer',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.cone_volume_outer" ids="aud.SequenceEntry.cone_volume_outer" module="aud" names="aud.SequenceEntry.cone_volume_outer"><desc_name xml:space="preserve">cone_volume_outer</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The volume outside the outer cone of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.SequenceEntry.cone_angle_inner" reftitle="aud.SequenceEntry.cone_angle_inner"><literal classes="xref py py-attr">cone_angle_inner</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'distance_maximum\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.distance_maximum',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.distance_maximum" ids="aud.SequenceEntry.distance_maximum" module="aud" names="aud.SequenceEntry.distance_maximum"><desc_name xml:space="preserve">distance_maximum</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The maximum distance of the source.
                                If the listener is further away the source volume will be 0.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'distance_reference\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.distance_reference',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.distance_reference" ids="aud.SequenceEntry.distance_reference" module="aud" names="aud.SequenceEntry.distance_reference"><desc_name xml:space="preserve">distance_reference</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The reference distance of the source.
                                At this distance the volume will be exactly <literal classes="xref py py-attr">volume</literal>.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'muted\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.muted',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.muted" ids="aud.SequenceEntry.muted" module="aud" names="aud.SequenceEntry.muted"><desc_name xml:space="preserve">muted</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the entry is muted.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'relative\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.relative',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.relative" ids="aud.SequenceEntry.relative" module="aud" names="aud.SequenceEntry.relative"><desc_name xml:space="preserve">relative</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Whether the source’s location, velocity and orientation is relative or absolute to the listener.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'sound\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.sound',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.sound" ids="aud.SequenceEntry.sound" module="aud" names="aud.SequenceEntry.sound"><desc_name xml:space="preserve">sound</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The sound the entry is representing and will be played in the sequence.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'volume_maximum\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.volume_maximum',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.volume_maximum" ids="aud.SequenceEntry.volume_maximum" module="aud" names="aud.SequenceEntry.volume_maximum"><desc_name xml:space="preserve">volume_maximum</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The maximum volume of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'volume_minimum\ (aud.SequenceEntry\ attribute)',\ u'aud.SequenceEntry.volume_minimum',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="SequenceEntry" first="False" fullname="SequenceEntry.volume_minimum" ids="aud.SequenceEntry.volume_minimum" module="aud" names="aud.SequenceEntry.volume_minimum"><desc_name xml:space="preserve">volume_minimum</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The minimum volume of the source.</paragraph>
                            <seealso>
                                <paragraph><reference internal="True" refid="aud.Device.distance_model" reftitle="aud.Device.distance_model"><literal classes="xref py py-attr">Device.distance_model</literal></reference></paragraph>
                            </seealso>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ u'Sound\ (class\ in\ aud)',\ u'aud.Sound',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Sound" ids="aud.Sound" module="aud" names="aud.Sound"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">Sound</desc_name></desc_signature>
                <desc_content>
                    <paragraph>Sound objects are immutable and represent a sound that can be played simultaneously multiple times. They are called factories because they create reader objects internally that are used for playback.</paragraph>
                    <paragraph>buffer(data, rate)</paragraph>
                    <paragraph>Creates a sound from a data buffer.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">data</literal_strong> (<literal_emphasis>numpy.ndarray</literal_emphasis>) – The data as two dimensional numpy array.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">rate</literal_strong> (<literal_emphasis>double</literal_emphasis>) – The sample rate.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>file(filename)</paragraph>
                    <paragraph>Creates a sound object of a sound file.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">filename</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Path of the file.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <warning>
                        <paragraph>If the file doesn’t exist or can’t be read you will not get an exception immediately, but when you try to start playback of that sound.</paragraph>
                    </warning>
                    <paragraph>list()</paragraph>
                    <paragraph>Creates an empty sound list that can contain several sounds.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">random</literal_strong> (<literal_emphasis>int</literal_emphasis>) – wether the playback will be random or not.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>sawtooth(frequency, rate=48000)</paragraph>
                    <paragraph>Creates a sawtooth sound which plays a sawtooth wave.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frequency</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The frequency of the sawtooth wave in Hz.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">rate</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The sampling rate in Hz. It’s recommended to set this value to the playback device’s samling rate to avoid resamping.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>silence()</paragraph>
                    <paragraph>Creates a silence sound which plays simple silence.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>sine(frequency, rate=48000)</paragraph>
                    <paragraph>Creates a sine sound which plays a sine wave.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frequency</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The frequency of the sine wave in Hz.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">rate</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The sampling rate in Hz. It’s recommended to set this value to the playback device’s samling rate to avoid resamping.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>square(frequency, rate=48000)</paragraph>
                    <paragraph>Creates a square sound which plays a square wave.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frequency</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The frequency of the square wave in Hz.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">rate</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The sampling rate in Hz. It’s recommended to set this value to the playback device’s samling rate to avoid resamping.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>triangle(frequency, rate=48000)</paragraph>
                    <paragraph>Creates a triangle sound which plays a triangle wave.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frequency</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The frequency of the triangle wave in Hz.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">rate</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The sampling rate in Hz. It’s recommended to set this value to the playback device’s samling rate to avoid resamping.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>ADSR(attack,decay,sustain,release)</paragraph>
                    <paragraph>Attack-Decay-Sustain-Release envelopes the volume of a sound. Note: there is currently no way to trigger the release with this API.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">attack</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The attack time in seconds.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">decay</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The decay time in seconds.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">sustain</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The sustain level.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">release</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The release level.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>accumulate(additive=False)</paragraph>
                    <paragraph>Accumulates a sound by summing over positive input differences thus generating a monotonic sigal. If additivity is set to true negative input differences get added too, but positive ones with a factor of two. Note that with additivity the signal is not monotonic anymore.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">additive</literal_strong> – Whether the accumulation should be additive or not.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>addSound(sound)</paragraph>
                    <paragraph>Adds a new sound to a sound list.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">sound</literal_strong> (<reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>) – The sound that will be added to the list.</paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>You can only add a sound to a sound list.</paragraph>
                    </note>
                    <paragraph>cache()</paragraph>
                    <paragraph>Caches a sound into RAM.
                        This saves CPU usage needed for decoding and file access if the underlying sound reads from a file on the harddisk, but it consumes a lot of memory.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>Only known-length factories can be buffered.</paragraph>
                    </note>
                    <warning>
                        <paragraph>Raw PCM data needs a lot of space, only buffer short factories.</paragraph>
                    </warning>
                    <paragraph>data()</paragraph>
                    <paragraph>Retrieves the data of the sound as numpy array.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>A two dimensional numpy float array.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><literal classes="xref py py-class">numpy.ndarray</literal></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>Best efficiency with cached sounds.</paragraph>
                    </note>
                    <paragraph>delay(time)</paragraph>
                    <paragraph>Delays by playing adding silence in front of the other sound’s data.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">time</literal_strong> (<literal_emphasis>float</literal_emphasis>) – How many seconds of silence should be added before the sound.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>envelope(attack, release, threshold, arthreshold)</paragraph>
                    <paragraph>Delays by playing adding silence in front of the other sound’s data.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">attack</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The attack factor.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">release</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The release factor.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">threshold</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The general threshold value.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">arthreshold</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The attack/release threshold value.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>fadein(start, length)</paragraph>
                    <paragraph>Fades a sound in by raising the volume linearly in the given time interval.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">start</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Time in seconds when the fading should start.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">length</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Time in seconds how long the fading should last.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>Before the fade starts it plays silence.</paragraph>
                    </note>
                    <paragraph>fadeout(start, length)</paragraph>
                    <paragraph>Fades a sound in by lowering the volume linearly in the given time interval.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">start</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Time in seconds when the fading should start.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">length</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Time in seconds how long the fading should last.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>After the fade this sound plays silence, so that the length of the sound is not altered.</paragraph>
                    </note>
                    <paragraph>filter(b, a = (1))</paragraph>
                    <paragraph>Filters a sound with the supplied IIR filter coefficients.
                        Without the second parameter you’ll get a FIR filter.
                        If the first value of the a sequence is 0 it will be set to 1 automatically.
                        If the first value of the a sequence is neither 0 nor 1, all filter coefficients will be scaled by this value so that it is 1 in the end, you don’t have to scale yourself.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">b</literal_strong> (<literal_emphasis>sequence of float</literal_emphasis>) – The nominator filter coefficients.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">a</literal_strong> (<literal_emphasis>sequence of float</literal_emphasis>) – The denominator filter coefficients.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>highpass(frequency, Q=0.5)</paragraph>
                    <paragraph>Creates a second order highpass filter based on the transfer function H(s) = s^2 / (s^2 + s/Q + 1)</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frequency</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The cut off trequency of the highpass.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">Q</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Q factor of the lowpass.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>join(sound)</paragraph>
                    <paragraph>Plays two factories in sequence.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">sound</literal_strong> (<reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>) – The sound to play second.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>The two factories have to have the same specifications (channels and samplerate).</paragraph>
                    </note>
                    <paragraph>limit(start, end)</paragraph>
                    <paragraph>Limits a sound within a specific start and end time.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">start</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Start time in seconds.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">end</literal_strong> (<literal_emphasis>float</literal_emphasis>) – End time in seconds.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>loop(count)</paragraph>
                    <paragraph>Loops a sound.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">count</literal_strong> (<literal_emphasis>integer</literal_emphasis>) – How often the sound should be looped. Negative values mean endlessly.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>This is a filter function, you might consider using <reference internal="True" refid="aud.Handle.loop_count" reftitle="aud.Handle.loop_count"><literal classes="xref py py-attr">Handle.loop_count</literal></reference> instead.</paragraph>
                    </note>
                    <paragraph>lowpass(frequency, Q=0.5)</paragraph>
                    <paragraph>Creates a second order lowpass filter based on the transfer function H(s) = 1 / (s^2 + s/Q + 1)</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">frequency</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The cut off trequency of the lowpass.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">Q</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Q factor of the lowpass.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>mix(sound)</paragraph>
                    <paragraph>Mixes two factories.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">sound</literal_strong> (<reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference>) – The sound to mix over the other.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>The two factories have to have the same specifications (channels and samplerate).</paragraph>
                    </note>
                    <paragraph>mutable()</paragraph>
                    <paragraph>Creates a sound that will be restarted when sought backwards.
                        If the original sound is a sound list, the playing sound can change.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>pingpong()</paragraph>
                    <paragraph>Plays a sound forward and then backward.
                        This is like joining a sound with its reverse.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>pitch(factor)</paragraph>
                    <paragraph>Changes the pitch of a sound with a specific factor.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">factor</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The factor to change the pitch with.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>This is done by changing the sample rate of the underlying sound, which has to be an integer, so the factor value rounded and the factor may not be 100 % accurate.</paragraph>
                    </note>
                    <note>
                        <paragraph>This is a filter function, you might consider using <reference internal="True" refid="aud.Handle.pitch" reftitle="aud.Handle.pitch"><literal classes="xref py py-attr">Handle.pitch</literal></reference> instead.</paragraph>
                    </note>
                    <paragraph>rechannel(channels)</paragraph>
                    <paragraph>Rechannels the sound.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">channels</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The new channel configuration.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>resample(rate, high_quality)</paragraph>
                    <paragraph>Resamples the sound.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">rate</literal_strong> (<literal_emphasis>double</literal_emphasis>) – The new sample rate.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">high_quality</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – When true use a higher quality but slower resampler.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>reverse()</paragraph>
                    <paragraph>Plays a sound reversed.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>The sound has to have a finite length and has to be seekable. It’s recommended to use this only with factories      with fast and accurate seeking, which is not true for encoded audio files, such ones should be buffered using <literal classes="xref py py-meth">cache()</literal> before being played reversed.</paragraph>
                    </note>
                    <warning>
                        <paragraph>If seeking is not accurate in the underlying sound you’ll likely hear skips/jumps/cracks.</paragraph>
                    </warning>
                    <paragraph>sum()</paragraph>
                    <paragraph>Sums the samples of a sound.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>threshold(threshold = 0)</paragraph>
                    <paragraph>Makes a threshold wave out of an audio wave by setting all samples with a amplitude &gt;= threshold to 1, all &lt;= -threshold to -1 and all between to 0.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">threshold</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Threshold value over which an amplitude counts non-zero.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <paragraph>volume(volume)</paragraph>
                    <paragraph>Changes the volume of a sound.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <paragraph><literal_strong refspecific="True">volume</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The new volume..</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Returns</field_name>
                            <field_body>
                                <paragraph>The created <reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference> object.</paragraph>
                            </field_body>
                        </field>
                        <field>
                            <field_name>Return type</field_name>
                            <field_body>
                                <paragraph><reference internal="True" refid="aud.Sound" reftitle="aud.Sound"><literal classes="xref py py-class">Sound</literal></reference></paragraph>
                            </field_body>
                        </field>
                    </field_list>
                    <note>
                        <paragraph>Should be in the range [0, 1] to avoid clipping.</paragraph>
                    </note>
                    <note>
                        <paragraph>This is a filter function, you might consider using <reference internal="True" refid="aud.Handle.volume" reftitle="aud.Handle.volume"><literal classes="xref py py-attr">Handle.volume</literal></reference> instead.</paragraph>
                    </note>
                    <paragraph>write(filename, rate, channels, format, container, codec, bitrate, buffersize)</paragraph>
                    <paragraph>Writes the sound to a file.</paragraph>
                    <field_list>
                        <field>
                            <field_name>Parameters</field_name>
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">filename</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The path to write to.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">rate</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The sample rate to write with.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">channels</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of channels to write with.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">format</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The sample format to write with.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">container</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The container format for the file.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">codec</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The codec to use in the file.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">bitrate</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The bitrate to write with.</paragraph>
                                    </list_item>
                                    <list_item>
                                        <paragraph><literal_strong refspecific="True">buffersize</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The size of the writing buffer.</paragraph>
                                    </list_item>
                                </bullet_list>
                            </field_body>
                        </field>
                    </field_list>
                    <index entries="['single',\ u'length\ (aud.Sound\ attribute)',\ u'aud.Sound.length',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sound" first="False" fullname="Sound.length" ids="aud.Sound.length" module="aud" names="aud.Sound.length"><desc_name xml:space="preserve">length</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The sample specification of the sound as a tuple with rate and channel count.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'specs\ (aud.Sound\ attribute)',\ u'aud.Sound.specs',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Sound" first="False" fullname="Sound.specs" ids="aud.Sound.specs" module="aud" names="aud.Sound.specs"><desc_name xml:space="preserve">specs</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The sample specification of the sound as a tuple with rate and channel count.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ u'Source\ (class\ in\ aud)',\ u'aud.Source',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Source" ids="aud.Source" module="aud" names="aud.Source"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">Source</desc_name></desc_signature>
                <desc_content>
                    <paragraph>The source object represents the source position of a binaural sound.</paragraph>
                    <index entries="['single',\ u'azimuth\ (aud.Source\ attribute)',\ u'aud.Source.azimuth',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Source" first="False" fullname="Source.azimuth" ids="aud.Source.azimuth" module="aud" names="aud.Source.azimuth"><desc_name xml:space="preserve">azimuth</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The azimuth angle.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'distance\ (aud.Source\ attribute)',\ u'aud.Source.distance',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Source" first="False" fullname="Source.distance" ids="aud.Source.distance" module="aud" names="aud.Source.distance"><desc_name xml:space="preserve">distance</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The distance value. 0 is min, 1 is max.</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'elevation\ (aud.Source\ attribute)',\ u'aud.Source.elevation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Source" first="False" fullname="Source.elevation" ids="aud.Source.elevation" module="aud" names="aud.Source.elevation"><desc_name xml:space="preserve">elevation</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The elevation angle.</paragraph>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <index entries="['single',\ u'ThreadPool\ (class\ in\ aud)',\ u'aud.ThreadPool',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="ThreadPool" ids="aud.ThreadPool" module="aud" names="aud.ThreadPool"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">ThreadPool</desc_name></desc_signature>
                <desc_content>
                    <paragraph>A ThreadPool is used to parallelize convolution efficiently.</paragraph>
                </desc_content>
            </desc>
            <index entries="['single',\ u'error\ (class\ in\ aud)',\ u'aud.error',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="error" ids="aud.error" module="aud" names="aud.error"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">aud.</desc_addname><desc_name xml:space="preserve">error</desc_name></desc_signature>
                <desc_content>
                </desc_content>
            </desc>
        </section>
    </section>
</document>
