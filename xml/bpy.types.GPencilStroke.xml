<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.GPencilStroke.rst">
    <section ids="module-bpy.types gpencilstroke-bpy-struct" names="gpencilstroke(bpy_struct)">
        <title>GPencilStroke(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'GPencilStroke\ (class\ in\ bpy.types)',\ u'bpy.types.GPencilStroke',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GPencilStroke" ids="bpy.types.GPencilStroke" module="bpy.types" names="bpy.types.GPencilStroke"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">GPencilStroke</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Freehand curve defining part of a sketch</paragraph>
                <index entries="['single',\ u'display_mode\ (bpy.types.GPencilStroke\ attribute)',\ u'bpy.types.GPencilStroke.display_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.display_mode" ids="bpy.types.GPencilStroke.display_mode" module="bpy.types" names="bpy.types.GPencilStroke.display_mode"><desc_name xml:space="preserve">display_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Coordinate space that stroke is in</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>SCREEN</literal> Screen, Stroke is in screen-space.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>3DSPACE</literal> 3D Space, Stroke is in 3D-space.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>2DSPACE</literal> 2D Space, Stroke is in 2D-space.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>2DIMAGE</literal> 2D Image, Stroke is in 2D-space (but with special ‘image’ scaling).</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘SCREEN’, ‘3DSPACE’, ‘2DSPACE’, ‘2DIMAGE’], default ‘SCREEN’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_cyclic\ (bpy.types.GPencilStroke\ attribute)',\ u'bpy.types.GPencilStroke.draw_cyclic',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.draw_cyclic" ids="bpy.types.GPencilStroke.draw_cyclic" module="bpy.types" names="bpy.types.GPencilStroke.draw_cyclic"><desc_name xml:space="preserve">draw_cyclic</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable cyclic drawing, closing the stroke</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GPencilStroke.groups\ (in\ module\ bpy.types)',\ u'bpy.types.GPencilStroke.groups',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.groups" ids="bpy.types.GPencilStroke.groups" module="bpy.types" names="bpy.types.GPencilStroke.groups"><desc_name xml:space="preserve">groups</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Weights for the vertex groups this vertex is member of</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.GpencilVertexGroupElement" refuri="bpy.types.GpencilVertexGroupElement#bpy.types.GpencilVertexGroupElement"><literal classes="xref py py-class">GpencilVertexGroupElement</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GPencilStroke.is_nofill_stroke\ (in\ module\ bpy.types)',\ u'bpy.types.GPencilStroke.is_nofill_stroke',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.is_nofill_stroke" ids="bpy.types.GPencilStroke.is_nofill_stroke" module="bpy.types" names="bpy.types.GPencilStroke.is_nofill_stroke"><desc_name xml:space="preserve">is_nofill_stroke</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Special stroke to use as boundary for filling areas</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'line_width\ (bpy.types.GPencilStroke\ attribute)',\ u'bpy.types.GPencilStroke.line_width',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.line_width" ids="bpy.types.GPencilStroke.line_width" module="bpy.types" names="bpy.types.GPencilStroke.line_width"><desc_name xml:space="preserve">line_width</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Thickness of stroke (in pixels)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 1000], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'material_index\ (bpy.types.GPencilStroke\ attribute)',\ u'bpy.types.GPencilStroke.material_index',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.material_index" ids="bpy.types.GPencilStroke.material_index" module="bpy.types" names="bpy.types.GPencilStroke.material_index"><desc_name xml:space="preserve">material_index</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Index of material used in this stroke</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GPencilStroke.points\ (in\ module\ bpy.types)',\ u'bpy.types.GPencilStroke.points',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.points" ids="bpy.types.GPencilStroke.points" module="bpy.types" names="bpy.types.GPencilStroke.points"><desc_name xml:space="preserve">points</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Stroke data points</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.GPencilStrokePoints" refuri="bpy.types.GPencilStrokePoints#bpy.types.GPencilStrokePoints"><literal classes="xref py py-class">GPencilStrokePoints</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.GPencilStrokePoint" refuri="bpy.types.GPencilStrokePoint#bpy.types.GPencilStrokePoint"><literal classes="xref py py-class">GPencilStrokePoint</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select\ (bpy.types.GPencilStroke\ attribute)',\ u'bpy.types.GPencilStroke.select',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.select" ids="bpy.types.GPencilStroke.select" module="bpy.types" names="bpy.types.GPencilStroke.select"><desc_name xml:space="preserve">select</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Stroke is selected for viewport editing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GPencilStroke.triangles\ (in\ module\ bpy.types)',\ u'bpy.types.GPencilStroke.triangles',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.triangles" ids="bpy.types.GPencilStroke.triangles" module="bpy.types" names="bpy.types.GPencilStroke.triangles"><desc_name xml:space="preserve">triangles</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Triangulation data for HQ fill</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.GPencilTriangle" refuri="bpy.types.GPencilTriangle#bpy.types.GPencilTriangle"><literal classes="xref py py-class">GPencilTriangle</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.GPencilStroke\ class\ method)',\ u'bpy.types.GPencilStroke.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.bl_rna_get_subclass" ids="bpy.types.GPencilStroke.bl_rna_get_subclass" module="bpy.types" names="bpy.types.GPencilStroke.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.GPencilStroke\ class\ method)',\ u'bpy.types.GPencilStroke.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GPencilStroke" first="False" fullname="GPencilStroke.bl_rna_get_subclass_py" ids="bpy.types.GPencilStroke.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.GPencilStroke.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.editable_gpencil_strokes" refuri="bpy.context#bpy.context.editable_gpencil_strokes"><literal classes="xref py py-mod">bpy.context.editable_gpencil_strokes</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GPencilFrame.strokes" refuri="bpy.types.GPencilFrame#bpy.types.GPencilFrame.strokes"><literal classes="xref py py-class">GPencilFrame.strokes</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GPencilStrokes.new" refuri="bpy.types.GPencilStrokes#bpy.types.GPencilStrokes.new"><literal classes="xref py py-class">GPencilStrokes.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GPencilStrokes.remove" refuri="bpy.types.GPencilStrokes#bpy.types.GPencilStrokes.remove"><literal classes="xref py py-class">GPencilStrokes.remove</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
