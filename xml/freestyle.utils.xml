<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/freestyle.utils.rst">
    <section ids="module-freestyle.utils freestyle-utilities-freestyle-utils" names="freestyle\ utilities\ (freestyle.utils)">
        <title>Freestyle Utilities (freestyle.utils)</title>
        <index entries="['single',\ u'freestyle.utils\ (module)',\ u'module-freestyle.utils',\ '',\ None]"></index>
        <paragraph>This module contains helper functions used for Freestyle style module
            writing.</paragraph>
        <compound classes="toctree-wrapper">
            <compact_paragraph toctree="True"><bullet_list><list_item classes="toctree-l1"><compact_paragraph classes="toctree-l1"><reference anchorname="" internal="True" refuri="freestyle.utils.ContextFunctions">freestyle.utils submodule (freestyle.utils.ContextFunctions)</reference></compact_paragraph></list_item></bullet_list></compact_paragraph>
        </compound>
        <index entries="['single',\ u'getCurrentScene()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.getCurrentScene',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="getCurrentScene" ids="freestyle.utils.getCurrentScene" module="freestyle.utils" names="freestyle.utils.getCurrentScene"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">getCurrentScene</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the current scene.</paragraph>
                <field_list>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The current scene.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">bpy.types.Scene</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'integrate()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.integrate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="integrate" ids="freestyle.utils.integrate" module="freestyle.utils" names="freestyle.utils.integrate"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">integrate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">func</desc_parameter><desc_parameter xml:space="preserve">it</desc_parameter><desc_parameter xml:space="preserve">it_end</desc_parameter><desc_parameter xml:space="preserve">integration_type</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a single value from a set of values evaluated at each 0D
                    element of this 1D element.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">func</literal_strong> (<literal classes="xref py py-class">UnaryFunction0D</literal>) – The UnaryFunction0D used to compute a value at each
                                        Interface0D.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">it</literal_strong> (<literal classes="xref py py-class">Interface0DIterator</literal>) – The Interface0DIterator used to iterate over the 0D
                                        elements of this 1D element. The integration will occur over
                                        the 0D elements starting from the one pointed by it.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">it_end</literal_strong> (<literal classes="xref py py-class">Interface0DIterator</literal>) – The Interface0DIterator pointing the end of the 0D
                                        elements of the 1D element.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">integration_type</literal_strong> (<literal classes="xref py py-class">IntegrationType</literal>) – The integration method used to compute a
                                        single value from a set of values.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The single value obtained for the 1D element.  The return
                                value type is float if func is of the <literal classes="xref py py-class">UnaryFunction0DDouble</literal>
                                or <literal classes="xref py py-class">UnaryFunction0DFloat</literal> type, and int if func is of the
                                <literal classes="xref py py-class">UnaryFunction0DUnsigned</literal> type.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>int or float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'angle_x_normal()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.angle_x_normal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="angle_x_normal" ids="freestyle.utils.angle_x_normal" module="freestyle.utils" names="freestyle.utils.angle_x_normal"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">angle_x_normal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">it: Interface0DIterator</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>unsigned angle between a Point’s normal and the X axis, in radians</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'bound()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.bound',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="bound" ids="freestyle.utils.bound" module="freestyle.utils" names="freestyle.utils.bound"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">bound</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lower</desc_parameter><desc_parameter xml:space="preserve">x</desc_parameter><desc_parameter xml:space="preserve">higher</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <definition_list>
                    <definition_list_item>
                        <term>Returns x bounded by a maximum and minimum value. Equivalent to:</term>
                        <definition>
                            <paragraph>return min(max(x, lower), higher)</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'bounding_box()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.bounding_box',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="bounding_box" ids="freestyle.utils.bounding_box" module="freestyle.utils" names="freestyle.utils.bounding_box"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">bounding_box</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the maximum and minimum coordinates (the bounding box) of the stroke’s vertices</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'curvature_from_stroke_vertex()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.curvature_from_stroke_vertex',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="curvature_from_stroke_vertex" ids="freestyle.utils.curvature_from_stroke_vertex" module="freestyle.utils" names="freestyle.utils.curvature_from_stroke_vertex"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">curvature_from_stroke_vertex</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">svert</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <definition_list>
                    <definition_list_item>
                        <term>The 3D curvature of an stroke vertex’ underlying geometry</term>
                        <definition>
                            <paragraph>The result is None or in the range [-inf, inf]</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'find_matching_vertex()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.find_matching_vertex',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="find_matching_vertex" ids="freestyle.utils.find_matching_vertex" module="freestyle.utils" names="freestyle.utils.find_matching_vertex"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">find_matching_vertex</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">it</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Finds the matching vertex, or returns None.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'get_chain_length()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.get_chain_length',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_chain_length" ids="freestyle.utils.get_chain_length" module="freestyle.utils" names="freestyle.utils.get_chain_length"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">get_chain_length</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ve</desc_parameter><desc_parameter xml:space="preserve">orientation</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the 2d length of a given ViewEdge.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'get_object_name()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.get_object_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_object_name" ids="freestyle.utils.get_object_name" module="freestyle.utils" names="freestyle.utils.get_object_name"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">get_object_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the name of the object that this stroke is drawn on.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'get_strokes()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.get_strokes',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_strokes" ids="freestyle.utils.get_strokes" module="freestyle.utils" names="freestyle.utils.get_strokes"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">get_strokes</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Get all strokes that are currently available</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'get_test_stroke()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.get_test_stroke',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="get_test_stroke" ids="freestyle.utils.get_test_stroke" module="freestyle.utils" names="freestyle.utils.get_test_stroke"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">get_test_stroke</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a static stroke object for testing</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'is_poly_clockwise()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.is_poly_clockwise',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_poly_clockwise" ids="freestyle.utils.is_poly_clockwise" module="freestyle.utils" names="freestyle.utils.is_poly_clockwise"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">is_poly_clockwise</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>True if the stroke is orientated in a clockwise way, False otherwise</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'iter_distance_along_stroke()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.iter_distance_along_stroke',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="iter_distance_along_stroke" ids="freestyle.utils.iter_distance_along_stroke" module="freestyle.utils" names="freestyle.utils.iter_distance_along_stroke"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">iter_distance_along_stroke</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Yields the absolute distance along the stroke up to the current vertex.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'iter_distance_from_camera()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.iter_distance_from_camera',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="iter_distance_from_camera" ids="freestyle.utils.iter_distance_from_camera" module="freestyle.utils" names="freestyle.utils.iter_distance_from_camera"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">iter_distance_from_camera</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter><desc_parameter xml:space="preserve">range_min</desc_parameter><desc_parameter xml:space="preserve">range_max</desc_parameter><desc_parameter xml:space="preserve">normfac</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Yields the distance to the camera relative to the maximum
                    possible distance for every stroke vertex, constrained by
                    given minimum and maximum values.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'iter_distance_from_object()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.iter_distance_from_object',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="iter_distance_from_object" ids="freestyle.utils.iter_distance_from_object" module="freestyle.utils" names="freestyle.utils.iter_distance_from_object"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">iter_distance_from_object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter><desc_parameter xml:space="preserve">location</desc_parameter><desc_parameter xml:space="preserve">range_min</desc_parameter><desc_parameter xml:space="preserve">range_max</desc_parameter><desc_parameter xml:space="preserve">normfac</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>yields the distance to the given object relative to the maximum
                    possible distance for every stroke vertex, constrained by
                    given minimum and maximum values.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'iter_material_value()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.iter_material_value',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="iter_material_value" ids="freestyle.utils.iter_material_value" module="freestyle.utils" names="freestyle.utils.iter_material_value"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">iter_material_value</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter><desc_parameter xml:space="preserve">func</desc_parameter><desc_parameter xml:space="preserve">attribute</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Yields a specific material attribute from the vertex’ underlying material.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'iter_t2d_along_stroke()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.iter_t2d_along_stroke',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="iter_t2d_along_stroke" ids="freestyle.utils.iter_t2d_along_stroke" module="freestyle.utils" names="freestyle.utils.iter_t2d_along_stroke"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">iter_t2d_along_stroke</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Yields the progress along the stroke.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'material_from_fedge()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.material_from_fedge',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="material_from_fedge" ids="freestyle.utils.material_from_fedge" module="freestyle.utils" names="freestyle.utils.material_from_fedge"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">material_from_fedge</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">fe</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>get the diffuse rgba color from an FEdge</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'normal_at_I0D()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.normal_at_I0D',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="normal_at_I0D" ids="freestyle.utils.normal_at_I0D" module="freestyle.utils" names="freestyle.utils.normal_at_I0D"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">normal_at_I0D</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">it: Interface0DIterator</desc_parameter></desc_parameterlist><desc_returns xml:space="preserve">Vector</desc_returns></desc_signature>
            <desc_content>
                <definition_list>
                    <definition_list_item>
                        <term>Normal at an Interface0D object. In contrast to Normal2DF0D this</term>
                        <definition>
                            <paragraph>function uses the actual data instead of underlying Fedge objects.</paragraph>
                        </definition>
                    </definition_list_item>
                </definition_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'pairwise()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.pairwise',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="pairwise" ids="freestyle.utils.pairwise" module="freestyle.utils" names="freestyle.utils.pairwise"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">pairwise</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iterable</desc_parameter><desc_parameter xml:space="preserve">types={&lt;class 'StrokeVertexIterator'&gt;</desc_parameter><desc_parameter xml:space="preserve">&lt;class 'Stroke'&gt;}</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Yields a tuple containing the previous and current object</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'rgb_to_bw()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.rgb_to_bw',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="rgb_to_bw" ids="freestyle.utils.rgb_to_bw" module="freestyle.utils" names="freestyle.utils.rgb_to_bw"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">rgb_to_bw</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">r</desc_parameter><desc_parameter xml:space="preserve">g</desc_parameter><desc_parameter xml:space="preserve">b</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Method to convert rgb to a bw intensity value.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'simplify()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.simplify',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="simplify" ids="freestyle.utils.simplify" module="freestyle.utils" names="freestyle.utils.simplify"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">simplify</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">points</desc_parameter><desc_parameter xml:space="preserve">tolerance</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Simplifies a set of points</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_curvature()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.stroke_curvature',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_curvature" ids="freestyle.utils.stroke_curvature" module="freestyle.utils" names="freestyle.utils.stroke_curvature"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">stroke_curvature</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">it</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Compute the 2D curvature at the stroke vertex pointed by the iterator ‘it’.
                    K = 1 / R
                    where R is the radius of the circle going through the current vertex and its neighbors</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_normal()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.stroke_normal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_normal" ids="freestyle.utils.stroke_normal" module="freestyle.utils" names="freestyle.utils.stroke_normal"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">stroke_normal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Compute the 2D normal at the stroke vertex pointed by the iterator
                    ‘it’.  It is noted that Normal2DF0D computes normals based on
                    underlying FEdges instead, which is inappropriate for strokes when
                    they have already been modified by stroke geometry modifiers.</paragraph>
                <paragraph>The returned normals are dynamic: they update when the
                    vertex position (and therefore the vertex normal) changes.
                    for use in geometry modifiers it is advised to
                    cast this generator function to a tuple or list</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'tripplewise()\ (in\ module\ freestyle.utils)',\ u'freestyle.utils.tripplewise',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="tripplewise" ids="freestyle.utils.tripplewise" module="freestyle.utils" names="freestyle.utils.tripplewise"><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">tripplewise</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">iterable</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Yields a tuple containing the current object and its immediate neighbors</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'BoundingBox\ (class\ in\ freestyle.utils)',\ u'freestyle.utils.BoundingBox',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="BoundingBox" ids="freestyle.utils.BoundingBox" module="freestyle.utils" names="freestyle.utils.BoundingBox"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">BoundingBox</desc_name></desc_signature>
            <desc_content>
                <paragraph>Object representing a bounding box consisting out of 2 2D vectors</paragraph>
                <index entries="['single',\ u'inside()\ (freestyle.utils.BoundingBox\ method)',\ u'freestyle.utils.BoundingBox.inside',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="BoundingBox" first="False" fullname="BoundingBox.inside" ids="freestyle.utils.BoundingBox.inside" module="freestyle.utils" names="freestyle.utils.BoundingBox.inside"><desc_name xml:space="preserve">inside</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">other</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>True if self inside other, False otherwise</paragraph>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'StrokeCollector\ (class\ in\ freestyle.utils)',\ u'freestyle.utils.StrokeCollector',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="StrokeCollector" ids="freestyle.utils.StrokeCollector" module="freestyle.utils" names="freestyle.utils.StrokeCollector"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">freestyle.utils.</desc_addname><desc_name xml:space="preserve">StrokeCollector</desc_name></desc_signature>
            <desc_content>
                <paragraph>Collects and Stores stroke objects</paragraph>
                <index entries="['single',\ u'shade()\ (freestyle.utils.StrokeCollector\ method)',\ u'freestyle.utils.StrokeCollector.shade',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="StrokeCollector" first="False" fullname="StrokeCollector.shade" ids="freestyle.utils.StrokeCollector.shade" module="freestyle.utils" names="freestyle.utils.StrokeCollector.shade"><desc_name xml:space="preserve">shade</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
