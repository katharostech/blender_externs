<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.GpencilModifier.rst">
    <section ids="module-bpy.types gpencilmodifier-bpy-struct" names="gpencilmodifier(bpy_struct)">
        <title>GpencilModifier(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.ArmatureGpencilModifier" refuri="bpy.types.ArmatureGpencilModifier#bpy.types.ArmatureGpencilModifier"><literal classes="xref py py-class">ArmatureGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.ArrayGpencilModifier" refuri="bpy.types.ArrayGpencilModifier#bpy.types.ArrayGpencilModifier"><literal classes="xref py py-class">ArrayGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.BuildGpencilModifier" refuri="bpy.types.BuildGpencilModifier#bpy.types.BuildGpencilModifier"><literal classes="xref py py-class">BuildGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.ColorGpencilModifier" refuri="bpy.types.ColorGpencilModifier#bpy.types.ColorGpencilModifier"><literal classes="xref py py-class">ColorGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.HookGpencilModifier" refuri="bpy.types.HookGpencilModifier#bpy.types.HookGpencilModifier"><literal classes="xref py py-class">HookGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.LatticeGpencilModifier" refuri="bpy.types.LatticeGpencilModifier#bpy.types.LatticeGpencilModifier"><literal classes="xref py py-class">LatticeGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.MirrorGpencilModifier" refuri="bpy.types.MirrorGpencilModifier#bpy.types.MirrorGpencilModifier"><literal classes="xref py py-class">MirrorGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.NoiseGpencilModifier" refuri="bpy.types.NoiseGpencilModifier#bpy.types.NoiseGpencilModifier"><literal classes="xref py py-class">NoiseGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.OffsetGpencilModifier" refuri="bpy.types.OffsetGpencilModifier#bpy.types.OffsetGpencilModifier"><literal classes="xref py py-class">OffsetGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.OpacityGpencilModifier" refuri="bpy.types.OpacityGpencilModifier#bpy.types.OpacityGpencilModifier"><literal classes="xref py py-class">OpacityGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.SimplifyGpencilModifier" refuri="bpy.types.SimplifyGpencilModifier#bpy.types.SimplifyGpencilModifier"><literal classes="xref py py-class">SimplifyGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.SmoothGpencilModifier" refuri="bpy.types.SmoothGpencilModifier#bpy.types.SmoothGpencilModifier"><literal classes="xref py py-class">SmoothGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.SubdivGpencilModifier" refuri="bpy.types.SubdivGpencilModifier#bpy.types.SubdivGpencilModifier"><literal classes="xref py py-class">SubdivGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.ThickGpencilModifier" refuri="bpy.types.ThickGpencilModifier#bpy.types.ThickGpencilModifier"><literal classes="xref py py-class">ThickGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.TimeGpencilModifier" refuri="bpy.types.TimeGpencilModifier#bpy.types.TimeGpencilModifier"><literal classes="xref py py-class">TimeGpencilModifier</literal></reference>, <reference internal="True" reftitle="bpy.types.TintGpencilModifier" refuri="bpy.types.TintGpencilModifier#bpy.types.TintGpencilModifier"><literal classes="xref py py-class">TintGpencilModifier</literal></reference></paragraph>
        <index entries="['single',\ u'GpencilModifier\ (class\ in\ bpy.types)',\ u'bpy.types.GpencilModifier',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GpencilModifier" ids="bpy.types.GpencilModifier" module="bpy.types" names="bpy.types.GpencilModifier"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">GpencilModifier</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Modifier affecting the grease pencil object</paragraph>
                <index entries="['single',\ u'name\ (bpy.types.GpencilModifier\ attribute)',\ u'bpy.types.GpencilModifier.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.name" ids="bpy.types.GpencilModifier.name" module="bpy.types" names="bpy.types.GpencilModifier.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Modifier name</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_expanded\ (bpy.types.GpencilModifier\ attribute)',\ u'bpy.types.GpencilModifier.show_expanded',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.show_expanded" ids="bpy.types.GpencilModifier.show_expanded" module="bpy.types" names="bpy.types.GpencilModifier.show_expanded"><desc_name xml:space="preserve">show_expanded</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Set modifier expanded in the user interface</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_in_editmode\ (bpy.types.GpencilModifier\ attribute)',\ u'bpy.types.GpencilModifier.show_in_editmode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.show_in_editmode" ids="bpy.types.GpencilModifier.show_in_editmode" module="bpy.types" names="bpy.types.GpencilModifier.show_in_editmode"><desc_name xml:space="preserve">show_in_editmode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display modifier in Edit mode</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_render\ (bpy.types.GpencilModifier\ attribute)',\ u'bpy.types.GpencilModifier.show_render',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.show_render" ids="bpy.types.GpencilModifier.show_render" module="bpy.types" names="bpy.types.GpencilModifier.show_render"><desc_name xml:space="preserve">show_render</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use modifier during render</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_viewport\ (bpy.types.GpencilModifier\ attribute)',\ u'bpy.types.GpencilModifier.show_viewport',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.show_viewport" ids="bpy.types.GpencilModifier.show_viewport" module="bpy.types" names="bpy.types.GpencilModifier.show_viewport"><desc_name xml:space="preserve">show_viewport</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display modifier in viewport</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GpencilModifier.type\ (in\ module\ bpy.types)',\ u'bpy.types.GpencilModifier.type',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.type" ids="bpy.types.GpencilModifier.type" module="bpy.types" names="bpy.types.GpencilModifier.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>GP_ARRAY</literal> Array, Create array of duplicate instances.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_BUILD</literal> Build, Create duplication of strokes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_MIRROR</literal> Mirror, Duplicate strokes like a mirror.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_SIMPLIFY</literal> Simplify, Simplify stroke reducing number of points.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_SUBDIV</literal> Subdivide, Subdivide stroke adding more control points.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_ARMATURE</literal> Armature, Deform stroke points using armature object.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_HOOK</literal> Hook, Deform stroke points using objects.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_LATTICE</literal> Lattice, Deform strokes using lattice.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_NOISE</literal> Noise, Add noise to strokes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_OFFSET</literal> Offset, Change stroke location, rotation or scale.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_SMOOTH</literal> Smooth, Smooth stroke.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_THICK</literal> Thickness, Change stroke thickness.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_TIME</literal> Time Offset, Offset keyframes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_COLOR</literal> Hue/Saturation, Apply changes to stroke colors.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_OPACITY</literal> Opacity, Opacity of the strokes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GP_TINT</literal> Tint, Tint strokes with new color.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘GP_ARRAY’, ‘GP_BUILD’, ‘GP_MIRROR’, ‘GP_SIMPLIFY’, ‘GP_SUBDIV’, ‘GP_ARMATURE’, ‘GP_HOOK’, ‘GP_LATTICE’, ‘GP_NOISE’, ‘GP_OFFSET’, ‘GP_SMOOTH’, ‘GP_THICK’, ‘GP_TIME’, ‘GP_COLOR’, ‘GP_OPACITY’, ‘GP_TINT’], default ‘GP_ARRAY’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.GpencilModifier\ class\ method)',\ u'bpy.types.GpencilModifier.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.bl_rna_get_subclass" ids="bpy.types.GpencilModifier.bl_rna_get_subclass" module="bpy.types" names="bpy.types.GpencilModifier.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.GpencilModifier\ class\ method)',\ u'bpy.types.GpencilModifier.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GpencilModifier" first="False" fullname="GpencilModifier.bl_rna_get_subclass_py" ids="bpy.types.GpencilModifier.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.GpencilModifier.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.grease_pencil_modifiers" refuri="bpy.types.Object#bpy.types.Object.grease_pencil_modifiers"><literal classes="xref py py-class">Object.grease_pencil_modifiers</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectGpencilModifiers.new" refuri="bpy.types.ObjectGpencilModifiers#bpy.types.ObjectGpencilModifiers.new"><literal classes="xref py py-class">ObjectGpencilModifiers.new</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectGpencilModifiers.remove" refuri="bpy.types.ObjectGpencilModifiers#bpy.types.ObjectGpencilModifiers.remove"><literal classes="xref py py-class">ObjectGpencilModifiers.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_greasepencil_modifier" refuri="bpy.types.UILayout#bpy.types.UILayout.template_greasepencil_modifier"><literal classes="xref py py-class">UILayout.template_greasepencil_modifier</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
