<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Depsgraph.rst">
    <section ids="module-bpy.types depsgraph-bpy-struct" names="depsgraph(bpy_struct)">
        <title>Depsgraph(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'Depsgraph\ (class\ in\ bpy.types)',\ u'bpy.types.Depsgraph',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Depsgraph" ids="bpy.types.Depsgraph" module="bpy.types" names="bpy.types.Depsgraph"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Depsgraph</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ u'Depsgraph.ids\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.ids',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.ids" ids="bpy.types.Depsgraph.ids" module="bpy.types" names="bpy.types.Depsgraph.ids"><desc_name xml:space="preserve">ids</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>All evaluated datablocks</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.mode\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.mode',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.mode" ids="bpy.types.Depsgraph.mode" module="bpy.types" names="bpy.types.Depsgraph.mode"><desc_name xml:space="preserve">mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Evaluation mode</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>VIEWPORT</literal> Viewport, Viewport non-rendered mode.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>RENDER</literal> Render, Render.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘VIEWPORT’, ‘RENDER’], default ‘VIEWPORT’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.object_instances\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.object_instances',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.object_instances" ids="bpy.types.Depsgraph.object_instances" module="bpy.types" names="bpy.types.Depsgraph.object_instances"><desc_name xml:space="preserve">object_instances</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>All object instances to display or render</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.DepsgraphObjectInstance" refuri="bpy.types.DepsgraphObjectInstance#bpy.types.DepsgraphObjectInstance"><literal classes="xref py py-class">DepsgraphObjectInstance</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.objects\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.objects',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.objects" ids="bpy.types.Depsgraph.objects" module="bpy.types" names="bpy.types.Depsgraph.objects"><desc_name xml:space="preserve">objects</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Evaluated objects in the dependency graph</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.scene\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.scene',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.scene" ids="bpy.types.Depsgraph.scene" module="bpy.types" names="bpy.types.Depsgraph.scene"><desc_name xml:space="preserve">scene</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Original scene dependency graph is built for</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.scene_eval\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.scene_eval',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.scene_eval" ids="bpy.types.Depsgraph.scene_eval" module="bpy.types" names="bpy.types.Depsgraph.scene_eval"><desc_name xml:space="preserve">scene_eval</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Original scene dependency graph is built for</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.updates\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.updates',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.updates" ids="bpy.types.Depsgraph.updates" module="bpy.types" names="bpy.types.Depsgraph.updates"><desc_name xml:space="preserve">updates</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Updates to datablocks</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.DepsgraphUpdate" refuri="bpy.types.DepsgraphUpdate#bpy.types.DepsgraphUpdate"><literal classes="xref py py-class">DepsgraphUpdate</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.view_layer\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.view_layer',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.view_layer" ids="bpy.types.Depsgraph.view_layer" module="bpy.types" names="bpy.types.Depsgraph.view_layer"><desc_name xml:space="preserve">view_layer</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Original view layer dependency graph is built for</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Depsgraph.view_layer_eval\ (in\ module\ bpy.types)',\ u'bpy.types.Depsgraph.view_layer_eval',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.view_layer_eval" ids="bpy.types.Depsgraph.view_layer_eval" module="bpy.types" names="bpy.types.Depsgraph.view_layer_eval"><desc_name xml:space="preserve">view_layer_eval</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Original view layer dependency graph is built for</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'debug_relations_graphviz()\ (bpy.types.Depsgraph\ method)',\ u'bpy.types.Depsgraph.debug_relations_graphviz',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.debug_relations_graphviz" ids="bpy.types.Depsgraph.debug_relations_graphviz" module="bpy.types" names="bpy.types.Depsgraph.debug_relations_graphviz"><desc_name xml:space="preserve">debug_relations_graphviz</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filename</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>debug_relations_graphviz</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">filename</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – File Name, File in which to store graphviz debug output</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'debug_stats_gnuplot()\ (bpy.types.Depsgraph\ method)',\ u'bpy.types.Depsgraph.debug_stats_gnuplot',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.debug_stats_gnuplot" ids="bpy.types.Depsgraph.debug_stats_gnuplot" module="bpy.types" names="bpy.types.Depsgraph.debug_stats_gnuplot"><desc_name xml:space="preserve">debug_stats_gnuplot</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filename</desc_parameter><desc_parameter xml:space="preserve">output_filename</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>debug_stats_gnuplot</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">filename</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – File Name, File in which to store graphviz debug output</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">output_filename</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Output File Name, File name where gnuplot script will save the result</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'debug_tag_update()\ (bpy.types.Depsgraph\ method)',\ u'bpy.types.Depsgraph.debug_tag_update',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.debug_tag_update" ids="bpy.types.Depsgraph.debug_tag_update" module="bpy.types" names="bpy.types.Depsgraph.debug_tag_update"><desc_name xml:space="preserve">debug_tag_update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>debug_tag_update</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'debug_stats()\ (bpy.types.Depsgraph\ method)',\ u'bpy.types.Depsgraph.debug_stats',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.debug_stats" ids="bpy.types.Depsgraph.debug_stats" module="bpy.types" names="bpy.types.Depsgraph.debug_stats"><desc_name xml:space="preserve">debug_stats</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Report the number of elements in the Dependency Graph</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>result</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>string, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'id_eval_get()\ (bpy.types.Depsgraph\ method)',\ u'bpy.types.Depsgraph.id_eval_get',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.id_eval_get" ids="bpy.types.Depsgraph.id_eval_get" module="bpy.types" names="bpy.types.Depsgraph.id_eval_get"><desc_name xml:space="preserve">id_eval_get</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>id_eval_get</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>) – Original ID to get evaluated complementary part for</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Evaluated ID for the given original one</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'id_type_updated()\ (bpy.types.Depsgraph\ method)',\ u'bpy.types.Depsgraph.id_type_updated',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.id_type_updated" ids="bpy.types.Depsgraph.id_type_updated" module="bpy.types" names="bpy.types.Depsgraph.id_type_updated"><desc_name xml:space="preserve">id_type_updated</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id_type</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>id_type_updated</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id_type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'ACTION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ARMATURE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'BRUSH'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CAMERA'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CACHEFILE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CURVE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FONT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'GREASEPENCIL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'COLLECTION'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'IMAGE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'KEY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LIGHT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LIBRARY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LINESTYLE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LATTICE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'MASK'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'MATERIAL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'META'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'MESH'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'MOVIECLIP'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NODETREE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'OBJECT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'PAINTCURVE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'PALETTE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'PARTICLE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LIGHT_PROBE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SCENE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SOUND'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SPEAKER'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TEXT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TEXTURE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'WINDOWMANAGER'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'WORLD'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'WORKSPACE'</literal_emphasis><literal_emphasis>]</literal_emphasis>) – ID Type</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Updated, True if any datablock with this type was added, updated or removed</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Depsgraph\ class\ method)',\ u'bpy.types.Depsgraph.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.bl_rna_get_subclass" ids="bpy.types.Depsgraph.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Depsgraph.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Depsgraph\ class\ method)',\ u'bpy.types.Depsgraph.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Depsgraph" first="False" fullname="Depsgraph.bl_rna_get_subclass_py" ids="bpy.types.Depsgraph.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Depsgraph.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataMeshes.new_from_object" refuri="bpy.types.BlendDataMeshes#bpy.types.BlendDataMeshes.new_from_object"><literal classes="xref py py-class">BlendDataMeshes.new_from_object</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Context.depsgraph" refuri="bpy.types.Context#bpy.types.Context.depsgraph"><literal classes="xref py py-class">Context.depsgraph</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.calc_matrix_camera" refuri="bpy.types.Object#bpy.types.Object.calc_matrix_camera"><literal classes="xref py py-class">Object.calc_matrix_camera</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.camera_fit_coords" refuri="bpy.types.Object#bpy.types.Object.camera_fit_coords"><literal classes="xref py py-class">Object.camera_fit_coords</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.to_mesh" refuri="bpy.types.Object#bpy.types.Object.to_mesh"><literal classes="xref py py-class">Object.to_mesh</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.bake" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.bake"><literal classes="xref py py-class">RenderEngine.bake</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.render" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.render"><literal classes="xref py py-class">RenderEngine.render</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.update" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.update"><literal classes="xref py py-class">RenderEngine.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexPointDensity.cache_point_density" refuri="bpy.types.ShaderNodeTexPointDensity#bpy.types.ShaderNodeTexPointDensity.cache_point_density"><literal classes="xref py py-class">ShaderNodeTexPointDensity.cache_point_density</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexPointDensity.calc_point_density" refuri="bpy.types.ShaderNodeTexPointDensity#bpy.types.ShaderNodeTexPointDensity.calc_point_density"><literal classes="xref py py-class">ShaderNodeTexPointDensity.calc_point_density</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexPointDensity.calc_point_density_minmax" refuri="bpy.types.ShaderNodeTexPointDensity#bpy.types.ShaderNodeTexPointDensity.calc_point_density_minmax"><literal classes="xref py py-class">ShaderNodeTexPointDensity.calc_point_density_minmax</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ViewLayer.depsgraph" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer.depsgraph"><literal classes="xref py py-class">ViewLayer.depsgraph</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
