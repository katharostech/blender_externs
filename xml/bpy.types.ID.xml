<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ID.rst">
    <section ids="module-bpy.types id-bpy-struct" names="id(bpy_struct)">
        <title>ID(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.Action" refuri="bpy.types.Action#bpy.types.Action"><literal classes="xref py py-class">Action</literal></reference>, <reference internal="True" reftitle="bpy.types.Armature" refuri="bpy.types.Armature#bpy.types.Armature"><literal classes="xref py py-class">Armature</literal></reference>, <reference internal="True" reftitle="bpy.types.Brush" refuri="bpy.types.Brush#bpy.types.Brush"><literal classes="xref py py-class">Brush</literal></reference>, <reference internal="True" reftitle="bpy.types.CacheFile" refuri="bpy.types.CacheFile#bpy.types.CacheFile"><literal classes="xref py py-class">CacheFile</literal></reference>, <reference internal="True" reftitle="bpy.types.Camera" refuri="bpy.types.Camera#bpy.types.Camera"><literal classes="xref py py-class">Camera</literal></reference>, <reference internal="True" reftitle="bpy.types.Collection" refuri="bpy.types.Collection#bpy.types.Collection"><literal classes="xref py py-class">Collection</literal></reference>, <reference internal="True" reftitle="bpy.types.Curve" refuri="bpy.types.Curve#bpy.types.Curve"><literal classes="xref py py-class">Curve</literal></reference>, <reference internal="True" reftitle="bpy.types.FreestyleLineStyle" refuri="bpy.types.FreestyleLineStyle#bpy.types.FreestyleLineStyle"><literal classes="xref py py-class">FreestyleLineStyle</literal></reference>, <reference internal="True" reftitle="bpy.types.GreasePencil" refuri="bpy.types.GreasePencil#bpy.types.GreasePencil"><literal classes="xref py py-class">GreasePencil</literal></reference>, <reference internal="True" reftitle="bpy.types.Image" refuri="bpy.types.Image#bpy.types.Image"><literal classes="xref py py-class">Image</literal></reference>, <reference internal="True" reftitle="bpy.types.Key" refuri="bpy.types.Key#bpy.types.Key"><literal classes="xref py py-class">Key</literal></reference>, <reference internal="True" reftitle="bpy.types.Lattice" refuri="bpy.types.Lattice#bpy.types.Lattice"><literal classes="xref py py-class">Lattice</literal></reference>, <reference internal="True" reftitle="bpy.types.Library" refuri="bpy.types.Library#bpy.types.Library"><literal classes="xref py py-class">Library</literal></reference>, <reference internal="True" reftitle="bpy.types.Light" refuri="bpy.types.Light#bpy.types.Light"><literal classes="xref py py-class">Light</literal></reference>, <reference internal="True" reftitle="bpy.types.LightProbe" refuri="bpy.types.LightProbe#bpy.types.LightProbe"><literal classes="xref py py-class">LightProbe</literal></reference>, <reference internal="True" reftitle="bpy.types.Mask" refuri="bpy.types.Mask#bpy.types.Mask"><literal classes="xref py py-class">Mask</literal></reference>, <reference internal="True" reftitle="bpy.types.Material" refuri="bpy.types.Material#bpy.types.Material"><literal classes="xref py py-class">Material</literal></reference>, <reference internal="True" reftitle="bpy.types.Mesh" refuri="bpy.types.Mesh#bpy.types.Mesh"><literal classes="xref py py-class">Mesh</literal></reference>, <reference internal="True" reftitle="bpy.types.MetaBall" refuri="bpy.types.MetaBall#bpy.types.MetaBall"><literal classes="xref py py-class">MetaBall</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieClip" refuri="bpy.types.MovieClip#bpy.types.MovieClip"><literal classes="xref py py-class">MovieClip</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeTree" refuri="bpy.types.NodeTree#bpy.types.NodeTree"><literal classes="xref py py-class">NodeTree</literal></reference>, <reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, <reference internal="True" reftitle="bpy.types.PaintCurve" refuri="bpy.types.PaintCurve#bpy.types.PaintCurve"><literal classes="xref py py-class">PaintCurve</literal></reference>, <reference internal="True" reftitle="bpy.types.Palette" refuri="bpy.types.Palette#bpy.types.Palette"><literal classes="xref py py-class">Palette</literal></reference>, <reference internal="True" reftitle="bpy.types.ParticleSettings" refuri="bpy.types.ParticleSettings#bpy.types.ParticleSettings"><literal classes="xref py py-class">ParticleSettings</literal></reference>, <reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference>, <reference internal="True" reftitle="bpy.types.Screen" refuri="bpy.types.Screen#bpy.types.Screen"><literal classes="xref py py-class">Screen</literal></reference>, <reference internal="True" reftitle="bpy.types.Sound" refuri="bpy.types.Sound#bpy.types.Sound"><literal classes="xref py py-class">Sound</literal></reference>, <reference internal="True" reftitle="bpy.types.Speaker" refuri="bpy.types.Speaker#bpy.types.Speaker"><literal classes="xref py py-class">Speaker</literal></reference>, <reference internal="True" reftitle="bpy.types.Text" refuri="bpy.types.Text#bpy.types.Text"><literal classes="xref py py-class">Text</literal></reference>, <reference internal="True" reftitle="bpy.types.Texture" refuri="bpy.types.Texture#bpy.types.Texture"><literal classes="xref py py-class">Texture</literal></reference>, <reference internal="True" reftitle="bpy.types.VectorFont" refuri="bpy.types.VectorFont#bpy.types.VectorFont"><literal classes="xref py py-class">VectorFont</literal></reference>, <reference internal="True" reftitle="bpy.types.WindowManager" refuri="bpy.types.WindowManager#bpy.types.WindowManager"><literal classes="xref py py-class">WindowManager</literal></reference>, <reference internal="True" reftitle="bpy.types.WorkSpace" refuri="bpy.types.WorkSpace#bpy.types.WorkSpace"><literal classes="xref py py-class">WorkSpace</literal></reference>, <reference internal="True" reftitle="bpy.types.World" refuri="bpy.types.World#bpy.types.World"><literal classes="xref py py-class">World</literal></reference></paragraph>
        <index entries="['single',\ u'ID\ (class\ in\ bpy.types)',\ u'bpy.types.ID',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ID" ids="bpy.types.ID" module="bpy.types" names="bpy.types.ID"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ID</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Base type for data-blocks, defining a unique name, linking from other libraries and garbage collection</paragraph>
                <index entries="['single',\ u'ID.is_evaluated\ (in\ module\ bpy.types)',\ u'bpy.types.ID.is_evaluated',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.is_evaluated" ids="bpy.types.ID.is_evaluated" module="bpy.types" names="bpy.types.ID.is_evaluated"><desc_name xml:space="preserve">is_evaluated</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Whether this ID is runtime-only, evaluated data-block, or actual data from .blend file</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ID.is_library_indirect\ (in\ module\ bpy.types)',\ u'bpy.types.ID.is_library_indirect',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.is_library_indirect" ids="bpy.types.ID.is_library_indirect" module="bpy.types" names="bpy.types.ID.is_library_indirect"><desc_name xml:space="preserve">is_library_indirect</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Is this ID block linked indirectly</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ID.library\ (in\ module\ bpy.types)',\ u'bpy.types.ID.library',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.library" ids="bpy.types.ID.library" module="bpy.types" names="bpy.types.ID.library"><desc_name xml:space="preserve">library</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Library file the data-block is linked from</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Library" refuri="bpy.types.Library#bpy.types.Library"><literal classes="xref py py-class">Library</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'name\ (bpy.types.ID\ attribute)',\ u'bpy.types.ID.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ID" first="False" fullname="ID.name" ids="bpy.types.ID.name" module="bpy.types" names="bpy.types.ID.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Unique data-block ID name</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ID.name_full\ (in\ module\ bpy.types)',\ u'bpy.types.ID.name_full',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.name_full" ids="bpy.types.ID.name_full" module="bpy.types" names="bpy.types.ID.name_full"><desc_name xml:space="preserve">name_full</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Unique data-block ID name, including library one is any</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ID.original\ (in\ module\ bpy.types)',\ u'bpy.types.ID.original',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.original" ids="bpy.types.ID.original" module="bpy.types" names="bpy.types.ID.original"><desc_name xml:space="preserve">original</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Actual data-block from .blend file (Main database) that generated that evaluated one</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" refid="bpy.types.ID" reftitle="bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ID.override_static\ (in\ module\ bpy.types)',\ u'bpy.types.ID.override_static',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.override_static" ids="bpy.types.ID.override_static" module="bpy.types" names="bpy.types.ID.override_static"><desc_name xml:space="preserve">override_static</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Static override data</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.IDOverrideStatic" refuri="bpy.types.IDOverrideStatic#bpy.types.IDOverrideStatic"><literal classes="xref py py-class">IDOverrideStatic</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ID.preview\ (in\ module\ bpy.types)',\ u'bpy.types.ID.preview',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.preview" ids="bpy.types.ID.preview" module="bpy.types" names="bpy.types.ID.preview"><desc_name xml:space="preserve">preview</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Preview image and icon of this data-block (None if not supported for this type of data)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ImagePreview" refuri="bpy.types.ImagePreview#bpy.types.ImagePreview"><literal classes="xref py py-class">ImagePreview</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'tag\ (bpy.types.ID\ attribute)',\ u'bpy.types.ID.tag',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ID" first="False" fullname="ID.tag" ids="bpy.types.ID.tag" module="bpy.types" names="bpy.types.ID.tag"><desc_name xml:space="preserve">tag</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Tools can use this to tag data for their own purposes (initial state is undefined)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_fake_user\ (bpy.types.ID\ attribute)',\ u'bpy.types.ID.use_fake_user',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ID" first="False" fullname="ID.use_fake_user" ids="bpy.types.ID.use_fake_user" module="bpy.types" names="bpy.types.ID.use_fake_user"><desc_name xml:space="preserve">use_fake_user</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Save this data-block even if it has no users</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ID.users\ (in\ module\ bpy.types)',\ u'bpy.types.ID.users',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ID" first="False" fullname="ID.users" ids="bpy.types.ID.users" module="bpy.types" names="bpy.types.ID.users"><desc_name xml:space="preserve">users</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of times this data-block is referenced</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'copy()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.copy',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.copy" ids="bpy.types.ID.copy" module="bpy.types" names="bpy.types.ID.copy"><desc_name xml:space="preserve">copy</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a copy of this data-block (not supported for all data-blocks)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>New copy of the ID</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" refid="bpy.types.ID" reftitle="bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'override_create()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.override_create',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.override_create" ids="bpy.types.ID.override_create" module="bpy.types" names="bpy.types.ID.override_create"><desc_name xml:space="preserve">override_create</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create an overridden local copy of this linked data-block (not supported for all data-blocks)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>New overridden local copy of the ID</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" refid="bpy.types.ID" reftitle="bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'user_clear()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.user_clear',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.user_clear" ids="bpy.types.ID.user_clear" module="bpy.types" names="bpy.types.ID.user_clear"><desc_name xml:space="preserve">user_clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Clear the user count of a data-block so its not saved, on reload the data will be removed</paragraph>
                        <paragraph>This function is for advanced use only, misuse can crash blender since the user
                            count is used to prevent data being removed when it is used.</paragraph>
                        <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.ID.user_clear.1.py" xml:space="preserve">
# This example shows what _not_ to do, and will crash blender.
import bpy

# object which is in the scene.
obj = bpy.data.objects["Cube"]

# without this, removal would raise an error.
obj.user_clear()

# runs without an exception
# but will crash on redraw.
bpy.data.objects.remove(obj)
</literal_block>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'user_remap()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.user_remap',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.user_remap" ids="bpy.types.ID.user_remap" module="bpy.types" names="bpy.types.ID.user_remap"><desc_name xml:space="preserve">user_remap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">new_id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Replace all usage in the .blend file of this ID by new given one</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">new_id</literal_strong> (<reference internal="True" refid="bpy.types.ID" reftitle="bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>, (never None)) – New ID to use</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'make_local()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.make_local',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.make_local" ids="bpy.types.ID.make_local" module="bpy.types" names="bpy.types.ID.make_local"><desc_name xml:space="preserve">make_local</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">clear_proxy=True</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Make this datablock local, return local one (may be a copy of the original, in case it is also indirectly used)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">clear_proxy</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Whether to clear proxies (the default behavior, note that if object has to be duplicated to be made local, proxies are always cleared)</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>This ID, or the new ID if it was copied</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" refid="bpy.types.ID" reftitle="bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'user_of_id()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.user_of_id',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.user_of_id" ids="bpy.types.ID.user_of_id" module="bpy.types" names="bpy.types.ID.user_of_id"><desc_name xml:space="preserve">user_of_id</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Count the number of times that ID uses/references given one</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<reference internal="True" refid="bpy.types.ID" reftitle="bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>, (never None)) – ID to count usages</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Number of usages/references of given id by current data-block</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'animation_data_create()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.animation_data_create',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.animation_data_create" ids="bpy.types.ID.animation_data_create" module="bpy.types" names="bpy.types.ID.animation_data_create"><desc_name xml:space="preserve">animation_data_create</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create animation data to this ID, note that not all ID types support this</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>New animation data or NULL</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'animation_data_clear()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.animation_data_clear',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.animation_data_clear" ids="bpy.types.ID.animation_data_clear" module="bpy.types" names="bpy.types.ID.animation_data_clear"><desc_name xml:space="preserve">animation_data_clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Clear animation on this this ID</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update_tag()\ (bpy.types.ID\ method)',\ u'bpy.types.ID.update_tag',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ID" first="False" fullname="ID.update_tag" ids="bpy.types.ID.update_tag" module="bpy.types" names="bpy.types.ID.update_tag"><desc_name xml:space="preserve">update_tag</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">refresh={}</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Tag the ID to update its display data, e.g. when calling <reference internal="True" reftitle="bpy.types.Scene.update" refuri="bpy.types.Scene#bpy.types.Scene.update"><literal classes="xref py py-class">bpy.types.Scene.update</literal></reference></paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">refresh</literal_strong> (<literal_emphasis>enum set in {'OBJECT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DATA'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TIME'}</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Type of updates to perform</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ID\ class\ method)',\ u'bpy.types.ID.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ID" first="False" fullname="ID.bl_rna_get_subclass" ids="bpy.types.ID.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ID.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ID\ class\ method)',\ u'bpy.types.ID.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ID" first="False" fullname="ID.bl_rna_get_subclass_py" ids="bpy.types.ID.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ID.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.gpencil_data_owner" refuri="bpy.context#bpy.context.gpencil_data_owner"><literal classes="xref py py-mod">bpy.context.gpencil_data_owner</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.texture_user" refuri="bpy.context#bpy.context.texture_user"><literal classes="xref py py-mod">bpy.context.texture_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataObjects.new" refuri="bpy.types.BlendDataObjects#bpy.types.BlendDataObjects.new"><literal classes="xref py py-class">BlendDataObjects.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Depsgraph.id_eval_get" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph.id_eval_get"><literal classes="xref py py-class">Depsgraph.id_eval_get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Depsgraph.id_eval_get" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph.id_eval_get"><literal classes="xref py py-class">Depsgraph.id_eval_get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Depsgraph.ids" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph.ids"><literal classes="xref py py-class">Depsgraph.ids</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.DepsgraphUpdate.id" refuri="bpy.types.DepsgraphUpdate#bpy.types.DepsgraphUpdate.id"><literal classes="xref py py-class">DepsgraphUpdate.id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.DopeSheet.source" refuri="bpy.types.DopeSheet#bpy.types.DopeSheet.source"><literal classes="xref py py-class">DopeSheet.source</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.DriverTarget.id" refuri="bpy.types.DriverTarget#bpy.types.DriverTarget.id"><literal classes="xref py py-class">DriverTarget.id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.ID.copy" reftitle="bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.ID.make_local" reftitle="bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.ID.original" reftitle="bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.ID.override_create" reftitle="bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.ID.user_of_id" reftitle="bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.ID.user_remap" reftitle="bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.IDOverrideStatic.reference" refuri="bpy.types.IDOverrideStatic#bpy.types.IDOverrideStatic.reference"><literal classes="xref py py-class">IDOverrideStatic.reference</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Key.user" refuri="bpy.types.Key#bpy.types.Key.user"><literal classes="xref py py-class">Key.user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetPath.id" refuri="bpy.types.KeyingSetPath#bpy.types.KeyingSetPath.id"><literal classes="xref py py-class">KeyingSetPath.id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetPaths.add" refuri="bpy.types.KeyingSetPaths#bpy.types.KeyingSetPaths.add"><literal classes="xref py py-class">KeyingSetPaths.add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MaskParent.id" refuri="bpy.types.MaskParent#bpy.types.MaskParent.id"><literal classes="xref py py-class">MaskParent.id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.get_from_context" refuri="bpy.types.NodeTree#bpy.types.NodeTree.get_from_context"><literal classes="xref py py-class">NodeTree.get_from_context</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.get_from_context" refuri="bpy.types.NodeTree#bpy.types.NodeTree.get_from_context"><literal classes="xref py py-class">NodeTree.get_from_context</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.data" refuri="bpy.types.Object#bpy.types.Object.data"><literal classes="xref py py-class">Object.data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.PropertyGroupItem.id" refuri="bpy.types.PropertyGroupItem#bpy.types.PropertyGroupItem.id"><literal classes="xref py py-class">PropertyGroupItem.id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SpaceNodeEditor.id" refuri="bpy.types.SpaceNodeEditor#bpy.types.SpaceNodeEditor.id"><literal classes="xref py py-class">SpaceNodeEditor.id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SpaceNodeEditor.id_from" refuri="bpy.types.SpaceNodeEditor#bpy.types.SpaceNodeEditor.id_from"><literal classes="xref py py-class">SpaceNodeEditor.id_from</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SpaceProperties.pin_id" refuri="bpy.types.SpaceProperties#bpy.types.SpaceProperties.pin_id"><literal classes="xref py py-class">SpaceProperties.pin_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_path_builder" refuri="bpy.types.UILayout#bpy.types.UILayout.template_path_builder"><literal classes="xref py py-class">UILayout.template_path_builder</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_preview" refuri="bpy.types.UILayout#bpy.types.UILayout.template_preview"><literal classes="xref py py-class">UILayout.template_preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_preview" refuri="bpy.types.UILayout#bpy.types.UILayout.template_preview"><literal classes="xref py py-class">UILayout.template_preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
