<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.GizmoGroup.rst">
    <section ids="module-bpy.types gizmogroup-bpy-struct" names="gizmogroup(bpy_struct)">
        <title>GizmoGroup(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'GizmoGroup\ (class\ in\ bpy.types)',\ u'bpy.types.GizmoGroup',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="GizmoGroup" ids="bpy.types.GizmoGroup" module="bpy.types" names="bpy.types.GizmoGroup"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">GizmoGroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Storage of an operator being executed, or registered after execution</paragraph>
                <index entries="['single',\ u'bl_idname\ (bpy.types.GizmoGroup\ attribute)',\ u'bpy.types.GizmoGroup.bl_idname',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_idname" ids="bpy.types.GizmoGroup.bl_idname" module="bpy.types" names="bpy.types.GizmoGroup.bl_idname"><desc_name xml:space="preserve">bl_idname</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_label\ (bpy.types.GizmoGroup\ attribute)',\ u'bpy.types.GizmoGroup.bl_label',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_label" ids="bpy.types.GizmoGroup.bl_label" module="bpy.types" names="bpy.types.GizmoGroup.bl_label"><desc_name xml:space="preserve">bl_label</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_options\ (bpy.types.GizmoGroup\ attribute)',\ u'bpy.types.GizmoGroup.bl_options',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_options" ids="bpy.types.GizmoGroup.bl_options" module="bpy.types" names="bpy.types.GizmoGroup.bl_options"><desc_name xml:space="preserve">bl_options</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Options for this operator type</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>3D</literal> 3D, Use in 3D viewport.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SCALE</literal> Scale, Scale to respect zoom (otherwise zoom independent draw size).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DEPTH_3D</literal> Depth 3D, Supports culled depth by other objects in the view.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SELECT</literal> Select, Supports selection.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PERSISTENT</literal> Persistent.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SHOW_MODAL_ALL</literal> Show Modal All, Show all while interacting.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TOOL_INIT</literal> Tool Init, Postpone running until tool operator run (when used with a tool).</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum set in {‘3D’, ‘SCALE’, ‘DEPTH_3D’, ‘SELECT’, ‘PERSISTENT’, ‘SHOW_MODAL_ALL’, ‘TOOL_INIT’}, default {‘3D’}</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_owner_id\ (bpy.types.GizmoGroup\ attribute)',\ u'bpy.types.GizmoGroup.bl_owner_id',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_owner_id" ids="bpy.types.GizmoGroup.bl_owner_id" module="bpy.types" names="bpy.types.GizmoGroup.bl_owner_id"><desc_name xml:space="preserve">bl_owner_id</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_region_type\ (bpy.types.GizmoGroup\ attribute)',\ u'bpy.types.GizmoGroup.bl_region_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_region_type" ids="bpy.types.GizmoGroup.bl_region_type" module="bpy.types" names="bpy.types.GizmoGroup.bl_region_type"><desc_name xml:space="preserve">bl_region_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>The region where the panel is going to be used in</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘WINDOW’, ‘HEADER’, ‘CHANNELS’, ‘TEMPORARY’, ‘UI’, ‘TOOLS’, ‘TOOL_PROPS’, ‘PREVIEW’, ‘NAVIGATION_BAR’], default ‘WINDOW’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_space_type\ (bpy.types.GizmoGroup\ attribute)',\ u'bpy.types.GizmoGroup.bl_space_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_space_type" ids="bpy.types.GizmoGroup.bl_space_type" module="bpy.types" names="bpy.types.GizmoGroup.bl_space_type"><desc_name xml:space="preserve">bl_space_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>The space where the panel is going to be used in</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>EMPTY</literal> Empty.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VIEW_3D</literal> 3D Viewport, Manipulate objects in a 3D environment.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>IMAGE_EDITOR</literal> UV/Image Editor, View and edit images and UV Maps.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NODE_EDITOR</literal> Node Editor, Editor for node-based shading and compositing tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SEQUENCE_EDITOR</literal> Video Sequencer, Video editing tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CLIP_EDITOR</literal> Movie Clip Editor, Motion tracking tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DOPESHEET_EDITOR</literal> Dope Sheet, Adjust timing of keyframes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GRAPH_EDITOR</literal> Graph Editor, Edit drivers and keyframe interpolation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NLA_EDITOR</literal> Nonlinear Animation, Combine and layer Actions.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TEXT_EDITOR</literal> Text Editor, Edit scripts and in-file documentation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CONSOLE</literal> Python Console, Interactive programmatic console for advanced editing and script development.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INFO</literal> Info, Main menu bar and list of error messages (drag down to expand and display).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TOPBAR</literal> Top Bar, Global bar at the top of the screen for global per-window settings.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>STATUSBAR</literal> Status Bar, Global bar at the bottom of the screen for general status information.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OUTLINER</literal> Outliner, Overview of scene graph and all available data-blocks.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PROPERTIES</literal> Properties, Edit properties of active object and related data-blocks.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FILE_BROWSER</literal> File Browser, Browse for files and assets.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>USER_PREFERENCES</literal> User Preferences, Edit persistent configuration settings.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘EMPTY’, ‘VIEW_3D’, ‘IMAGE_EDITOR’, ‘NODE_EDITOR’, ‘SEQUENCE_EDITOR’, ‘CLIP_EDITOR’, ‘DOPESHEET_EDITOR’, ‘GRAPH_EDITOR’, ‘NLA_EDITOR’, ‘TEXT_EDITOR’, ‘CONSOLE’, ‘INFO’, ‘TOPBAR’, ‘STATUSBAR’, ‘OUTLINER’, ‘PROPERTIES’, ‘FILE_BROWSER’, ‘USER_PREFERENCES’], default ‘EMPTY’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GizmoGroup.gizmos\ (in\ module\ bpy.types)',\ u'bpy.types.GizmoGroup.gizmos',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.gizmos" ids="bpy.types.GizmoGroup.gizmos" module="bpy.types" names="bpy.types.GizmoGroup.gizmos"><desc_name xml:space="preserve">gizmos</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>List of gizmos in the Gizmo Map</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Gizmos" refuri="bpy.types.Gizmos#bpy.types.Gizmos"><literal classes="xref py py-class">Gizmos</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Gizmo" refuri="bpy.types.Gizmo#bpy.types.Gizmo"><literal classes="xref py py-class">Gizmo</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GizmoGroup.has_reports\ (in\ module\ bpy.types)',\ u'bpy.types.GizmoGroup.has_reports',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.has_reports" ids="bpy.types.GizmoGroup.has_reports" module="bpy.types" names="bpy.types.GizmoGroup.has_reports"><desc_name xml:space="preserve">has_reports</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>GizmoGroup has a set of reports (warnings and errors) from last execution</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'GizmoGroup.name\ (in\ module\ bpy.types)',\ u'bpy.types.GizmoGroup.name',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.name" ids="bpy.types.GizmoGroup.name" module="bpy.types" names="bpy.types.GizmoGroup.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'poll()\ (bpy.types.GizmoGroup\ class\ method)',\ u'bpy.types.GizmoGroup.poll',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.poll" ids="bpy.types.GizmoGroup.poll" module="bpy.types" names="bpy.types.GizmoGroup.poll"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">poll</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Test if the gizmo group can be called or not</paragraph>
                        <field_list>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'setup_keymap()\ (bpy.types.GizmoGroup\ class\ method)',\ u'bpy.types.GizmoGroup.setup_keymap',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.setup_keymap" ids="bpy.types.GizmoGroup.setup_keymap" module="bpy.types" names="bpy.types.GizmoGroup.setup_keymap"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">setup_keymap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">keyconfig</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Initialize keymaps for this gizmo group, use fallback keymap when not present</paragraph>
                        <field_list>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyMap" refuri="bpy.types.KeyMap#bpy.types.KeyMap"><literal classes="xref py py-class">KeyMap</literal></reference>, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'setup()\ (bpy.types.GizmoGroup\ method)',\ u'bpy.types.GizmoGroup.setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.setup" ids="bpy.types.GizmoGroup.setup" module="bpy.types" names="bpy.types.GizmoGroup.setup"><desc_name xml:space="preserve">setup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create gizmos function for the gizmo group</paragraph>
                        <field_list>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'refresh()\ (bpy.types.GizmoGroup\ method)',\ u'bpy.types.GizmoGroup.refresh',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.refresh" ids="bpy.types.GizmoGroup.refresh" module="bpy.types" names="bpy.types.GizmoGroup.refresh"><desc_name xml:space="preserve">refresh</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Refresh data (called on common state changes such as selection)</paragraph>
                        <field_list>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_prepare()\ (bpy.types.GizmoGroup\ method)',\ u'bpy.types.GizmoGroup.draw_prepare',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.draw_prepare" ids="bpy.types.GizmoGroup.draw_prepare" module="bpy.types" names="bpy.types.GizmoGroup.draw_prepare"><desc_name xml:space="preserve">draw_prepare</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Run before each redraw</paragraph>
                        <field_list>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'invoke_prepare()\ (bpy.types.GizmoGroup\ method)',\ u'bpy.types.GizmoGroup.invoke_prepare',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.invoke_prepare" ids="bpy.types.GizmoGroup.invoke_prepare" module="bpy.types" names="bpy.types.GizmoGroup.invoke_prepare"><desc_name xml:space="preserve">invoke_prepare</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">gizmo</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Run before invoke</paragraph>
                        <field_list>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.GizmoGroup\ class\ method)',\ u'bpy.types.GizmoGroup.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_rna_get_subclass" ids="bpy.types.GizmoGroup.bl_rna_get_subclass" module="bpy.types" names="bpy.types.GizmoGroup.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.GizmoGroup\ class\ method)',\ u'bpy.types.GizmoGroup.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="GizmoGroup" first="False" fullname="GizmoGroup.bl_rna_get_subclass_py" ids="bpy.types.GizmoGroup.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.GizmoGroup.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Context.gizmo_group" refuri="bpy.types.Context#bpy.types.Context.gizmo_group"><literal classes="xref py py-class">Context.gizmo_group</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.group" refuri="bpy.types.Gizmo#bpy.types.Gizmo.group"><literal classes="xref py py-class">Gizmo.group</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
