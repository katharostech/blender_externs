<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/mathutils.noise.rst">
    <section ids="module-mathutils.noise noise-utilities-mathutils-noise" names="noise\ utilities\ (mathutils.noise)">
        <title>Noise Utilities (mathutils.noise)</title>
        <index entries="['single',\ u'mathutils.noise\ (module)',\ u'module-mathutils.noise',\ '',\ None]"></index>
        <paragraph>The Blender noise module</paragraph>
        <index entries="['single',\ u'cell()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.cell',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="cell" ids="mathutils.noise.cell" module="mathutils.noise" names="mathutils.noise.cell"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">cell</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns cell noise value at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The cell noise value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'cell_vector()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.cell_vector',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="cell_vector" ids="mathutils.noise.cell_vector" module="mathutils.noise" names="mathutils.noise.cell_vector"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">cell_vector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns cell noise vector at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The cell noise vector.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'fractal()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.fractal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="fractal" ids="mathutils.noise.fractal" module="mathutils.noise" names="mathutils.noise.fractal"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">fractal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">H</desc_parameter><desc_parameter xml:space="preserve">lacunarity</desc_parameter><desc_parameter xml:space="preserve">octaves</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the fractal Brownian motion (fBm) noise value from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">H</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The fractal increment factor.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lacunarity</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The gap between successive frequencies.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of different noise frequencies used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The fractal Brownian motion noise value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'hetero_terrain()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.hetero_terrain',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="hetero_terrain" ids="mathutils.noise.hetero_terrain" module="mathutils.noise" names="mathutils.noise.hetero_terrain"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">hetero_terrain</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">H</desc_parameter><desc_parameter xml:space="preserve">lacunarity</desc_parameter><desc_parameter xml:space="preserve">octaves</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the heterogeneous terrain value from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">H</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The fractal dimension of the roughest areas.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lacunarity</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The gap between successive frequencies.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of different noise frequencies used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">offset</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The height of the terrain above ‘sea level’.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The heterogeneous terrain value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'hybrid_multi_fractal()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.hybrid_multi_fractal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="hybrid_multi_fractal" ids="mathutils.noise.hybrid_multi_fractal" module="mathutils.noise" names="mathutils.noise.hybrid_multi_fractal"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">hybrid_multi_fractal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">H</desc_parameter><desc_parameter xml:space="preserve">lacunarity</desc_parameter><desc_parameter xml:space="preserve">octaves</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">gain</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns hybrid multifractal value from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">H</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The fractal dimension of the roughest areas.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lacunarity</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The gap between successive frequencies.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of different noise frequencies used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">offset</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The height of the terrain above ‘sea level’.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">gain</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Scaling applied to the values.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The hybrid multifractal value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'multi_fractal()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.multi_fractal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="multi_fractal" ids="mathutils.noise.multi_fractal" module="mathutils.noise" names="mathutils.noise.multi_fractal"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">multi_fractal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">H</desc_parameter><desc_parameter xml:space="preserve">lacunarity</desc_parameter><desc_parameter xml:space="preserve">octaves</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns multifractal noise value from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">H</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The fractal increment factor.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lacunarity</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The gap between successive frequencies.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of different noise frequencies used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The multifractal noise value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'noise()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.noise',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="noise" ids="mathutils.noise.noise" module="mathutils.noise" names="mathutils.noise.noise"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">noise</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns noise value from the noise basis at the position specified.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The noise value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'noise_vector()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.noise_vector',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="noise_vector" ids="mathutils.noise.noise_vector" module="mathutils.noise" names="mathutils.noise.noise_vector"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">noise_vector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the noise vector from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The noise vector.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'random()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.random',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="random" ids="mathutils.noise.random" module="mathutils.noise" names="mathutils.noise.random"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">random</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a random number in the range [0, 1).</paragraph>
                <field_list>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The random number.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'random_unit_vector()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.random_unit_vector',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="random_unit_vector" ids="mathutils.noise.random_unit_vector" module="mathutils.noise" names="mathutils.noise.random_unit_vector"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">random_unit_vector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">size=3</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a unit vector with random entries.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">size</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The size of the vector to be produced, in the range [2, 4].</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The random unit vector.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'random_vector()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.random_vector',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="random_vector" ids="mathutils.noise.random_vector" module="mathutils.noise" names="mathutils.noise.random_vector"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">random_vector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">size=3</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a vector with random entries in the range (-1, 1).</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">size</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The size of the vector to be produced.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The random vector.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ridged_multi_fractal()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.ridged_multi_fractal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="ridged_multi_fractal" ids="mathutils.noise.ridged_multi_fractal" module="mathutils.noise" names="mathutils.noise.ridged_multi_fractal"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">ridged_multi_fractal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">H</desc_parameter><desc_parameter xml:space="preserve">lacunarity</desc_parameter><desc_parameter xml:space="preserve">octaves</desc_parameter><desc_parameter xml:space="preserve">offset</desc_parameter><desc_parameter xml:space="preserve">gain</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns ridged multifractal value from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">H</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The fractal dimension of the roughest areas.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lacunarity</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The gap between successive frequencies.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of different noise frequencies used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">offset</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The height of the terrain above ‘sea level’.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">gain</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Scaling applied to the values.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The ridged multifractal value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'seed_set()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.seed_set',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="seed_set" ids="mathutils.noise.seed_set" module="mathutils.noise" names="mathutils.noise.seed_set"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">seed_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">seed</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Sets the random seed used for random_unit_vector, and random.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">seed</literal_strong> (<literal_emphasis>int</literal_emphasis>) – Seed used for the random generator.
                                When seed is zero, the current time will be used instead.</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'turbulence()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.turbulence',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="turbulence" ids="mathutils.noise.turbulence" module="mathutils.noise" names="mathutils.noise.turbulence"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">turbulence</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">octaves</desc_parameter><desc_parameter xml:space="preserve">hard</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter><desc_parameter xml:space="preserve">amplitude_scale=0.5</desc_parameter><desc_parameter xml:space="preserve">frequency_scale=2.0</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the turbulence value from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of different noise frequencies used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">hard</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) – Specifies whether returned turbulence is hard (sharp transitions) or soft (smooth transitions).</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">amplitude_scale</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The amplitude scaling factor.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">frequency_scale</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The frequency scaling factor</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The turbulence value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'turbulence_vector()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.turbulence_vector',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="turbulence_vector" ids="mathutils.noise.turbulence_vector" module="mathutils.noise" names="mathutils.noise.turbulence_vector"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">turbulence_vector</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">octaves</desc_parameter><desc_parameter xml:space="preserve">hard</desc_parameter><desc_parameter xml:space="preserve">noise_basis='PERLIN_ORIGINAL'</desc_parameter><desc_parameter xml:space="preserve">amplitude_scale=0.5</desc_parameter><desc_parameter xml:space="preserve">frequency_scale=2.0</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the turbulence vector from the noise basis at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">octaves</literal_strong> (<literal_emphasis>int</literal_emphasis>) – The number of different noise frequencies used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">hard</literal_strong> (<literal_emphasis>:boolean</literal_emphasis>) – Specifies whether returned turbulence is hard (sharp transitions) or soft (smooth transitions).</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_basis</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">amplitude_scale</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The amplitude scaling factor.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">frequency_scale</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The frequency scaling factor</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The turbulence vector.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'variable_lacunarity()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.variable_lacunarity',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="variable_lacunarity" ids="mathutils.noise.variable_lacunarity" module="mathutils.noise" names="mathutils.noise.variable_lacunarity"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">variable_lacunarity</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">distortion</desc_parameter><desc_parameter xml:space="preserve">noise_type1='PERLIN_ORIGINAL'</desc_parameter><desc_parameter xml:space="preserve">noise_type2='PERLIN_ORIGINAL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns variable lacunarity noise value, a distorted variety of noise, from noise type 1 distorted by noise type 2 at the specified position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">distortion</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The amount of distortion.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_type1</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">noise_type2</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘BLENDER’, ‘PERLIN_ORIGINAL’, ‘PERLIN_NEW’, ‘VORONOI_F1’, ‘VORONOI_F2’, ‘VORONOI_F3’, ‘VORONOI_F4’, ‘VORONOI_F2F1’, ‘VORONOI_CRACKLE’, ‘CELLNOISE’].</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The variable lacunarity noise value.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'voronoi()\ (in\ module\ mathutils.noise)',\ u'mathutils.noise.voronoi',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="voronoi" ids="mathutils.noise.voronoi" module="mathutils.noise" names="mathutils.noise.voronoi"><desc_addname xml:space="preserve">mathutils.noise.</desc_addname><desc_name xml:space="preserve">voronoi</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">position</desc_parameter><desc_parameter xml:space="preserve">distance_metric='DISTANCE'</desc_parameter><desc_parameter xml:space="preserve">exponent=2.5</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a list of distances to the four closest features and their locations.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">position</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The position to evaluate the selected noise function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">distance_metric</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Enumerator in [‘DISTANCE’, ‘DISTANCE_SQUARED’, ‘MANHATTAN’, ‘CHEBYCHEV’, ‘MINKOVSKY’, ‘MINKOVSKY_HALF’, ‘MINKOVSKY_FOUR’].</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">exponent</literal_strong> (<literal_emphasis>float</literal_emphasis>) – The exponent for Minkowski distance metric.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>A list of distances to the four closest features and their locations.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list of four floats, list of four <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> types</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
