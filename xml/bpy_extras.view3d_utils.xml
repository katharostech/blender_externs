<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy_extras.view3d_utils.rst">
    <section ids="module-bpy_extras.view3d_utils bpy-extras-submodule-bpy-extras-view3d-utils" names="bpy_extras\ submodule\ (bpy_extras.view3d_utils)">
        <title>bpy_extras submodule (bpy_extras.view3d_utils)</title>
        <index entries="['single',\ u'bpy_extras.view3d_utils\ (module)',\ u'module-bpy_extras.view3d_utils',\ '',\ None]"></index>
        <index entries="['single',\ u'region_2d_to_vector_3d()\ (in\ module\ bpy_extras.view3d_utils)',\ u'bpy_extras.view3d_utils.region_2d_to_vector_3d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="region_2d_to_vector_3d" ids="bpy_extras.view3d_utils.region_2d_to_vector_3d" module="bpy_extras.view3d_utils" names="bpy_extras.view3d_utils.region_2d_to_vector_3d"><desc_addname xml:space="preserve">bpy_extras.view3d_utils.</desc_addname><desc_name xml:space="preserve">region_2d_to_vector_3d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">region</desc_parameter><desc_parameter xml:space="preserve">rv3d</desc_parameter><desc_parameter xml:space="preserve">coord</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a direction vector from the viewport at the specific 2d region
                    coordinate.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">region</literal_strong> (<reference internal="True" reftitle="bpy.types.Region" refuri="bpy.types.Region#bpy.types.Region"><literal classes="xref py py-class">bpy.types.Region</literal></reference>) – region of the 3D viewport, typically bpy.context.region.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">rv3d</literal_strong> (<reference internal="True" reftitle="bpy.types.RegionView3D" refuri="bpy.types.RegionView3D#bpy.types.RegionView3D"><literal classes="xref py py-class">bpy.types.RegionView3D</literal></reference>) – 3D region data, typically bpy.context.space_data.region_3d.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">coord</literal_strong> (<literal_emphasis>2d vector</literal_emphasis>) – 2d coordinates relative to the region:
                                        (event.mouse_region_x, event.mouse_region_y) for example.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>normalized 3d vector.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'region_2d_to_origin_3d()\ (in\ module\ bpy_extras.view3d_utils)',\ u'bpy_extras.view3d_utils.region_2d_to_origin_3d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="region_2d_to_origin_3d" ids="bpy_extras.view3d_utils.region_2d_to_origin_3d" module="bpy_extras.view3d_utils" names="bpy_extras.view3d_utils.region_2d_to_origin_3d"><desc_addname xml:space="preserve">bpy_extras.view3d_utils.</desc_addname><desc_name xml:space="preserve">region_2d_to_origin_3d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">region</desc_parameter><desc_parameter xml:space="preserve">rv3d</desc_parameter><desc_parameter xml:space="preserve">coord</desc_parameter><desc_parameter xml:space="preserve">clamp=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return the 3d view origin from the region relative 2d coords.</paragraph>
                <note>
                    <paragraph>Orthographic views have a less obvious origin,
                        the far clip is used to define the viewport near/far extents.
                        Since far clip can be a very large value,
                        the result may give with numeric precision issues.</paragraph>
                    <paragraph>To avoid this problem, you can optionally clamp the far clip to a
                        smaller value based on the data you’re operating on.</paragraph>
                </note>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">region</literal_strong> (<reference internal="True" reftitle="bpy.types.Region" refuri="bpy.types.Region#bpy.types.Region"><literal classes="xref py py-class">bpy.types.Region</literal></reference>) – region of the 3D viewport, typically bpy.context.region.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">rv3d</literal_strong> (<reference internal="True" reftitle="bpy.types.RegionView3D" refuri="bpy.types.RegionView3D#bpy.types.RegionView3D"><literal classes="xref py py-class">bpy.types.RegionView3D</literal></reference>) – 3D region data, typically bpy.context.space_data.region_3d.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">coord</literal_strong> (<literal_emphasis>2d vector</literal_emphasis>) – 2d coordinates relative to the region;
                                        (event.mouse_region_x, event.mouse_region_y) for example.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">clamp</literal_strong> (<literal_emphasis>float</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>None</literal_emphasis>) – Clamp the maximum far-clip value used.
                                        (negative value will move the offset away from the view_location)</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The origin of the viewpoint in 3d space.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'region_2d_to_location_3d()\ (in\ module\ bpy_extras.view3d_utils)',\ u'bpy_extras.view3d_utils.region_2d_to_location_3d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="region_2d_to_location_3d" ids="bpy_extras.view3d_utils.region_2d_to_location_3d" module="bpy_extras.view3d_utils" names="bpy_extras.view3d_utils.region_2d_to_location_3d"><desc_addname xml:space="preserve">bpy_extras.view3d_utils.</desc_addname><desc_name xml:space="preserve">region_2d_to_location_3d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">region</desc_parameter><desc_parameter xml:space="preserve">rv3d</desc_parameter><desc_parameter xml:space="preserve">coord</desc_parameter><desc_parameter xml:space="preserve">depth_location</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a 3d location from the region relative 2d coords, aligned with
                    <emphasis>depth_location</emphasis>.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">region</literal_strong> (<reference internal="True" reftitle="bpy.types.Region" refuri="bpy.types.Region#bpy.types.Region"><literal classes="xref py py-class">bpy.types.Region</literal></reference>) – region of the 3D viewport, typically bpy.context.region.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">rv3d</literal_strong> (<reference internal="True" reftitle="bpy.types.RegionView3D" refuri="bpy.types.RegionView3D#bpy.types.RegionView3D"><literal classes="xref py py-class">bpy.types.RegionView3D</literal></reference>) – 3D region data, typically bpy.context.space_data.region_3d.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">coord</literal_strong> (<literal_emphasis>2d vector</literal_emphasis>) – 2d coordinates relative to the region;
                                        (event.mouse_region_x, event.mouse_region_y) for example.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">depth_location</literal_strong> (<literal_emphasis>3d vector</literal_emphasis>) – the returned vectors depth is aligned with this since
                                        there is no defined depth with a 2d region input.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>normalized 3d vector.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'location_3d_to_region_2d()\ (in\ module\ bpy_extras.view3d_utils)',\ u'bpy_extras.view3d_utils.location_3d_to_region_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="location_3d_to_region_2d" ids="bpy_extras.view3d_utils.location_3d_to_region_2d" module="bpy_extras.view3d_utils" names="bpy_extras.view3d_utils.location_3d_to_region_2d"><desc_addname xml:space="preserve">bpy_extras.view3d_utils.</desc_addname><desc_name xml:space="preserve">location_3d_to_region_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">region</desc_parameter><desc_parameter xml:space="preserve">rv3d</desc_parameter><desc_parameter xml:space="preserve">coord</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return the <emphasis>region</emphasis> relative 2d location of a 3d position.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">region</literal_strong> (<reference internal="True" reftitle="bpy.types.Region" refuri="bpy.types.Region#bpy.types.Region"><literal classes="xref py py-class">bpy.types.Region</literal></reference>) – region of the 3D viewport, typically bpy.context.region.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">rv3d</literal_strong> (<reference internal="True" reftitle="bpy.types.RegionView3D" refuri="bpy.types.RegionView3D#bpy.types.RegionView3D"><literal classes="xref py py-class">bpy.types.RegionView3D</literal></reference>) – 3D region data, typically bpy.context.space_data.region_3d.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">coord</literal_strong> (<literal_emphasis>3d vector</literal_emphasis>) – 3d worldspace location.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">default</literal_strong> – Return this value if <literal>coord</literal>
                                        is behind the origin of a perspective view.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>2d location</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or <literal>default</literal> argument.</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
