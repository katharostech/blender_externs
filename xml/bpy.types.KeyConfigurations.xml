<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.KeyConfigurations.rst">
    <section ids="module-bpy.types keyconfigurations-bpy-struct" names="keyconfigurations(bpy_struct)">
        <title>KeyConfigurations(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'KeyConfigurations\ (class\ in\ bpy.types)',\ u'bpy.types.KeyConfigurations',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="KeyConfigurations" ids="bpy.types.KeyConfigurations" module="bpy.types" names="bpy.types.KeyConfigurations"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">KeyConfigurations</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Collection of KeyConfigs</paragraph>
                <index entries="['single',\ u'active\ (bpy.types.KeyConfigurations\ attribute)',\ u'bpy.types.KeyConfigurations.active',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.active" ids="bpy.types.KeyConfigurations.active" module="bpy.types" names="bpy.types.KeyConfigurations.active"><desc_name xml:space="preserve">active</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Active key configuration (preset)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyConfig" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig"><literal classes="xref py py-class">KeyConfig</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyConfigurations.addon\ (in\ module\ bpy.types)',\ u'bpy.types.KeyConfigurations.addon',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.addon" ids="bpy.types.KeyConfigurations.addon" module="bpy.types" names="bpy.types.KeyConfigurations.addon"><desc_name xml:space="preserve">addon</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Key configuration that can be extended by add-ons, and is added to the active configuration when handling events</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyConfig" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig"><literal classes="xref py py-class">KeyConfig</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyConfigurations.default\ (in\ module\ bpy.types)',\ u'bpy.types.KeyConfigurations.default',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.default" ids="bpy.types.KeyConfigurations.default" module="bpy.types" names="bpy.types.KeyConfigurations.default"><desc_name xml:space="preserve">default</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Default builtin key configuration</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyConfig" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig"><literal classes="xref py py-class">KeyConfig</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyConfigurations.user\ (in\ module\ bpy.types)',\ u'bpy.types.KeyConfigurations.user',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.user" ids="bpy.types.KeyConfigurations.user" module="bpy.types" names="bpy.types.KeyConfigurations.user"><desc_name xml:space="preserve">user</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Final key configuration that combines keymaps from the active and add-on configurations, and can be edited by the user</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyConfig" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig"><literal classes="xref py py-class">KeyConfig</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'new()\ (bpy.types.KeyConfigurations\ method)',\ u'bpy.types.KeyConfigurations.new',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.new" ids="bpy.types.KeyConfigurations.new" module="bpy.types" names="bpy.types.KeyConfigurations.new"><desc_name xml:space="preserve">new</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>new</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Name</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Key Configuration, Added key configuration</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyConfig" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig"><literal classes="xref py py-class">KeyConfig</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'remove()\ (bpy.types.KeyConfigurations\ method)',\ u'bpy.types.KeyConfigurations.remove',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.remove" ids="bpy.types.KeyConfigurations.remove" module="bpy.types" names="bpy.types.KeyConfigurations.remove"><desc_name xml:space="preserve">remove</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">keyconfig</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>remove</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">keyconfig</literal_strong> (<reference internal="True" reftitle="bpy.types.KeyConfig" refuri="bpy.types.KeyConfig#bpy.types.KeyConfig"><literal classes="xref py py-class">KeyConfig</literal></reference>, (never None)) – Key Configuration, Removed key configuration</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'find_item_from_operator()\ (bpy.types.KeyConfigurations\ method)',\ u'bpy.types.KeyConfigurations.find_item_from_operator',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.find_item_from_operator" ids="bpy.types.KeyConfigurations.find_item_from_operator" module="bpy.types" names="bpy.types.KeyConfigurations.find_item_from_operator"><desc_name xml:space="preserve">find_item_from_operator</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">idname</desc_parameter><desc_parameter xml:space="preserve">context='INVOKE_DEFAULT'</desc_parameter><desc_parameter xml:space="preserve">properties=None</desc_parameter><desc_parameter xml:space="preserve">is_hotkey=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>find_item_from_operator</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">idname</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Operator Identifier</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">context</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'INVOKE_DEFAULT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'INVOKE_REGION_WIN'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'INVOKE_REGION_CHANNELS'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'INVOKE_REGION_PREVIEW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'INVOKE_AREA'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'INVOKE_SCREEN'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EXEC_DEFAULT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EXEC_REGION_WIN'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EXEC_REGION_CHANNELS'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EXEC_REGION_PREVIEW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EXEC_AREA'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EXEC_SCREEN'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – context</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">is_hotkey</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Hotkey, Event is not a modifier</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return (keymap, item)</field_name>
                                <field_body>
                                    <paragraph><title_reference>keymap</title_reference>, <reference internal="True" reftitle="bpy.types.KeyMap" refuri="bpy.types.KeyMap#bpy.types.KeyMap"><literal classes="xref py py-class">KeyMap</literal></reference></paragraph>
                                    <paragraph><title_reference>item</title_reference>, <reference internal="True" reftitle="bpy.types.KeyMapItem" refuri="bpy.types.KeyMapItem#bpy.types.KeyMapItem"><literal classes="xref py py-class">KeyMapItem</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update()\ (bpy.types.KeyConfigurations\ method)',\ u'bpy.types.KeyConfigurations.update',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.update" ids="bpy.types.KeyConfigurations.update" module="bpy.types" names="bpy.types.KeyConfigurations.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>update</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.KeyConfigurations\ class\ method)',\ u'bpy.types.KeyConfigurations.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.bl_rna_get_subclass" ids="bpy.types.KeyConfigurations.bl_rna_get_subclass" module="bpy.types" names="bpy.types.KeyConfigurations.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.KeyConfigurations\ class\ method)',\ u'bpy.types.KeyConfigurations.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="KeyConfigurations" first="False" fullname="KeyConfigurations.bl_rna_get_subclass_py" ids="bpy.types.KeyConfigurations.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.KeyConfigurations.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.WindowManager.keyconfigs" refuri="bpy.types.WindowManager#bpy.types.WindowManager.keyconfigs"><literal classes="xref py py-class">WindowManager.keyconfigs</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
