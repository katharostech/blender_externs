<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.SequencerTonemapModifierData.rst">
    <section ids="module-bpy.types sequencertonemapmodifierdata-sequencemodifier" names="sequencertonemapmodifierdata(sequencemodifier)">
        <title>SequencerTonemapModifierData(SequenceModifier)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes â€” <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.SequenceModifier" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier"><literal classes="xref py py-class">SequenceModifier</literal></reference></paragraph>
        <index entries="['single',\ u'SequencerTonemapModifierData\ (class\ in\ bpy.types)',\ u'bpy.types.SequencerTonemapModifierData',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SequencerTonemapModifierData" ids="bpy.types.SequencerTonemapModifierData" module="bpy.types" names="bpy.types.SequencerTonemapModifierData"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">SequencerTonemapModifierData</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">SequenceModifier</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Tone mapping modifier</paragraph>
                <index entries="['single',\ u'adaptation\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.adaptation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.adaptation" ids="bpy.types.SequencerTonemapModifierData.adaptation" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.adaptation"><desc_name xml:space="preserve">adaptation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>If 0, global; if 1, based on pixel intensity</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'contrast\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.contrast',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.contrast" ids="bpy.types.SequencerTonemapModifierData.contrast" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.contrast"><desc_name xml:space="preserve">contrast</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Set to 0 to use estimate from input image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'correction\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.correction',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.correction" ids="bpy.types.SequencerTonemapModifierData.correction" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.correction"><desc_name xml:space="preserve">correction</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>If 0, same for all channels; if 1, each independent</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gamma\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.gamma',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.gamma" ids="bpy.types.SequencerTonemapModifierData.gamma" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.gamma"><desc_name xml:space="preserve">gamma</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>If not used, set to 1</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0.001, 3], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'intensity\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.intensity',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.intensity" ids="bpy.types.SequencerTonemapModifierData.intensity" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.intensity"><desc_name xml:space="preserve">intensity</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>If less than zero, darkens image; otherwise, makes it brighter</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-8, 8], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'key\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.key',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.key" ids="bpy.types.SequencerTonemapModifierData.key" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.key"><desc_name xml:space="preserve">key</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>The value the average luminance is mapped to</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'offset\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.offset',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.offset" ids="bpy.types.SequencerTonemapModifierData.offset" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.offset"><desc_name xml:space="preserve">offset</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Normally always 1, but can be used as an extra control to alter the brightness curve</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0.001, 10], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'tonemap_type\ (bpy.types.SequencerTonemapModifierData\ attribute)',\ u'bpy.types.SequencerTonemapModifierData.tonemap_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.tonemap_type" ids="bpy.types.SequencerTonemapModifierData.tonemap_type" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.tonemap_type"><desc_name xml:space="preserve">tonemap_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Tone mapping algorithm</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜RD_PHOTORECEPTORâ€™, â€˜RH_SIMPLEâ€™], default â€˜RH_SIMPLEâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.SequencerTonemapModifierData\ class\ method)',\ u'bpy.types.SequencerTonemapModifierData.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.bl_rna_get_subclass" ids="bpy.types.SequencerTonemapModifierData.bl_rna_get_subclass" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.SequencerTonemapModifierData\ class\ method)',\ u'bpy.types.SequencerTonemapModifierData.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="SequencerTonemapModifierData" first="False" fullname="SequencerTonemapModifierData.bl_rna_get_subclass_py" ids="bpy.types.SequencerTonemapModifierData.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.SequencerTonemapModifierData.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.name" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.name"><literal classes="xref py py-class">SequenceModifier.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.type" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.type"><literal classes="xref py py-class">SequenceModifier.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.mute" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.mute"><literal classes="xref py py-class">SequenceModifier.mute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.show_expanded" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.show_expanded"><literal classes="xref py py-class">SequenceModifier.show_expanded</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.input_mask_type" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.input_mask_type"><literal classes="xref py py-class">SequenceModifier.input_mask_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.mask_time" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.mask_time"><literal classes="xref py py-class">SequenceModifier.mask_time</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.input_mask_strip" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.input_mask_strip"><literal classes="xref py py-class">SequenceModifier.input_mask_strip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.input_mask_id" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.input_mask_id"><literal classes="xref py py-class">SequenceModifier.input_mask_id</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
