<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ShaderNode.rst">
    <section ids="module-bpy.types shadernode-nodeinternal" names="shadernode(nodeinternal)">
        <title>ShaderNode(NodeInternal)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.Node" refuri="bpy.types.Node#bpy.types.Node"><literal classes="xref py py-class">Node</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeInternal" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal"><literal classes="xref py py-class">NodeInternal</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.ShaderNodeAddShader" refuri="bpy.types.ShaderNodeAddShader#bpy.types.ShaderNodeAddShader"><literal classes="xref py py-class">ShaderNodeAddShader</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeAmbientOcclusion" refuri="bpy.types.ShaderNodeAmbientOcclusion#bpy.types.ShaderNodeAmbientOcclusion"><literal classes="xref py py-class">ShaderNodeAmbientOcclusion</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeAttribute" refuri="bpy.types.ShaderNodeAttribute#bpy.types.ShaderNodeAttribute"><literal classes="xref py py-class">ShaderNodeAttribute</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBackground" refuri="bpy.types.ShaderNodeBackground#bpy.types.ShaderNodeBackground"><literal classes="xref py py-class">ShaderNodeBackground</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBevel" refuri="bpy.types.ShaderNodeBevel#bpy.types.ShaderNodeBevel"><literal classes="xref py py-class">ShaderNodeBevel</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBlackbody" refuri="bpy.types.ShaderNodeBlackbody#bpy.types.ShaderNodeBlackbody"><literal classes="xref py py-class">ShaderNodeBlackbody</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBrightContrast" refuri="bpy.types.ShaderNodeBrightContrast#bpy.types.ShaderNodeBrightContrast"><literal classes="xref py py-class">ShaderNodeBrightContrast</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfAnisotropic" refuri="bpy.types.ShaderNodeBsdfAnisotropic#bpy.types.ShaderNodeBsdfAnisotropic"><literal classes="xref py py-class">ShaderNodeBsdfAnisotropic</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfDiffuse" refuri="bpy.types.ShaderNodeBsdfDiffuse#bpy.types.ShaderNodeBsdfDiffuse"><literal classes="xref py py-class">ShaderNodeBsdfDiffuse</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfGlass" refuri="bpy.types.ShaderNodeBsdfGlass#bpy.types.ShaderNodeBsdfGlass"><literal classes="xref py py-class">ShaderNodeBsdfGlass</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfGlossy" refuri="bpy.types.ShaderNodeBsdfGlossy#bpy.types.ShaderNodeBsdfGlossy"><literal classes="xref py py-class">ShaderNodeBsdfGlossy</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfHair" refuri="bpy.types.ShaderNodeBsdfHair#bpy.types.ShaderNodeBsdfHair"><literal classes="xref py py-class">ShaderNodeBsdfHair</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfHairPrincipled" refuri="bpy.types.ShaderNodeBsdfHairPrincipled#bpy.types.ShaderNodeBsdfHairPrincipled"><literal classes="xref py py-class">ShaderNodeBsdfHairPrincipled</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfPrincipled" refuri="bpy.types.ShaderNodeBsdfPrincipled#bpy.types.ShaderNodeBsdfPrincipled"><literal classes="xref py py-class">ShaderNodeBsdfPrincipled</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfRefraction" refuri="bpy.types.ShaderNodeBsdfRefraction#bpy.types.ShaderNodeBsdfRefraction"><literal classes="xref py py-class">ShaderNodeBsdfRefraction</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfToon" refuri="bpy.types.ShaderNodeBsdfToon#bpy.types.ShaderNodeBsdfToon"><literal classes="xref py py-class">ShaderNodeBsdfToon</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfTranslucent" refuri="bpy.types.ShaderNodeBsdfTranslucent#bpy.types.ShaderNodeBsdfTranslucent"><literal classes="xref py py-class">ShaderNodeBsdfTranslucent</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfTransparent" refuri="bpy.types.ShaderNodeBsdfTransparent#bpy.types.ShaderNodeBsdfTransparent"><literal classes="xref py py-class">ShaderNodeBsdfTransparent</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBsdfVelvet" refuri="bpy.types.ShaderNodeBsdfVelvet#bpy.types.ShaderNodeBsdfVelvet"><literal classes="xref py py-class">ShaderNodeBsdfVelvet</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeBump" refuri="bpy.types.ShaderNodeBump#bpy.types.ShaderNodeBump"><literal classes="xref py py-class">ShaderNodeBump</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeCameraData" refuri="bpy.types.ShaderNodeCameraData#bpy.types.ShaderNodeCameraData"><literal classes="xref py py-class">ShaderNodeCameraData</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeCombineHSV" refuri="bpy.types.ShaderNodeCombineHSV#bpy.types.ShaderNodeCombineHSV"><literal classes="xref py py-class">ShaderNodeCombineHSV</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeCombineRGB" refuri="bpy.types.ShaderNodeCombineRGB#bpy.types.ShaderNodeCombineRGB"><literal classes="xref py py-class">ShaderNodeCombineRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeCombineXYZ" refuri="bpy.types.ShaderNodeCombineXYZ#bpy.types.ShaderNodeCombineXYZ"><literal classes="xref py py-class">ShaderNodeCombineXYZ</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeDisplacement" refuri="bpy.types.ShaderNodeDisplacement#bpy.types.ShaderNodeDisplacement"><literal classes="xref py py-class">ShaderNodeDisplacement</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeEeveeSpecular" refuri="bpy.types.ShaderNodeEeveeSpecular#bpy.types.ShaderNodeEeveeSpecular"><literal classes="xref py py-class">ShaderNodeEeveeSpecular</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeEmission" refuri="bpy.types.ShaderNodeEmission#bpy.types.ShaderNodeEmission"><literal classes="xref py py-class">ShaderNodeEmission</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeFresnel" refuri="bpy.types.ShaderNodeFresnel#bpy.types.ShaderNodeFresnel"><literal classes="xref py py-class">ShaderNodeFresnel</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeGamma" refuri="bpy.types.ShaderNodeGamma#bpy.types.ShaderNodeGamma"><literal classes="xref py py-class">ShaderNodeGamma</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeGroup" refuri="bpy.types.ShaderNodeGroup#bpy.types.ShaderNodeGroup"><literal classes="xref py py-class">ShaderNodeGroup</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeHairInfo" refuri="bpy.types.ShaderNodeHairInfo#bpy.types.ShaderNodeHairInfo"><literal classes="xref py py-class">ShaderNodeHairInfo</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeHoldout" refuri="bpy.types.ShaderNodeHoldout#bpy.types.ShaderNodeHoldout"><literal classes="xref py py-class">ShaderNodeHoldout</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeHueSaturation" refuri="bpy.types.ShaderNodeHueSaturation#bpy.types.ShaderNodeHueSaturation"><literal classes="xref py py-class">ShaderNodeHueSaturation</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeInvert" refuri="bpy.types.ShaderNodeInvert#bpy.types.ShaderNodeInvert"><literal classes="xref py py-class">ShaderNodeInvert</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeLayerWeight" refuri="bpy.types.ShaderNodeLayerWeight#bpy.types.ShaderNodeLayerWeight"><literal classes="xref py py-class">ShaderNodeLayerWeight</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeLightFalloff" refuri="bpy.types.ShaderNodeLightFalloff#bpy.types.ShaderNodeLightFalloff"><literal classes="xref py py-class">ShaderNodeLightFalloff</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeLightPath" refuri="bpy.types.ShaderNodeLightPath#bpy.types.ShaderNodeLightPath"><literal classes="xref py py-class">ShaderNodeLightPath</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeMapping" refuri="bpy.types.ShaderNodeMapping#bpy.types.ShaderNodeMapping"><literal classes="xref py py-class">ShaderNodeMapping</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeMath" refuri="bpy.types.ShaderNodeMath#bpy.types.ShaderNodeMath"><literal classes="xref py py-class">ShaderNodeMath</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeMixRGB" refuri="bpy.types.ShaderNodeMixRGB#bpy.types.ShaderNodeMixRGB"><literal classes="xref py py-class">ShaderNodeMixRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeMixShader" refuri="bpy.types.ShaderNodeMixShader#bpy.types.ShaderNodeMixShader"><literal classes="xref py py-class">ShaderNodeMixShader</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeNewGeometry" refuri="bpy.types.ShaderNodeNewGeometry#bpy.types.ShaderNodeNewGeometry"><literal classes="xref py py-class">ShaderNodeNewGeometry</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeNormal" refuri="bpy.types.ShaderNodeNormal#bpy.types.ShaderNodeNormal"><literal classes="xref py py-class">ShaderNodeNormal</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeNormalMap" refuri="bpy.types.ShaderNodeNormalMap#bpy.types.ShaderNodeNormalMap"><literal classes="xref py py-class">ShaderNodeNormalMap</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeObjectInfo" refuri="bpy.types.ShaderNodeObjectInfo#bpy.types.ShaderNodeObjectInfo"><literal classes="xref py py-class">ShaderNodeObjectInfo</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeOutputLight" refuri="bpy.types.ShaderNodeOutputLight#bpy.types.ShaderNodeOutputLight"><literal classes="xref py py-class">ShaderNodeOutputLight</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeOutputLineStyle" refuri="bpy.types.ShaderNodeOutputLineStyle#bpy.types.ShaderNodeOutputLineStyle"><literal classes="xref py py-class">ShaderNodeOutputLineStyle</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeOutputMaterial" refuri="bpy.types.ShaderNodeOutputMaterial#bpy.types.ShaderNodeOutputMaterial"><literal classes="xref py py-class">ShaderNodeOutputMaterial</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeOutputWorld" refuri="bpy.types.ShaderNodeOutputWorld#bpy.types.ShaderNodeOutputWorld"><literal classes="xref py py-class">ShaderNodeOutputWorld</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeParticleInfo" refuri="bpy.types.ShaderNodeParticleInfo#bpy.types.ShaderNodeParticleInfo"><literal classes="xref py py-class">ShaderNodeParticleInfo</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeRGB" refuri="bpy.types.ShaderNodeRGB#bpy.types.ShaderNodeRGB"><literal classes="xref py py-class">ShaderNodeRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeRGBCurve" refuri="bpy.types.ShaderNodeRGBCurve#bpy.types.ShaderNodeRGBCurve"><literal classes="xref py py-class">ShaderNodeRGBCurve</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeRGBToBW" refuri="bpy.types.ShaderNodeRGBToBW#bpy.types.ShaderNodeRGBToBW"><literal classes="xref py py-class">ShaderNodeRGBToBW</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeScript" refuri="bpy.types.ShaderNodeScript#bpy.types.ShaderNodeScript"><literal classes="xref py py-class">ShaderNodeScript</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeSeparateHSV" refuri="bpy.types.ShaderNodeSeparateHSV#bpy.types.ShaderNodeSeparateHSV"><literal classes="xref py py-class">ShaderNodeSeparateHSV</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeSeparateRGB" refuri="bpy.types.ShaderNodeSeparateRGB#bpy.types.ShaderNodeSeparateRGB"><literal classes="xref py py-class">ShaderNodeSeparateRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeSeparateXYZ" refuri="bpy.types.ShaderNodeSeparateXYZ#bpy.types.ShaderNodeSeparateXYZ"><literal classes="xref py py-class">ShaderNodeSeparateXYZ</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeShaderToRGB" refuri="bpy.types.ShaderNodeShaderToRGB#bpy.types.ShaderNodeShaderToRGB"><literal classes="xref py py-class">ShaderNodeShaderToRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeSqueeze" refuri="bpy.types.ShaderNodeSqueeze#bpy.types.ShaderNodeSqueeze"><literal classes="xref py py-class">ShaderNodeSqueeze</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeSubsurfaceScattering" refuri="bpy.types.ShaderNodeSubsurfaceScattering#bpy.types.ShaderNodeSubsurfaceScattering"><literal classes="xref py py-class">ShaderNodeSubsurfaceScattering</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTangent" refuri="bpy.types.ShaderNodeTangent#bpy.types.ShaderNodeTangent"><literal classes="xref py py-class">ShaderNodeTangent</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexBrick" refuri="bpy.types.ShaderNodeTexBrick#bpy.types.ShaderNodeTexBrick"><literal classes="xref py py-class">ShaderNodeTexBrick</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexChecker" refuri="bpy.types.ShaderNodeTexChecker#bpy.types.ShaderNodeTexChecker"><literal classes="xref py py-class">ShaderNodeTexChecker</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexCoord" refuri="bpy.types.ShaderNodeTexCoord#bpy.types.ShaderNodeTexCoord"><literal classes="xref py py-class">ShaderNodeTexCoord</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexEnvironment" refuri="bpy.types.ShaderNodeTexEnvironment#bpy.types.ShaderNodeTexEnvironment"><literal classes="xref py py-class">ShaderNodeTexEnvironment</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexGradient" refuri="bpy.types.ShaderNodeTexGradient#bpy.types.ShaderNodeTexGradient"><literal classes="xref py py-class">ShaderNodeTexGradient</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexIES" refuri="bpy.types.ShaderNodeTexIES#bpy.types.ShaderNodeTexIES"><literal classes="xref py py-class">ShaderNodeTexIES</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexImage" refuri="bpy.types.ShaderNodeTexImage#bpy.types.ShaderNodeTexImage"><literal classes="xref py py-class">ShaderNodeTexImage</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexMagic" refuri="bpy.types.ShaderNodeTexMagic#bpy.types.ShaderNodeTexMagic"><literal classes="xref py py-class">ShaderNodeTexMagic</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexMusgrave" refuri="bpy.types.ShaderNodeTexMusgrave#bpy.types.ShaderNodeTexMusgrave"><literal classes="xref py py-class">ShaderNodeTexMusgrave</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexNoise" refuri="bpy.types.ShaderNodeTexNoise#bpy.types.ShaderNodeTexNoise"><literal classes="xref py py-class">ShaderNodeTexNoise</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexPointDensity" refuri="bpy.types.ShaderNodeTexPointDensity#bpy.types.ShaderNodeTexPointDensity"><literal classes="xref py py-class">ShaderNodeTexPointDensity</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexSky" refuri="bpy.types.ShaderNodeTexSky#bpy.types.ShaderNodeTexSky"><literal classes="xref py py-class">ShaderNodeTexSky</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexVoronoi" refuri="bpy.types.ShaderNodeTexVoronoi#bpy.types.ShaderNodeTexVoronoi"><literal classes="xref py py-class">ShaderNodeTexVoronoi</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTexWave" refuri="bpy.types.ShaderNodeTexWave#bpy.types.ShaderNodeTexWave"><literal classes="xref py py-class">ShaderNodeTexWave</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeUVAlongStroke" refuri="bpy.types.ShaderNodeUVAlongStroke#bpy.types.ShaderNodeUVAlongStroke"><literal classes="xref py py-class">ShaderNodeUVAlongStroke</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeUVMap" refuri="bpy.types.ShaderNodeUVMap#bpy.types.ShaderNodeUVMap"><literal classes="xref py py-class">ShaderNodeUVMap</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeValToRGB" refuri="bpy.types.ShaderNodeValToRGB#bpy.types.ShaderNodeValToRGB"><literal classes="xref py py-class">ShaderNodeValToRGB</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeValue" refuri="bpy.types.ShaderNodeValue#bpy.types.ShaderNodeValue"><literal classes="xref py py-class">ShaderNodeValue</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeVectorCurve" refuri="bpy.types.ShaderNodeVectorCurve#bpy.types.ShaderNodeVectorCurve"><literal classes="xref py py-class">ShaderNodeVectorCurve</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeVectorDisplacement" refuri="bpy.types.ShaderNodeVectorDisplacement#bpy.types.ShaderNodeVectorDisplacement"><literal classes="xref py py-class">ShaderNodeVectorDisplacement</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeVectorMath" refuri="bpy.types.ShaderNodeVectorMath#bpy.types.ShaderNodeVectorMath"><literal classes="xref py py-class">ShaderNodeVectorMath</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeVectorTransform" refuri="bpy.types.ShaderNodeVectorTransform#bpy.types.ShaderNodeVectorTransform"><literal classes="xref py py-class">ShaderNodeVectorTransform</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeVolumeAbsorption" refuri="bpy.types.ShaderNodeVolumeAbsorption#bpy.types.ShaderNodeVolumeAbsorption"><literal classes="xref py py-class">ShaderNodeVolumeAbsorption</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeVolumePrincipled" refuri="bpy.types.ShaderNodeVolumePrincipled#bpy.types.ShaderNodeVolumePrincipled"><literal classes="xref py py-class">ShaderNodeVolumePrincipled</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeVolumeScatter" refuri="bpy.types.ShaderNodeVolumeScatter#bpy.types.ShaderNodeVolumeScatter"><literal classes="xref py py-class">ShaderNodeVolumeScatter</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeWavelength" refuri="bpy.types.ShaderNodeWavelength#bpy.types.ShaderNodeWavelength"><literal classes="xref py py-class">ShaderNodeWavelength</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeWireframe" refuri="bpy.types.ShaderNodeWireframe#bpy.types.ShaderNodeWireframe"><literal classes="xref py py-class">ShaderNodeWireframe</literal></reference></paragraph>
        <index entries="['single',\ u'ShaderNode\ (class\ in\ bpy.types)',\ u'bpy.types.ShaderNode',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ShaderNode" ids="bpy.types.ShaderNode" module="bpy.types" names="bpy.types.ShaderNode"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ShaderNode</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">NodeInternal</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Material shader node</paragraph>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ShaderNode\ class\ method)',\ u'bpy.types.ShaderNode.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNode" first="False" fullname="ShaderNode.bl_rna_get_subclass" ids="bpy.types.ShaderNode.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ShaderNode.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ShaderNode\ class\ method)',\ u'bpy.types.ShaderNode.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNode" first="False" fullname="ShaderNode.bl_rna_get_subclass_py" ids="bpy.types.ShaderNode.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ShaderNode.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.type" refuri="bpy.types.Node#bpy.types.Node.type"><literal classes="xref py py-class">Node.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.location" refuri="bpy.types.Node#bpy.types.Node.location"><literal classes="xref py py-class">Node.location</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.width" refuri="bpy.types.Node#bpy.types.Node.width"><literal classes="xref py py-class">Node.width</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.width_hidden" refuri="bpy.types.Node#bpy.types.Node.width_hidden"><literal classes="xref py py-class">Node.width_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.height" refuri="bpy.types.Node#bpy.types.Node.height"><literal classes="xref py py-class">Node.height</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.dimensions" refuri="bpy.types.Node#bpy.types.Node.dimensions"><literal classes="xref py py-class">Node.dimensions</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.name" refuri="bpy.types.Node#bpy.types.Node.name"><literal classes="xref py py-class">Node.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.label" refuri="bpy.types.Node#bpy.types.Node.label"><literal classes="xref py py-class">Node.label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.inputs" refuri="bpy.types.Node#bpy.types.Node.inputs"><literal classes="xref py py-class">Node.inputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.outputs" refuri="bpy.types.Node#bpy.types.Node.outputs"><literal classes="xref py py-class">Node.outputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.internal_links" refuri="bpy.types.Node#bpy.types.Node.internal_links"><literal classes="xref py py-class">Node.internal_links</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.parent" refuri="bpy.types.Node#bpy.types.Node.parent"><literal classes="xref py py-class">Node.parent</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.use_custom_color" refuri="bpy.types.Node#bpy.types.Node.use_custom_color"><literal classes="xref py py-class">Node.use_custom_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.color" refuri="bpy.types.Node#bpy.types.Node.color"><literal classes="xref py py-class">Node.color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.select" refuri="bpy.types.Node#bpy.types.Node.select"><literal classes="xref py py-class">Node.select</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_options" refuri="bpy.types.Node#bpy.types.Node.show_options"><literal classes="xref py py-class">Node.show_options</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_preview" refuri="bpy.types.Node#bpy.types.Node.show_preview"><literal classes="xref py py-class">Node.show_preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.hide" refuri="bpy.types.Node#bpy.types.Node.hide"><literal classes="xref py py-class">Node.hide</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.mute" refuri="bpy.types.Node#bpy.types.Node.mute"><literal classes="xref py py-class">Node.mute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_texture" refuri="bpy.types.Node#bpy.types.Node.show_texture"><literal classes="xref py py-class">Node.show_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_idname" refuri="bpy.types.Node#bpy.types.Node.bl_idname"><literal classes="xref py py-class">Node.bl_idname</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_label" refuri="bpy.types.Node#bpy.types.Node.bl_label"><literal classes="xref py py-class">Node.bl_label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_description" refuri="bpy.types.Node#bpy.types.Node.bl_description"><literal classes="xref py py-class">Node.bl_description</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_icon" refuri="bpy.types.Node#bpy.types.Node.bl_icon"><literal classes="xref py py-class">Node.bl_icon</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_static_type" refuri="bpy.types.Node#bpy.types.Node.bl_static_type"><literal classes="xref py py-class">Node.bl_static_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_default" refuri="bpy.types.Node#bpy.types.Node.bl_width_default"><literal classes="xref py py-class">Node.bl_width_default</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_min" refuri="bpy.types.Node#bpy.types.Node.bl_width_min"><literal classes="xref py py-class">Node.bl_width_min</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_max" refuri="bpy.types.Node#bpy.types.Node.bl_width_max"><literal classes="xref py py-class">Node.bl_width_max</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_default" refuri="bpy.types.Node#bpy.types.Node.bl_height_default"><literal classes="xref py py-class">Node.bl_height_default</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_min" refuri="bpy.types.Node#bpy.types.Node.bl_height_min"><literal classes="xref py py-class">Node.bl_height_min</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_max" refuri="bpy.types.Node#bpy.types.Node.bl_height_max"><literal classes="xref py py-class">Node.bl_height_max</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.socket_value_update" refuri="bpy.types.Node#bpy.types.Node.socket_value_update"><literal classes="xref py py-class">Node.socket_value_update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.is_registered_node_type" refuri="bpy.types.Node#bpy.types.Node.is_registered_node_type"><literal classes="xref py py-class">Node.is_registered_node_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll" refuri="bpy.types.Node#bpy.types.Node.poll"><literal classes="xref py py-class">Node.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll_instance" refuri="bpy.types.Node#bpy.types.Node.poll_instance"><literal classes="xref py py-class">Node.poll_instance</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.update" refuri="bpy.types.Node#bpy.types.Node.update"><literal classes="xref py py-class">Node.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.insert_link" refuri="bpy.types.Node#bpy.types.Node.insert_link"><literal classes="xref py py-class">Node.insert_link</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.init" refuri="bpy.types.Node#bpy.types.Node.init"><literal classes="xref py py-class">Node.init</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.copy" refuri="bpy.types.Node#bpy.types.Node.copy"><literal classes="xref py py-class">Node.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.free" refuri="bpy.types.Node#bpy.types.Node.free"><literal classes="xref py py-class">Node.free</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons" refuri="bpy.types.Node#bpy.types.Node.draw_buttons"><literal classes="xref py py-class">Node.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons_ext" refuri="bpy.types.Node#bpy.types.Node.draw_buttons_ext"><literal classes="xref py py-class">Node.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_label" refuri="bpy.types.Node#bpy.types.Node.draw_label"><literal classes="xref py py-class">Node.draw_label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll" refuri="bpy.types.Node#bpy.types.Node.poll"><literal classes="xref py py-class">Node.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll"><literal classes="xref py py-class">NodeInternal.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll_instance" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll_instance"><literal classes="xref py py-class">NodeInternal.poll_instance</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.update" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.update"><literal classes="xref py py-class">NodeInternal.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons"><literal classes="xref py py-class">NodeInternal.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons_ext" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons_ext"><literal classes="xref py py-class">NodeInternal.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTree.get_output_node" refuri="bpy.types.ShaderNodeTree#bpy.types.ShaderNodeTree.get_output_node"><literal classes="xref py py-class">ShaderNodeTree.get_output_node</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
