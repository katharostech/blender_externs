<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.SceneSequence.rst">
    <section ids="module-bpy.types scenesequence-sequence" names="scenesequence(sequence)">
        <title>SceneSequence(Sequence)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.Sequence" refuri="bpy.types.Sequence#bpy.types.Sequence"><literal classes="xref py py-class">Sequence</literal></reference></paragraph>
        <index entries="['single',\ u'SceneSequence\ (class\ in\ bpy.types)',\ u'bpy.types.SceneSequence',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="SceneSequence" ids="bpy.types.SceneSequence" module="bpy.types" names="bpy.types.SceneSequence"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">SceneSequence</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">Sequence</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Sequence strip to used the rendered image of a scene</paragraph>
                <index entries="['single',\ u'alpha_mode\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.alpha_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.alpha_mode" ids="bpy.types.SceneSequence.alpha_mode" module="bpy.types" names="bpy.types.SceneSequence.alpha_mode"><desc_name xml:space="preserve">alpha_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Representation of alpha information in the RGBA pixels</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>STRAIGHT</literal> Straight, RGB channels in transparent pixels are unaffected by the alpha channel.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PREMUL</literal> Premultiplied, RGB channels in transparent pixels are multiplied by the alpha channel.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘STRAIGHT’, ‘PREMUL’], default ‘STRAIGHT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'animation_offset_end\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.animation_offset_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.animation_offset_end" ids="bpy.types.SceneSequence.animation_offset_end" module="bpy.types" names="bpy.types.SceneSequence.animation_offset_end"><desc_name xml:space="preserve">animation_offset_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation end offset (trim end)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'animation_offset_start\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.animation_offset_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.animation_offset_start" ids="bpy.types.SceneSequence.animation_offset_start" module="bpy.types" names="bpy.types.SceneSequence.animation_offset_start"><desc_name xml:space="preserve">animation_offset_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation start offset (trim start)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color_multiply\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.color_multiply',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.color_multiply" ids="bpy.types.SceneSequence.color_multiply" module="bpy.types" names="bpy.types.SceneSequence.color_multiply"><desc_name xml:space="preserve">color_multiply</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 20], default 1.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color_saturation\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.color_saturation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.color_saturation" ids="bpy.types.SceneSequence.color_saturation" module="bpy.types" names="bpy.types.SceneSequence.color_saturation"><desc_name xml:space="preserve">color_saturation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Adjust the intensity of the input’s color</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 20], default 1.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'SceneSequence.crop\ (in\ module\ bpy.types)',\ u'bpy.types.SceneSequence.crop',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.crop" ids="bpy.types.SceneSequence.crop" module="bpy.types" names="bpy.types.SceneSequence.crop"><desc_name xml:space="preserve">crop</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SequenceCrop" refuri="bpy.types.SequenceCrop#bpy.types.SequenceCrop"><literal classes="xref py py-class">SequenceCrop</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'SceneSequence.fps\ (in\ module\ bpy.types)',\ u'bpy.types.SceneSequence.fps',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.fps" ids="bpy.types.SceneSequence.fps" module="bpy.types" names="bpy.types.SceneSequence.fps"><desc_name xml:space="preserve">fps</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Frames per second</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf], default 0.0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'SceneSequence.proxy\ (in\ module\ bpy.types)',\ u'bpy.types.SceneSequence.proxy',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.proxy" ids="bpy.types.SceneSequence.proxy" module="bpy.types" names="bpy.types.SceneSequence.proxy"><desc_name xml:space="preserve">proxy</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SequenceProxy" refuri="bpy.types.SequenceProxy#bpy.types.SequenceProxy"><literal classes="xref py py-class">SequenceProxy</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'scene\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.scene',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.scene" ids="bpy.types.SceneSequence.scene" module="bpy.types" names="bpy.types.SceneSequence.scene"><desc_name xml:space="preserve">scene</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Scene that this sequence uses</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'scene_camera\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.scene_camera',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.scene_camera" ids="bpy.types.SceneSequence.scene_camera" module="bpy.types" names="bpy.types.SceneSequence.scene_camera"><desc_name xml:space="preserve">scene_camera</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Override the scenes active camera</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'strobe\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.strobe',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.strobe" ids="bpy.types.SceneSequence.strobe" module="bpy.types" names="bpy.types.SceneSequence.strobe"><desc_name xml:space="preserve">strobe</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Only display every nth frame</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [1, 30], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'SceneSequence.transform\ (in\ module\ bpy.types)',\ u'bpy.types.SceneSequence.transform',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.transform" ids="bpy.types.SceneSequence.transform" module="bpy.types" names="bpy.types.SceneSequence.transform"><desc_name xml:space="preserve">transform</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SequenceTransform" refuri="bpy.types.SequenceTransform#bpy.types.SequenceTransform"><literal classes="xref py py-class">SequenceTransform</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_crop\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_crop',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_crop" ids="bpy.types.SceneSequence.use_crop" module="bpy.types" names="bpy.types.SceneSequence.use_crop"><desc_name xml:space="preserve">use_crop</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Crop image before processing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_deinterlace\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_deinterlace',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_deinterlace" ids="bpy.types.SceneSequence.use_deinterlace" module="bpy.types" names="bpy.types.SceneSequence.use_deinterlace"><desc_name xml:space="preserve">use_deinterlace</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Remove fields from video movies</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_flip_x\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_flip_x',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_flip_x" ids="bpy.types.SceneSequence.use_flip_x" module="bpy.types" names="bpy.types.SceneSequence.use_flip_x"><desc_name xml:space="preserve">use_flip_x</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Flip on the X axis</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_flip_y\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_flip_y',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_flip_y" ids="bpy.types.SceneSequence.use_flip_y" module="bpy.types" names="bpy.types.SceneSequence.use_flip_y"><desc_name xml:space="preserve">use_flip_y</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Flip on the Y axis</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_float\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_float',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_float" ids="bpy.types.SceneSequence.use_float" module="bpy.types" names="bpy.types.SceneSequence.use_float"><desc_name xml:space="preserve">use_float</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Convert input to float data</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_grease_pencil\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_grease_pencil',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_grease_pencil" ids="bpy.types.SceneSequence.use_grease_pencil" module="bpy.types" names="bpy.types.SceneSequence.use_grease_pencil"><desc_name xml:space="preserve">use_grease_pencil</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Show Grease Pencil strokes in OpenGL previews</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_proxy\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_proxy',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_proxy" ids="bpy.types.SceneSequence.use_proxy" module="bpy.types" names="bpy.types.SceneSequence.use_proxy"><desc_name xml:space="preserve">use_proxy</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use a preview proxy and/or timecode index for this strip</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_reverse_frames\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_reverse_frames',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_reverse_frames" ids="bpy.types.SceneSequence.use_reverse_frames" module="bpy.types" names="bpy.types.SceneSequence.use_reverse_frames"><desc_name xml:space="preserve">use_reverse_frames</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Reverse frame order</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_sequence\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_sequence',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_sequence" ids="bpy.types.SceneSequence.use_sequence" module="bpy.types" names="bpy.types.SceneSequence.use_sequence"><desc_name xml:space="preserve">use_sequence</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use scenes sequence strips directly, instead of rendering</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_translation\ (bpy.types.SceneSequence\ attribute)',\ u'bpy.types.SceneSequence.use_translation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.use_translation" ids="bpy.types.SceneSequence.use_translation" module="bpy.types" names="bpy.types.SceneSequence.use_translation"><desc_name xml:space="preserve">use_translation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Translate image before processing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.SceneSequence\ class\ method)',\ u'bpy.types.SceneSequence.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.bl_rna_get_subclass" ids="bpy.types.SceneSequence.bl_rna_get_subclass" module="bpy.types" names="bpy.types.SceneSequence.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.SceneSequence\ class\ method)',\ u'bpy.types.SceneSequence.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="SceneSequence" first="False" fullname="SceneSequence.bl_rna_get_subclass_py" ids="bpy.types.SceneSequence.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.SceneSequence.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.name" refuri="bpy.types.Sequence#bpy.types.Sequence.name"><literal classes="xref py py-class">Sequence.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.type" refuri="bpy.types.Sequence#bpy.types.Sequence.type"><literal classes="xref py py-class">Sequence.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.select" refuri="bpy.types.Sequence#bpy.types.Sequence.select"><literal classes="xref py py-class">Sequence.select</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.select_left_handle" refuri="bpy.types.Sequence#bpy.types.Sequence.select_left_handle"><literal classes="xref py py-class">Sequence.select_left_handle</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.select_right_handle" refuri="bpy.types.Sequence#bpy.types.Sequence.select_right_handle"><literal classes="xref py py-class">Sequence.select_right_handle</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.mute" refuri="bpy.types.Sequence#bpy.types.Sequence.mute"><literal classes="xref py py-class">Sequence.mute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.lock" refuri="bpy.types.Sequence#bpy.types.Sequence.lock"><literal classes="xref py py-class">Sequence.lock</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_final_duration" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_final_duration"><literal classes="xref py py-class">Sequence.frame_final_duration</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_duration" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_duration"><literal classes="xref py py-class">Sequence.frame_duration</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_start"><literal classes="xref py py-class">Sequence.frame_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_final_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_final_start"><literal classes="xref py py-class">Sequence.frame_final_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_final_end" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_final_end"><literal classes="xref py py-class">Sequence.frame_final_end</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_offset_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_offset_start"><literal classes="xref py py-class">Sequence.frame_offset_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_offset_end" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_offset_end"><literal classes="xref py py-class">Sequence.frame_offset_end</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_still_start" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_still_start"><literal classes="xref py py-class">Sequence.frame_still_start</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.frame_still_end" refuri="bpy.types.Sequence#bpy.types.Sequence.frame_still_end"><literal classes="xref py py-class">Sequence.frame_still_end</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.channel" refuri="bpy.types.Sequence#bpy.types.Sequence.channel"><literal classes="xref py py-class">Sequence.channel</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.use_linear_modifiers" refuri="bpy.types.Sequence#bpy.types.Sequence.use_linear_modifiers"><literal classes="xref py py-class">Sequence.use_linear_modifiers</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.blend_type" refuri="bpy.types.Sequence#bpy.types.Sequence.blend_type"><literal classes="xref py py-class">Sequence.blend_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.blend_alpha" refuri="bpy.types.Sequence#bpy.types.Sequence.blend_alpha"><literal classes="xref py py-class">Sequence.blend_alpha</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.effect_fader" refuri="bpy.types.Sequence#bpy.types.Sequence.effect_fader"><literal classes="xref py py-class">Sequence.effect_fader</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.use_default_fade" refuri="bpy.types.Sequence#bpy.types.Sequence.use_default_fade"><literal classes="xref py py-class">Sequence.use_default_fade</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.speed_factor" refuri="bpy.types.Sequence#bpy.types.Sequence.speed_factor"><literal classes="xref py py-class">Sequence.speed_factor</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.modifiers" refuri="bpy.types.Sequence#bpy.types.Sequence.modifiers"><literal classes="xref py py-class">Sequence.modifiers</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.update" refuri="bpy.types.Sequence#bpy.types.Sequence.update"><literal classes="xref py py-class">Sequence.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.strip_elem_from_frame" refuri="bpy.types.Sequence#bpy.types.Sequence.strip_elem_from_frame"><literal classes="xref py py-class">Sequence.strip_elem_from_frame</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequence.swap" refuri="bpy.types.Sequence#bpy.types.Sequence.swap"><literal classes="xref py py-class">Sequence.swap</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
