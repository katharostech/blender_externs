<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.ops.gpencil.rst">
    <section ids="module-bpy.ops.gpencil gpencil-operators" names="gpencil\ operators">
        <title>Gpencil Operators</title>
        <index entries="['single',\ u'bpy.ops.gpencil\ (module)',\ u'module-bpy.ops.gpencil',\ '',\ None]"></index>
        <index entries="['single',\ u'active_frame_delete()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.active_frame_delete',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="active_frame_delete" ids="bpy.ops.gpencil.active_frame_delete" module="bpy.ops.gpencil" names="bpy.ops.gpencil.active_frame_delete"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">active_frame_delete</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Delete the active frame for the active Grease Pencil Layer</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'active_frames_delete_all()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.active_frames_delete_all',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="active_frames_delete_all" ids="bpy.ops.gpencil.active_frames_delete_all" module="bpy.ops.gpencil" names="bpy.ops.gpencil.active_frames_delete_all"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">active_frames_delete_all</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Delete the active frame(s) of all editable Grease Pencil layers</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'annotate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.annotate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="annotate" ids="bpy.ops.gpencil.annotate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.annotate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">annotate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='DRAW'</desc_parameter><desc_parameter xml:space="preserve">stroke=None</desc_parameter><desc_parameter xml:space="preserve">wait_for_input=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Make annotations on the active data</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'DRAW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DRAW_STRAIGHT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DRAW_POLY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ERASER'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Mode, Way to interpret mouse movements</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>DRAW</literal> Draw Freehand, Draw freehand stroke(s).</paragraph></list_item><list_item><paragraph><literal>DRAW_STRAIGHT</literal> Draw Straight Lines, Draw straight line segment(s).</paragraph></list_item><list_item><paragraph><literal>DRAW_POLY</literal> Draw Poly Line, Click to place endpoints of straight line segments (connected).</paragraph></list_item><list_item><paragraph><literal>ERASER</literal> Eraser, Erase Annotation strokes.</paragraph></list_item></bullet_list></paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<literal classes="xref py py-class">bpy_prop_collection</literal> of <literal classes="xref py py-class">OperatorStrokeElement</literal>, (optional)) – Stroke</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">wait_for_input</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Wait for Input, Wait for first click instead of painting immediately</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'blank_frame_add()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.blank_frame_add',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="blank_frame_add" ids="bpy.ops.gpencil.blank_frame_add" module="bpy.ops.gpencil" names="bpy.ops.gpencil.blank_frame_add"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">blank_frame_add</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">all_layers=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Insert a blank frame on the current frame (all subsequently existing frames, if any, are shifted right by one frame)</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">all_layers</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – All Layers, Create blank frame in all layers, not only active</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'brush_presets_create()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.brush_presets_create',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="brush_presets_create" ids="bpy.ops.gpencil.brush_presets_create" module="bpy.ops.gpencil" names="bpy.ops.gpencil.brush_presets_create"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">brush_presets_create</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Create a set of predefined Grease Pencil drawing brushes</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'color_hide()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.color_hide',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="color_hide" ids="bpy.ops.gpencil.color_hide" module="bpy.ops.gpencil" names="bpy.ops.gpencil.color_hide"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">color_hide</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">unselected=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Hide selected/unselected Grease Pencil colors</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">unselected</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Unselected, Hide unselected rather than selected colors</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'color_isolate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.color_isolate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="color_isolate" ids="bpy.ops.gpencil.color_isolate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.color_isolate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">color_isolate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">affect_visibility=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Toggle whether the active color is the only one that is editable and/or visible</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">affect_visibility</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Affect Visibility, In addition to toggling the editability, also affect the visibility</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'color_lock_all()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.color_lock_all',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="color_lock_all" ids="bpy.ops.gpencil.color_lock_all" module="bpy.ops.gpencil" names="bpy.ops.gpencil.color_lock_all"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">color_lock_all</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Lock all Grease Pencil colors to prevent them from being accidentally modified</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'color_reveal()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.color_reveal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="color_reveal" ids="bpy.ops.gpencil.color_reveal" module="bpy.ops.gpencil" names="bpy.ops.gpencil.color_reveal"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">color_reveal</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Unhide all hidden Grease Pencil colors</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'color_select()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.color_select',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="color_select" ids="bpy.ops.gpencil.color_select" module="bpy.ops.gpencil" names="bpy.ops.gpencil.color_select"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">color_select</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">deselect=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select all Grease Pencil strokes using current color</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">deselect</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Deselect, Unselect strokes</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'color_unlock_all()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.color_unlock_all',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="color_unlock_all" ids="bpy.ops.gpencil.color_unlock_all" module="bpy.ops.gpencil" names="bpy.ops.gpencil.color_unlock_all"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">color_unlock_all</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Unlock all Grease Pencil colors so that they can be edited</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'convert()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.convert',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="convert" ids="bpy.ops.gpencil.convert" module="bpy.ops.gpencil" names="bpy.ops.gpencil.convert"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">convert</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='PATH'</desc_parameter><desc_parameter xml:space="preserve">use_normalize_weights=True</desc_parameter><desc_parameter xml:space="preserve">radius_multiplier=1.0</desc_parameter><desc_parameter xml:space="preserve">use_link_strokes=True</desc_parameter><desc_parameter xml:space="preserve">timing_mode='FULL'</desc_parameter><desc_parameter xml:space="preserve">frame_range=100</desc_parameter><desc_parameter xml:space="preserve">start_frame=1</desc_parameter><desc_parameter xml:space="preserve">use_realtime=False</desc_parameter><desc_parameter xml:space="preserve">end_frame=250</desc_parameter><desc_parameter xml:space="preserve">gap_duration=0.0</desc_parameter><desc_parameter xml:space="preserve">gap_randomness=0.0</desc_parameter><desc_parameter xml:space="preserve">seed=0</desc_parameter><desc_parameter xml:space="preserve">use_timing_data=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Convert the active Grease Pencil layer to a new Curve Object</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'PATH'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CURVE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'POLY'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Type, Which type of curve to convert to</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>PATH</literal> Path, Animation path.</paragraph></list_item><list_item><paragraph><literal>CURVE</literal> Bezier Curve, Smooth Bezier curve.</paragraph></list_item><list_item><paragraph><literal>POLY</literal> Polygon Curve, Bezier curve with straight-line segments (vector handles).</paragraph></list_item></bullet_list></paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">use_normalize_weights</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Normalize Weight, Normalize weight (set from stroke width)</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">radius_multiplier</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Radius Fac, Multiplier for the points’ radii (set from stroke width)</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">use_link_strokes</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Link Strokes, Whether to link strokes with zero-radius sections of curves</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">timing_mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'NONE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LINEAR'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FULL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CUSTOMGAP'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Timing Mode, How to use timing data stored in strokes</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>NONE</literal> No Timing, Ignore timing.</paragraph></list_item><list_item><paragraph><literal>LINEAR</literal> Linear, Simple linear timing.</paragraph></list_item><list_item><paragraph><literal>FULL</literal> Original, Use the original timing, gaps included.</paragraph></list_item><list_item><paragraph><literal>CUSTOMGAP</literal> Custom Gaps, Use the original timing, but with custom gap lengths (in frames).</paragraph></list_item></bullet_list></paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">frame_range</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>10000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Frame Range, The duration of evaluation of the path control curve</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">start_frame</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>100000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Start Frame, The start frame of the path control curve</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">use_realtime</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Realtime, Whether the path control curve reproduces the drawing in realtime, starting from Start Frame</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">end_frame</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>100000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – End Frame, The end frame of the path control curve (if Realtime is not set)</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">gap_duration</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>10000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Gap Duration, Custom Gap mode: (Average) length of gaps, in frames (Note: Realtime value, will be scaled if Realtime is not set)</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">gap_randomness</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>10000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Gap Randomness, Custom Gap mode: Number of frames that gap lengths can vary</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">seed</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Random Seed, Custom Gap mode: Random generator seed</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">use_timing_data</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Has Valid Timing, Whether the converted Grease Pencil layer has valid timing data (internal use)</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'convert_old_files()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.convert_old_files',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="convert_old_files" ids="bpy.ops.gpencil.convert_old_files" module="bpy.ops.gpencil" names="bpy.ops.gpencil.convert_old_files"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">convert_old_files</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Convert 2.7x grease pencil files to 2.8</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'copy()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.copy',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="copy" ids="bpy.ops.gpencil.copy" module="bpy.ops.gpencil" names="bpy.ops.gpencil.copy"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">copy</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Copy selected Grease Pencil points and strokes</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'data_add()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.data_add',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="data_add" ids="bpy.ops.gpencil.data_add" module="bpy.ops.gpencil" names="bpy.ops.gpencil.data_add"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">data_add</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Add new Grease Pencil data-block</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'data_unlink()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.data_unlink',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="data_unlink" ids="bpy.ops.gpencil.data_unlink" module="bpy.ops.gpencil" names="bpy.ops.gpencil.data_unlink"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">data_unlink</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Unlink active Grease Pencil data-block</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'delete()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.delete',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="delete" ids="bpy.ops.gpencil.delete" module="bpy.ops.gpencil" names="bpy.ops.gpencil.delete"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">delete</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='POINTS'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Delete selected Grease Pencil strokes, vertices, or frames</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'POINTS'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'STROKES'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FRAME'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Type, Method used for deleting Grease Pencil data</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>POINTS</literal> Points, Delete selected points and split strokes into segments.</paragraph></list_item><list_item><paragraph><literal>STROKES</literal> Strokes, Delete selected strokes.</paragraph></list_item><list_item><paragraph><literal>FRAME</literal> Frame, Delete active frame.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'dissolve()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.dissolve',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="dissolve" ids="bpy.ops.gpencil.dissolve" module="bpy.ops.gpencil" names="bpy.ops.gpencil.dissolve"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">dissolve</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='POINTS'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Delete selected points without splitting strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'POINTS'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'BETWEEN'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'UNSELECT'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Type, Method used for disolving Stroke points</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>POINTS</literal> Dissolve, Dissolve selected points.</paragraph></list_item><list_item><paragraph><literal>BETWEEN</literal> Dissolve Between, Dissolve points between selected points.</paragraph></list_item><list_item><paragraph><literal>UNSELECT</literal> Dissolve Unselect, Dissolve all unselected points.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'draw()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.draw',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="draw" ids="bpy.ops.gpencil.draw" module="bpy.ops.gpencil" names="bpy.ops.gpencil.draw"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">draw</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='DRAW'</desc_parameter><desc_parameter xml:space="preserve">stroke=None</desc_parameter><desc_parameter xml:space="preserve">wait_for_input=True</desc_parameter><desc_parameter xml:space="preserve">disable_straight=False</desc_parameter><desc_parameter xml:space="preserve">disable_fill=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Draw a new stroke in the active Grease Pencil Object</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'DRAW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DRAW_STRAIGHT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DRAW_POLY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ERASER'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Mode, Way to interpret mouse movements</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>DRAW</literal> Draw Freehand, Draw freehand stroke(s).</paragraph></list_item><list_item><paragraph><literal>DRAW_STRAIGHT</literal> Draw Straight Lines, Draw straight line segment(s).</paragraph></list_item><list_item><paragraph><literal>DRAW_POLY</literal> Draw Poly Line, Click to place endpoints of straight line segments (connected).</paragraph></list_item><list_item><paragraph><literal>ERASER</literal> Eraser, Erase Grease Pencil strokes.</paragraph></list_item></bullet_list></paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<literal classes="xref py py-class">bpy_prop_collection</literal> of <literal classes="xref py py-class">OperatorStrokeElement</literal>, (optional)) – Stroke</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">wait_for_input</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Wait for Input, Wait for first click instead of painting immediately</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">disable_straight</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – No Straight lines, Disable key for straight lines</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">disable_fill</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – No Fill Areas, Disable fill to use stroke as fill boundary</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'duplicate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.duplicate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="duplicate" ids="bpy.ops.gpencil.duplicate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.duplicate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">duplicate</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Duplicate the selected Grease Pencil strokes</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'duplicate_move()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.duplicate_move',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="duplicate_move" ids="bpy.ops.gpencil.duplicate_move" module="bpy.ops.gpencil" names="bpy.ops.gpencil.duplicate_move"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">duplicate_move</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">GPENCIL_OT_duplicate=None</desc_parameter><desc_parameter xml:space="preserve">TRANSFORM_OT_translate=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Make copies of the selected Grease Pencil strokes and move them</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">GPENCIL_OT_duplicate</literal_strong> (<literal classes="xref py py-class">GPENCIL_OT_duplicate</literal>, (optional)) – Duplicate Strokes, Duplicate the selected Grease Pencil strokes</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">TRANSFORM_OT_translate</literal_strong> (<literal classes="xref py py-class">TRANSFORM_OT_translate</literal>, (optional)) – Move, Move selected items</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'editmode_toggle()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.editmode_toggle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="editmode_toggle" ids="bpy.ops.gpencil.editmode_toggle" module="bpy.ops.gpencil" names="bpy.ops.gpencil.editmode_toggle"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">editmode_toggle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">back=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Enter/Exit edit mode for Grease Pencil strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">back</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Return to Previous Mode, Return to previous mode</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'fill()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.fill',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="fill" ids="bpy.ops.gpencil.fill" module="bpy.ops.gpencil" names="bpy.ops.gpencil.fill"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">fill</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">on_back=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Fill with color the shape formed by strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">on_back</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Draw On Back, Send new stroke to Back</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'frame_clean_fill()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.frame_clean_fill',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="frame_clean_fill" ids="bpy.ops.gpencil.frame_clean_fill" module="bpy.ops.gpencil" names="bpy.ops.gpencil.frame_clean_fill"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">frame_clean_fill</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='ACTIVE'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Remove ‘no fill’ boundary strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'ACTIVE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ALL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Mode</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>ACTIVE</literal> Active Frame Only, Clean active frame only.</paragraph></list_item><list_item><paragraph><literal>ALL</literal> All Frames, Clean all frames in all layers.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'frame_clean_loose()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.frame_clean_loose',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="frame_clean_loose" ids="bpy.ops.gpencil.frame_clean_loose" module="bpy.ops.gpencil" names="bpy.ops.gpencil.frame_clean_loose"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">frame_clean_loose</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">limit=1</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Remove loose points</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">limit</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Limit, Number of points to consider stroke as loose</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'frame_duplicate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.frame_duplicate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="frame_duplicate" ids="bpy.ops.gpencil.frame_duplicate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.frame_duplicate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">frame_duplicate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='ACTIVE'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Make a copy of the active Grease Pencil Frame</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'ACTIVE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ALL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Mode</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>ACTIVE</literal> Active, Duplicate frame in active layer only.</paragraph></list_item><list_item><paragraph><literal>ALL</literal> All, Duplicate active frames in all layers.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'generate_weights()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.generate_weights',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="generate_weights" ids="bpy.ops.gpencil.generate_weights" module="bpy.ops.gpencil" names="bpy.ops.gpencil.generate_weights"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">generate_weights</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='NAME'</desc_parameter><desc_parameter xml:space="preserve">armature='DEFAULT'</desc_parameter><desc_parameter xml:space="preserve">ratio=0.1</desc_parameter><desc_parameter xml:space="preserve">decay=0.8</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Generate automatic weights for armatures (requires armature modifier)</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'NAME'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'AUTO'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Mode</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">armature</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'DEFAULT'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Armature, Armature to use</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">ratio</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>2</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Ratio, Ratio between bone length and influence radius</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">decay</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Decay, Factor to reduce influence depending of distance to bone axis</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'hide()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.hide',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="hide" ids="bpy.ops.gpencil.hide" module="bpy.ops.gpencil" names="bpy.ops.gpencil.hide"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">hide</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">unselected=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Hide selected/unselected Grease Pencil layers</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">unselected</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Unselected, Hide unselected rather than selected layers</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'interpolate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.interpolate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="interpolate" ids="bpy.ops.gpencil.interpolate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.interpolate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">interpolate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">shift=0.0</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Interpolate grease pencil strokes between frames</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">shift</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Shift, Bias factor for which frame has more influence on the interpolated strokes</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'interpolate_reverse()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.interpolate_reverse',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="interpolate_reverse" ids="bpy.ops.gpencil.interpolate_reverse" module="bpy.ops.gpencil" names="bpy.ops.gpencil.interpolate_reverse"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">interpolate_reverse</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Remove breakdown frames generated by interpolating between two Grease Pencil frames</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'interpolate_sequence()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.interpolate_sequence',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="interpolate_sequence" ids="bpy.ops.gpencil.interpolate_sequence" module="bpy.ops.gpencil" names="bpy.ops.gpencil.interpolate_sequence"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">interpolate_sequence</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Generate ‘in-betweens’ to smoothly interpolate between Grease Pencil frames</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_add()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_add',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_add" ids="bpy.ops.gpencil.layer_add" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_add"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_add</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Add new layer or note for the active data-block</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_change()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_change',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_change" ids="bpy.ops.gpencil.layer_change" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_change"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_change</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">layer='DEFAULT'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Change active Grease Pencil layer</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">layer</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'DEFAULT'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Grease Pencil Layer</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_duplicate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_duplicate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_duplicate" ids="bpy.ops.gpencil.layer_duplicate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_duplicate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_duplicate</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Make a copy of the active Grease Pencil layer</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_duplicate_object()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_duplicate_object',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_duplicate_object" ids="bpy.ops.gpencil.layer_duplicate_object" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_duplicate_object"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_duplicate_object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">object=""</desc_parameter><desc_parameter xml:space="preserve">mode='ALL'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Make a copy of the active Grease Pencil layer to new object</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">object</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Object, Name of the destination object</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'ALL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ACTIVE'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Mode</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_isolate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_isolate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_isolate" ids="bpy.ops.gpencil.layer_isolate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_isolate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_isolate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">affect_visibility=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Toggle whether the active layer is the only one that can be edited and/or visible</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">affect_visibility</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Affect Visibility, In addition to toggling the editability, also affect the visibility</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_merge()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_merge',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_merge" ids="bpy.ops.gpencil.layer_merge" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_merge"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_merge</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Merge the current layer with the layer below</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_move()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_move',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_move" ids="bpy.ops.gpencil.layer_move" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_move"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_move</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='UP'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Move the active Grease Pencil layer up/down in the list</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'UP'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DOWN'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Type</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'layer_remove()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.layer_remove',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="layer_remove" ids="bpy.ops.gpencil.layer_remove" module="bpy.ops.gpencil" names="bpy.ops.gpencil.layer_remove"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">layer_remove</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Remove active Grease Pencil layer</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'lock_all()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.lock_all',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="lock_all" ids="bpy.ops.gpencil.lock_all" module="bpy.ops.gpencil" names="bpy.ops.gpencil.lock_all"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">lock_all</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Lock all Grease Pencil layers to prevent them from being accidentally modified</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'lock_layer()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.lock_layer',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="lock_layer" ids="bpy.ops.gpencil.lock_layer" module="bpy.ops.gpencil" names="bpy.ops.gpencil.lock_layer"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">lock_layer</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Lock and hide any color not used in any layer</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'move_to_layer()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.move_to_layer',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="move_to_layer" ids="bpy.ops.gpencil.move_to_layer" module="bpy.ops.gpencil" names="bpy.ops.gpencil.move_to_layer"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">move_to_layer</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">layer='DEFAULT'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Move selected strokes to another layer</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">layer</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'DEFAULT'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Grease Pencil Layer</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'paintmode_toggle()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.paintmode_toggle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="paintmode_toggle" ids="bpy.ops.gpencil.paintmode_toggle" module="bpy.ops.gpencil" names="bpy.ops.gpencil.paintmode_toggle"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">paintmode_toggle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">back=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Enter/Exit paint mode for Grease Pencil strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">back</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Return to Previous Mode, Return to previous mode</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'paste()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.paste',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="paste" ids="bpy.ops.gpencil.paste" module="bpy.ops.gpencil" names="bpy.ops.gpencil.paste"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">paste</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='COPY'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Paste previously copied strokes or copy and merge in active layer</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'COPY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'MERGE'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Type</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'primitive()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.primitive',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="primitive" ids="bpy.ops.gpencil.primitive" module="bpy.ops.gpencil" names="bpy.ops.gpencil.primitive"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">primitive</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">edges=4</desc_parameter><desc_parameter xml:space="preserve">type='BOX'</desc_parameter><desc_parameter xml:space="preserve">wait_for_input=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Create predefined grease pencil stroke shapes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">edges</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>2</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>100</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Edges, Number of polygon edges</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'BOX'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LINE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CIRCLE'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Type, Type of shape</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">wait_for_input</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Wait for Input</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'reproject()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.reproject',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="reproject" ids="bpy.ops.gpencil.reproject" module="bpy.ops.gpencil" names="bpy.ops.gpencil.reproject"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">reproject</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='VIEW'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Reproject the selected strokes from the current viewpoint as if they had been newly drawn (e.g. to fix problems from accidental 3D cursor movement or accidental viewport changes, or for matching deforming geometry)</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'FRONT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SIDE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TOP'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'VIEW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SURFACE'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Projection Type</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>FRONT</literal> Front, Reproject the strokes using the X-Z plane.</paragraph></list_item><list_item><paragraph><literal>SIDE</literal> Side, Reproject the strokes using the Y-Z plane.</paragraph></list_item><list_item><paragraph><literal>TOP</literal> Top, Reproject the strokes using the X-Y plane.</paragraph></list_item><list_item><paragraph><literal>VIEW</literal> View, Reproject the strokes to end up on the same plane, as if drawn from the current viewpoint using ‘Cursor’ Stroke Placement.</paragraph></list_item><list_item><paragraph><literal>SURFACE</literal> Surface, Reproject the strokes on to the scene geometry, as if drawn using ‘Surface’ placement.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'reveal()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.reveal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="reveal" ids="bpy.ops.gpencil.reveal" module="bpy.ops.gpencil" names="bpy.ops.gpencil.reveal"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">reveal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">select=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Show all Grease Pencil layers</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">select</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Select</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'sculpt_paint()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.sculpt_paint',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="sculpt_paint" ids="bpy.ops.gpencil.sculpt_paint" module="bpy.ops.gpencil" names="bpy.ops.gpencil.sculpt_paint"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">sculpt_paint</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">stroke=None</desc_parameter><desc_parameter xml:space="preserve">wait_for_input=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Apply tweaks to strokes by painting over the strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">stroke</literal_strong> (<literal classes="xref py py-class">bpy_prop_collection</literal> of <literal classes="xref py py-class">OperatorStrokeElement</literal>, (optional)) – Stroke</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">wait_for_input</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Wait for Input, Enter a mini ‘sculpt-mode’ if enabled, otherwise, exit after drawing a single stroke</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'sculptmode_toggle()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.sculptmode_toggle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="sculptmode_toggle" ids="bpy.ops.gpencil.sculptmode_toggle" module="bpy.ops.gpencil" names="bpy.ops.gpencil.sculptmode_toggle"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">sculptmode_toggle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">back=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Enter/Exit sculpt mode for Grease Pencil strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">back</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Return to Previous Mode, Return to previous mode</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select" ids="bpy.ops.gpencil.select" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">extend=False</desc_parameter><desc_parameter xml:space="preserve">deselect=False</desc_parameter><desc_parameter xml:space="preserve">toggle=False</desc_parameter><desc_parameter xml:space="preserve">entire_strokes=False</desc_parameter><desc_parameter xml:space="preserve">location=(0</desc_parameter><desc_parameter xml:space="preserve">0)</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select Grease Pencil strokes and/or stroke points</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">extend</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Extend, Extend selection instead of deselecting everything first</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">deselect</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Deselect, Remove from selection</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">toggle</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Toggle Selection, Toggle the selection</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">entire_strokes</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Entire Strokes, Select entire strokes instead of just the nearest stroke vertex</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">location</literal_strong> (<literal_emphasis>int array of 2 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Location, Mouse location</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_all()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_all',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_all" ids="bpy.ops.gpencil.select_all" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_all"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_all</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">action='TOGGLE'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Change selection of all Grease Pencil strokes currently visible</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">action</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'TOGGLE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SELECT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DESELECT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'INVERT'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Action, Selection action to execute</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>TOGGLE</literal> Toggle, Toggle selection for all elements.</paragraph></list_item><list_item><paragraph><literal>SELECT</literal> Select, Select all elements.</paragraph></list_item><list_item><paragraph><literal>DESELECT</literal> Deselect, Deselect all elements.</paragraph></list_item><list_item><paragraph><literal>INVERT</literal> Invert, Invert selection of all elements.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_alternate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_alternate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_alternate" ids="bpy.ops.gpencil.select_alternate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_alternate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_alternate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">unselect_ends=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select alternative points in same strokes as already selected points</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">unselect_ends</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Unselect Ends, Do not select the first and last point of the stroke</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_box()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_box',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_box" ids="bpy.ops.gpencil.select_box" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_box"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_box</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='SET'</desc_parameter><desc_parameter xml:space="preserve">xmin=0</desc_parameter><desc_parameter xml:space="preserve">xmax=0</desc_parameter><desc_parameter xml:space="preserve">ymin=0</desc_parameter><desc_parameter xml:space="preserve">ymax=0</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select Grease Pencil strokes within a rectangular region</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'SET'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ADD'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SUB'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'XOR'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'AND'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Mode</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">xmin</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – X Min</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">xmax</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – X Max</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">ymin</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Y Min</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">ymax</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Y Max</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_circle()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_circle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_circle" ids="bpy.ops.gpencil.select_circle" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_circle"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_circle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">x=0</desc_parameter><desc_parameter xml:space="preserve">y=0</desc_parameter><desc_parameter xml:space="preserve">radius=25</desc_parameter><desc_parameter xml:space="preserve">deselect=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select Grease Pencil strokes using brush selection</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">x</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – X</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">y</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Y</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">radius</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Radius</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">deselect</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Deselect, Deselect rather than select items</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_first()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_first',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_first" ids="bpy.ops.gpencil.select_first" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_first"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_first</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">only_selected_strokes=False</desc_parameter><desc_parameter xml:space="preserve">extend=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select first point in Grease Pencil strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">only_selected_strokes</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Selected Strokes Only, Only select the first point of strokes that already have points selected</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">extend</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Extend, Extend selection instead of deselecting all other selected points</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_grouped()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_grouped',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_grouped" ids="bpy.ops.gpencil.select_grouped" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_grouped"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_grouped</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='LAYER'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select all strokes with similar characteristics</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'LAYER'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'MATERIAL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Type</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>LAYER</literal> Layer, Shared layers.</paragraph></list_item><list_item><paragraph><literal>MATERIAL</literal> Material, Shared materials.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_lasso()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_lasso',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_lasso" ids="bpy.ops.gpencil.select_lasso" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_lasso"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_lasso</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='SET'</desc_parameter><desc_parameter xml:space="preserve">path=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select Grease Pencil strokes using lasso selection</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'SET'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'ADD'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SUB'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'XOR'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'AND'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Mode</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">path</literal_strong> (<literal classes="xref py py-class">bpy_prop_collection</literal> of <literal classes="xref py py-class">OperatorMousePath</literal>, (optional)) – Path</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_last()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_last',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_last" ids="bpy.ops.gpencil.select_last" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_last"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_last</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">only_selected_strokes=False</desc_parameter><desc_parameter xml:space="preserve">extend=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select last point in Grease Pencil strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">only_selected_strokes</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Selected Strokes Only, Only select the last point of strokes that already have points selected</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">extend</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Extend, Extend selection instead of deselecting all other selected points</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_less()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_less',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_less" ids="bpy.ops.gpencil.select_less" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_less"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_less</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Shrink sets of selected Grease Pencil points</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_linked()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_linked',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_linked" ids="bpy.ops.gpencil.select_linked" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_linked"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_linked</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select all points in same strokes as already selected points</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'select_more()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.select_more',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="select_more" ids="bpy.ops.gpencil.select_more" module="bpy.ops.gpencil" names="bpy.ops.gpencil.select_more"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">select_more</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Grow sets of selected Grease Pencil points</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'selection_opacity_toggle()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.selection_opacity_toggle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="selection_opacity_toggle" ids="bpy.ops.gpencil.selection_opacity_toggle" module="bpy.ops.gpencil" names="bpy.ops.gpencil.selection_opacity_toggle"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">selection_opacity_toggle</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Hide/Unhide selected points for Grease Pencil strokes setting alpha factor</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'selectmode_toggle()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.selectmode_toggle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="selectmode_toggle" ids="bpy.ops.gpencil.selectmode_toggle" module="bpy.ops.gpencil" names="bpy.ops.gpencil.selectmode_toggle"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">selectmode_toggle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode=0</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Set selection mode for Grease Pencil strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Select mode, Select mode</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'snap_cursor_to_selected()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.snap_cursor_to_selected',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="snap_cursor_to_selected" ids="bpy.ops.gpencil.snap_cursor_to_selected" module="bpy.ops.gpencil" names="bpy.ops.gpencil.snap_cursor_to_selected"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">snap_cursor_to_selected</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Snap cursor to center of selected points</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'snap_to_cursor()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.snap_to_cursor',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="snap_to_cursor" ids="bpy.ops.gpencil.snap_to_cursor" module="bpy.ops.gpencil" names="bpy.ops.gpencil.snap_to_cursor"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">snap_to_cursor</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">use_offset=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Snap selected points/strokes to the cursor</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">use_offset</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – With Offset, Offset the entire stroke instead of selected points only</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'snap_to_grid()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.snap_to_grid',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="snap_to_grid" ids="bpy.ops.gpencil.snap_to_grid" module="bpy.ops.gpencil" names="bpy.ops.gpencil.snap_to_grid"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">snap_to_grid</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Snap selected points to the nearest grid points</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_apply_thickness()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_apply_thickness',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_apply_thickness" ids="bpy.ops.gpencil.stroke_apply_thickness" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_apply_thickness"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_apply_thickness</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Apply the thickness change of the layer to its strokes</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_arrange()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_arrange',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_arrange" ids="bpy.ops.gpencil.stroke_arrange" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_arrange"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_arrange</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">direction='UP'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Arrange selected strokes up/down in the drawing order of the active layer</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">direction</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'UP'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'DOWN'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TOP'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'BOTTOM'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Direction</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_change_color()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_change_color',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_change_color" ids="bpy.ops.gpencil.stroke_change_color" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_change_color"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_change_color</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">material=""</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Move selected strokes to active material</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">material</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Material, Name of the material</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_cyclical_set()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_cyclical_set',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_cyclical_set" ids="bpy.ops.gpencil.stroke_cyclical_set" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_cyclical_set"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_cyclical_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='TOGGLE'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Close or open the selected stroke adding an edge from last to first point</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'CLOSE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'OPEN'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'TOGGLE'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Type</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_flip()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_flip',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_flip" ids="bpy.ops.gpencil.stroke_flip" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_flip"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_flip</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Change direction of the points of the selected strokes</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_join()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_join',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_join" ids="bpy.ops.gpencil.stroke_join" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_join"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_join</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type='JOIN'</desc_parameter><desc_parameter xml:space="preserve">leave_gaps=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Join selected strokes (optionally as new stroke)</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'JOIN'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'JOINCOPY'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Type</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">leave_gaps</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Leave Gaps, Leave gaps between joined strokes instead of linking them</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_lock_color()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_lock_color',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_lock_color" ids="bpy.ops.gpencil.stroke_lock_color" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_lock_color"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_lock_color</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Lock any color not used in any selected stroke</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_separate()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_separate',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_separate" ids="bpy.ops.gpencil.stroke_separate" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_separate"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_separate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mode='POINT'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Separate the selected strokes or layer in a new grease pencil object</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'POINT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'STROKE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LAYER'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Mode</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>POINT</literal> Selected Points, Separate the selected points.</paragraph></list_item><list_item><paragraph><literal>STROKE</literal> Selected Strokes, Separate the selected strokes.</paragraph></list_item><list_item><paragraph><literal>LAYER</literal> Active Layer, Separate the strokes of the current layer.</paragraph></list_item></bullet_list></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_simplify()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_simplify',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_simplify" ids="bpy.ops.gpencil.stroke_simplify" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_simplify"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_simplify</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">factor=0.0</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Simplify selected stroked reducing number of points</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">factor</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>100</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Factor</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_simplify_fixed()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_simplify_fixed',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_simplify_fixed" ids="bpy.ops.gpencil.stroke_simplify_fixed" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_simplify_fixed"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_simplify_fixed</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">step=1</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Simplify selected stroked reducing number of points using fixed algorithm</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">step</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>100</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Steps, Number of simplify steps</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_split()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_split',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_split" ids="bpy.ops.gpencil.stroke_split" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_split"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_split</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Split selected points as new stroke on same frame</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'stroke_subdivide()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.stroke_subdivide',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="stroke_subdivide" ids="bpy.ops.gpencil.stroke_subdivide" module="bpy.ops.gpencil" names="bpy.ops.gpencil.stroke_subdivide"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">stroke_subdivide</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">number_cuts=1</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Subdivide between continuous selected points of the stroke adding a point half way between them</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">number_cuts</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>10</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Number of Cuts</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'unlock_all()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.unlock_all',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="unlock_all" ids="bpy.ops.gpencil.unlock_all" module="bpy.ops.gpencil" names="bpy.ops.gpencil.unlock_all"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">unlock_all</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Unlock all Grease Pencil layers so that they can be edited</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'vertex_group_assign()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.vertex_group_assign',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="vertex_group_assign" ids="bpy.ops.gpencil.vertex_group_assign" module="bpy.ops.gpencil" names="bpy.ops.gpencil.vertex_group_assign"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">vertex_group_assign</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Assign the selected vertices to the active vertex group</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'vertex_group_deselect()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.vertex_group_deselect',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="vertex_group_deselect" ids="bpy.ops.gpencil.vertex_group_deselect" module="bpy.ops.gpencil" names="bpy.ops.gpencil.vertex_group_deselect"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">vertex_group_deselect</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Deselect all selected vertices assigned to the active vertex group</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'vertex_group_invert()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.vertex_group_invert',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="vertex_group_invert" ids="bpy.ops.gpencil.vertex_group_invert" module="bpy.ops.gpencil" names="bpy.ops.gpencil.vertex_group_invert"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">vertex_group_invert</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Invert weights to the active vertex group</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'vertex_group_remove_from()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.vertex_group_remove_from',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="vertex_group_remove_from" ids="bpy.ops.gpencil.vertex_group_remove_from" module="bpy.ops.gpencil" names="bpy.ops.gpencil.vertex_group_remove_from"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">vertex_group_remove_from</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Remove the selected vertices from active or all vertex group(s)</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'vertex_group_select()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.vertex_group_select',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="vertex_group_select" ids="bpy.ops.gpencil.vertex_group_select" module="bpy.ops.gpencil" names="bpy.ops.gpencil.vertex_group_select"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">vertex_group_select</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Select all the vertices assigned to the active vertex group</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'vertex_group_smooth()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.vertex_group_smooth',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="vertex_group_smooth" ids="bpy.ops.gpencil.vertex_group_smooth" module="bpy.ops.gpencil" names="bpy.ops.gpencil.vertex_group_smooth"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">vertex_group_smooth</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">factor=0.5</desc_parameter><desc_parameter xml:space="preserve">repeat=1</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Smooth weights to the active vertex group</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">factor</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Factor</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">repeat</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>10000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Iterations</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'weightmode_toggle()\ (in\ module\ bpy.ops.gpencil)',\ u'bpy.ops.gpencil.weightmode_toggle',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="weightmode_toggle" ids="bpy.ops.gpencil.weightmode_toggle" module="bpy.ops.gpencil" names="bpy.ops.gpencil.weightmode_toggle"><desc_addname xml:space="preserve">bpy.ops.gpencil.</desc_addname><desc_name xml:space="preserve">weightmode_toggle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">back=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Enter/Exit weight paint mode for Grease Pencil strokes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">back</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Return to Previous Mode, Return to previous mode</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
