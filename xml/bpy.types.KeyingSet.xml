<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.KeyingSet.rst">
    <section ids="module-bpy.types keyingset-bpy-struct" names="keyingset(bpy_struct)">
        <title>KeyingSet(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'KeyingSet\ (class\ in\ bpy.types)',\ u'bpy.types.KeyingSet',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="KeyingSet" ids="bpy.types.KeyingSet" module="bpy.types" names="bpy.types.KeyingSet"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">KeyingSet</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Settings that should be keyframed together</paragraph>
                <index entries="['single',\ u'bl_description\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.bl_description',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.bl_description" ids="bpy.types.KeyingSet.bl_description" module="bpy.types" names="bpy.types.KeyingSet.bl_description"><desc_name xml:space="preserve">bl_description</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A short description of the keying set</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_idname\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.bl_idname',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.bl_idname" ids="bpy.types.KeyingSet.bl_idname" module="bpy.types" names="bpy.types.KeyingSet.bl_idname"><desc_name xml:space="preserve">bl_idname</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>If this is set, the Keying Set gets a custom ID, otherwise it takes the name of the class used to define the Keying Set (for example, if the class name is “BUILTIN_KSI_location”, and bl_idname is not set by the script, then bl_idname = “BUILTIN_KSI_location”)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_label\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.bl_label',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.bl_label" ids="bpy.types.KeyingSet.bl_label" module="bpy.types" names="bpy.types.KeyingSet.bl_label"><desc_name xml:space="preserve">bl_label</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyingSet.is_path_absolute\ (in\ module\ bpy.types)',\ u'bpy.types.KeyingSet.is_path_absolute',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.is_path_absolute" ids="bpy.types.KeyingSet.is_path_absolute" module="bpy.types" names="bpy.types.KeyingSet.is_path_absolute"><desc_name xml:space="preserve">is_path_absolute</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Keying Set defines specific paths/settings to be keyframed (i.e. is not reliant on context info)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyingSet.paths\ (in\ module\ bpy.types)',\ u'bpy.types.KeyingSet.paths',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.paths" ids="bpy.types.KeyingSet.paths" module="bpy.types" names="bpy.types.KeyingSet.paths"><desc_name xml:space="preserve">paths</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Keying Set Paths to define settings that get keyframed together</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetPaths" refuri="bpy.types.KeyingSetPaths#bpy.types.KeyingSetPaths"><literal classes="xref py py-class">KeyingSetPaths</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.KeyingSetPath" refuri="bpy.types.KeyingSetPath#bpy.types.KeyingSetPath"><literal classes="xref py py-class">KeyingSetPath</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'KeyingSet.type_info\ (in\ module\ bpy.types)',\ u'bpy.types.KeyingSet.type_info',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.type_info" ids="bpy.types.KeyingSet.type_info" module="bpy.types" names="bpy.types.KeyingSet.type_info"><desc_name xml:space="preserve">type_info</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Callback function defines for built-in Keying Sets</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetInfo" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo"><literal classes="xref py py-class">KeyingSetInfo</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_insertkey_needed\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.use_insertkey_needed',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.use_insertkey_needed" ids="bpy.types.KeyingSet.use_insertkey_needed" module="bpy.types" names="bpy.types.KeyingSet.use_insertkey_needed"><desc_name xml:space="preserve">use_insertkey_needed</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Only insert keyframes where they’re needed in the relevant F-Curves</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_insertkey_override_needed\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.use_insertkey_override_needed',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.use_insertkey_override_needed" ids="bpy.types.KeyingSet.use_insertkey_override_needed" module="bpy.types" names="bpy.types.KeyingSet.use_insertkey_override_needed"><desc_name xml:space="preserve">use_insertkey_override_needed</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Override default setting to only insert keyframes where they’re needed in the relevant F-Curves</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_insertkey_override_visual\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.use_insertkey_override_visual',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.use_insertkey_override_visual" ids="bpy.types.KeyingSet.use_insertkey_override_visual" module="bpy.types" names="bpy.types.KeyingSet.use_insertkey_override_visual"><desc_name xml:space="preserve">use_insertkey_override_visual</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Override default setting to insert keyframes based on ‘visual transforms’</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_insertkey_override_xyz_to_rgb\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.use_insertkey_override_xyz_to_rgb',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.use_insertkey_override_xyz_to_rgb" ids="bpy.types.KeyingSet.use_insertkey_override_xyz_to_rgb" module="bpy.types" names="bpy.types.KeyingSet.use_insertkey_override_xyz_to_rgb"><desc_name xml:space="preserve">use_insertkey_override_xyz_to_rgb</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Override default setting to set color for newly added transformation F-Curves (Location, Rotation, Scale) to be based on the transform axis</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_insertkey_visual\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.use_insertkey_visual',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.use_insertkey_visual" ids="bpy.types.KeyingSet.use_insertkey_visual" module="bpy.types" names="bpy.types.KeyingSet.use_insertkey_visual"><desc_name xml:space="preserve">use_insertkey_visual</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Insert keyframes based on ‘visual transforms’</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_insertkey_xyz_to_rgb\ (bpy.types.KeyingSet\ attribute)',\ u'bpy.types.KeyingSet.use_insertkey_xyz_to_rgb',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.use_insertkey_xyz_to_rgb" ids="bpy.types.KeyingSet.use_insertkey_xyz_to_rgb" module="bpy.types" names="bpy.types.KeyingSet.use_insertkey_xyz_to_rgb"><desc_name xml:space="preserve">use_insertkey_xyz_to_rgb</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Color for newly added transformation F-Curves (Location, Rotation, Scale) is based on the transform axis</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'refresh()\ (bpy.types.KeyingSet\ method)',\ u'bpy.types.KeyingSet.refresh',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.refresh" ids="bpy.types.KeyingSet.refresh" module="bpy.types" names="bpy.types.KeyingSet.refresh"><desc_name xml:space="preserve">refresh</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Refresh Keying Set to ensure that it is valid for the current context (call before each use of one)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.KeyingSet\ class\ method)',\ u'bpy.types.KeyingSet.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.bl_rna_get_subclass" ids="bpy.types.KeyingSet.bl_rna_get_subclass" module="bpy.types" names="bpy.types.KeyingSet.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.KeyingSet\ class\ method)',\ u'bpy.types.KeyingSet.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="KeyingSet" first="False" fullname="KeyingSet.bl_rna_get_subclass_py" ids="bpy.types.KeyingSet.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.KeyingSet.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetInfo.generate" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo.generate"><literal classes="xref py py-class">KeyingSetInfo.generate</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetInfo.iterator" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo.iterator"><literal classes="xref py py-class">KeyingSetInfo.iterator</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSets.active" refuri="bpy.types.KeyingSets#bpy.types.KeyingSets.active"><literal classes="xref py py-class">KeyingSets.active</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSets.new" refuri="bpy.types.KeyingSets#bpy.types.KeyingSets.new"><literal classes="xref py py-class">KeyingSets.new</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetsAll.active" refuri="bpy.types.KeyingSetsAll#bpy.types.KeyingSetsAll.active"><literal classes="xref py py-class">KeyingSetsAll.active</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Scene.keying_sets" refuri="bpy.types.Scene#bpy.types.Scene.keying_sets"><literal classes="xref py py-class">Scene.keying_sets</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Scene.keying_sets_all" refuri="bpy.types.Scene#bpy.types.Scene.keying_sets_all"><literal classes="xref py py-class">Scene.keying_sets_all</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
