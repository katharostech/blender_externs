<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Mesh.rst">
    <section ids="module-bpy.types mesh-id" names="mesh(id)">
        <title>Mesh(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <section ids="mesh-data" names="mesh\ data">
            <title>Mesh Data</title>
            <paragraph>The mesh data is accessed in object mode and intended for compact storage,
                for more flexible mesh editing from python see <reference internal="True" reftitle="bmesh" refuri="bmesh#module-bmesh"><literal classes="xref py py-mod">bmesh</literal></reference>.</paragraph>
            <paragraph>Blender stores 4 main arrays to define mesh geometry.</paragraph>
            <bullet_list bullet="-">
                <list_item>
                    <paragraph><reference internal="True" refid="bpy.types.Mesh.vertices" reftitle="bpy.types.Mesh.vertices"><literal classes="xref py py-class">Mesh.vertices</literal></reference> (3 points in space)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="bpy.types.Mesh.edges" reftitle="bpy.types.Mesh.edges"><literal classes="xref py py-class">Mesh.edges</literal></reference> (reference 2 vertices)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="bpy.types.Mesh.loops" reftitle="bpy.types.Mesh.loops"><literal classes="xref py py-class">Mesh.loops</literal></reference> (reference a single vertex and edge)</paragraph>
                </list_item>
                <list_item>
                    <paragraph><reference internal="True" refid="bpy.types.Mesh.polygons" reftitle="bpy.types.Mesh.polygons"><literal classes="xref py py-class">Mesh.polygons</literal></reference>: (reference a range of loops)</paragraph>
                </list_item>
            </bullet_list>
            <paragraph>Each polygon reference a slice in the loop array, this way, polygons do not store vertices or corner data such as UV’s directly,
                only a reference to loops that the polygon uses.</paragraph>
            <paragraph><reference internal="True" refid="bpy.types.Mesh.loops" reftitle="bpy.types.Mesh.loops"><literal classes="xref py py-class">Mesh.loops</literal></reference>, <reference internal="True" refid="bpy.types.Mesh.uv_layers" reftitle="bpy.types.Mesh.uv_layers"><literal classes="xref py py-class">Mesh.uv_layers</literal></reference> <reference internal="True" refid="bpy.types.Mesh.vertex_colors" reftitle="bpy.types.Mesh.vertex_colors"><literal classes="xref py py-class">Mesh.vertex_colors</literal></reference> are all aligned so the same polygon loop
                indices can be used to find the UV’s and vertex colors as with as the vertices.</paragraph>
            <paragraph>To compare mesh API options see: <reference internal="True" refuri="info_gotcha#info-gotcha-mesh-faces"><inline classes="std std-ref">NGons and Tessellation Faces</inline></reference></paragraph>
            <paragraph>This example script prints the vertices and UV’s for each polygon, assumes the active object is a mesh with UVs.</paragraph>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.Mesh.py" xml:space="preserve">
import bpy

me = bpy.context.object.data
uv_layer = me.uv_layers.active.data

for poly in me.polygons:
    print("Polygon index: %d, length: %d" % (poly.index, poly.loop_total))

    # range is used here to show how the polygons reference loops,
    # for convenience 'poly.loop_indices' can be used instead.
    for loop_index in range(poly.loop_start, poly.loop_start + poly.loop_total):
        print("    Vertex: %d" % me.loops[loop_index].vertex_index)
        print("    UV: %r" % uv_layer[loop_index].uv)
</literal_block>
            <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
            <index entries="['single',\ u'Mesh\ (class\ in\ bpy.types)',\ u'bpy.types.Mesh',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Mesh" ids="bpy.types.Mesh" module="bpy.types" names="bpy.types.Mesh"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Mesh</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Mesh data-block defining geometric surfaces</paragraph>
                    <index entries="['single',\ u'Mesh.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.animation_data',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.animation_data" ids="bpy.types.Mesh.animation_data" module="bpy.types" names="bpy.types.Mesh.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Animation data for this data-block</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'auto_smooth_angle\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.auto_smooth_angle',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.auto_smooth_angle" ids="bpy.types.Mesh.auto_smooth_angle" module="bpy.types" names="bpy.types.Mesh.auto_smooth_angle"><desc_name xml:space="preserve">auto_smooth_angle</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Maximum angle between face normals that will be considered as smooth (unused if custom split normals data are available)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float in [0, 3.14159], default 3.14159</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'auto_texspace\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.auto_texspace',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.auto_texspace" ids="bpy.types.Mesh.auto_texspace" module="bpy.types" names="bpy.types.Mesh.auto_texspace"><desc_name xml:space="preserve">auto_texspace</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Adjust active object’s texture space automatically when transforming object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.cycles\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.cycles',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.cycles" ids="bpy.types.Mesh.cycles" module="bpy.types" names="bpy.types.Mesh.cycles"><desc_name xml:space="preserve">cycles</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Cycles mesh settings</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.CyclesMeshSettings" refuri="bpy.types.CyclesMeshSettings#bpy.types.CyclesMeshSettings"><literal classes="xref py py-class">CyclesMeshSettings</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.edges\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.edges',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.edges" ids="bpy.types.Mesh.edges" module="bpy.types" names="bpy.types.Mesh.edges"><desc_name xml:space="preserve">edges</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Edges of the mesh</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshEdges" refuri="bpy.types.MeshEdges#bpy.types.MeshEdges"><literal classes="xref py py-class">MeshEdges</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshEdge" refuri="bpy.types.MeshEdge#bpy.types.MeshEdge"><literal classes="xref py py-class">MeshEdge</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.face_maps\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.face_maps',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.face_maps" ids="bpy.types.Mesh.face_maps" module="bpy.types" names="bpy.types.Mesh.face_maps"><desc_name xml:space="preserve">face_maps</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshFaceMapLayers" refuri="bpy.types.MeshFaceMapLayers#bpy.types.MeshFaceMapLayers"><literal classes="xref py py-class">MeshFaceMapLayers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshFaceMapLayer" refuri="bpy.types.MeshFaceMapLayer#bpy.types.MeshFaceMapLayer"><literal classes="xref py py-class">MeshFaceMapLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.has_custom_normals\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.has_custom_normals',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.has_custom_normals" ids="bpy.types.Mesh.has_custom_normals" module="bpy.types" names="bpy.types.Mesh.has_custom_normals"><desc_name xml:space="preserve">has_custom_normals</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>True if there are custom split normals data in this mesh</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.is_editmode\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.is_editmode',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.is_editmode" ids="bpy.types.Mesh.is_editmode" module="bpy.types" names="bpy.types.Mesh.is_editmode"><desc_name xml:space="preserve">is_editmode</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>True when used in editmode</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.loop_triangles\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.loop_triangles',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.loop_triangles" ids="bpy.types.Mesh.loop_triangles" module="bpy.types" names="bpy.types.Mesh.loop_triangles"><desc_name xml:space="preserve">loop_triangles</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Tessellation of mesh polygons into triangles</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshLoopTriangle" refuri="bpy.types.MeshLoopTriangle#bpy.types.MeshLoopTriangle"><literal classes="xref py py-class">MeshLoopTriangle</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshLoopTriangle" refuri="bpy.types.MeshLoopTriangle#bpy.types.MeshLoopTriangle"><literal classes="xref py py-class">MeshLoopTriangle</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.loops\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.loops',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.loops" ids="bpy.types.Mesh.loops" module="bpy.types" names="bpy.types.Mesh.loops"><desc_name xml:space="preserve">loops</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Loops of the mesh (polygon corners)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshLoops" refuri="bpy.types.MeshLoops#bpy.types.MeshLoops"><literal classes="xref py py-class">MeshLoops</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshLoop" refuri="bpy.types.MeshLoop#bpy.types.MeshLoop"><literal classes="xref py py-class">MeshLoop</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.materials\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.materials',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.materials" ids="bpy.types.Mesh.materials" module="bpy.types" names="bpy.types.Mesh.materials"><desc_name xml:space="preserve">materials</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.IDMaterials" refuri="bpy.types.IDMaterials#bpy.types.IDMaterials"><literal classes="xref py py-class">IDMaterials</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Material" refuri="bpy.types.Material#bpy.types.Material"><literal classes="xref py py-class">Material</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.polygon_layers_float\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.polygon_layers_float',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.polygon_layers_float" ids="bpy.types.Mesh.polygon_layers_float" module="bpy.types" names="bpy.types.Mesh.polygon_layers_float"><desc_name xml:space="preserve">polygon_layers_float</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.PolygonFloatProperties" refuri="bpy.types.PolygonFloatProperties#bpy.types.PolygonFloatProperties"><literal classes="xref py py-class">PolygonFloatProperties</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshPolygonFloatPropertyLayer" refuri="bpy.types.MeshPolygonFloatPropertyLayer#bpy.types.MeshPolygonFloatPropertyLayer"><literal classes="xref py py-class">MeshPolygonFloatPropertyLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.polygon_layers_int\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.polygon_layers_int',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.polygon_layers_int" ids="bpy.types.Mesh.polygon_layers_int" module="bpy.types" names="bpy.types.Mesh.polygon_layers_int"><desc_name xml:space="preserve">polygon_layers_int</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.PolygonIntProperties" refuri="bpy.types.PolygonIntProperties#bpy.types.PolygonIntProperties"><literal classes="xref py py-class">PolygonIntProperties</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshPolygonIntPropertyLayer" refuri="bpy.types.MeshPolygonIntPropertyLayer#bpy.types.MeshPolygonIntPropertyLayer"><literal classes="xref py py-class">MeshPolygonIntPropertyLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.polygon_layers_string\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.polygon_layers_string',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.polygon_layers_string" ids="bpy.types.Mesh.polygon_layers_string" module="bpy.types" names="bpy.types.Mesh.polygon_layers_string"><desc_name xml:space="preserve">polygon_layers_string</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.PolygonStringProperties" refuri="bpy.types.PolygonStringProperties#bpy.types.PolygonStringProperties"><literal classes="xref py py-class">PolygonStringProperties</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshPolygonStringPropertyLayer" refuri="bpy.types.MeshPolygonStringPropertyLayer#bpy.types.MeshPolygonStringPropertyLayer"><literal classes="xref py py-class">MeshPolygonStringPropertyLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.polygons\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.polygons',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.polygons" ids="bpy.types.Mesh.polygons" module="bpy.types" names="bpy.types.Mesh.polygons"><desc_name xml:space="preserve">polygons</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Polygons of the mesh</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshPolygons" refuri="bpy.types.MeshPolygons#bpy.types.MeshPolygons"><literal classes="xref py py-class">MeshPolygons</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshPolygon" refuri="bpy.types.MeshPolygon#bpy.types.MeshPolygon"><literal classes="xref py py-class">MeshPolygon</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.shape_keys\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.shape_keys',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.shape_keys" ids="bpy.types.Mesh.shape_keys" module="bpy.types" names="bpy.types.Mesh.shape_keys"><desc_name xml:space="preserve">shape_keys</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Key" refuri="bpy.types.Key#bpy.types.Key"><literal classes="xref py py-class">Key</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_double_sided\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.show_double_sided',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.show_double_sided" ids="bpy.types.Mesh.show_double_sided" module="bpy.types" names="bpy.types.Mesh.show_double_sided"><desc_name xml:space="preserve">show_double_sided</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display the mesh with double or single sided lighting (OpenGL only)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.skin_vertices\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.skin_vertices',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.skin_vertices" ids="bpy.types.Mesh.skin_vertices" module="bpy.types" names="bpy.types.Mesh.skin_vertices"><desc_name xml:space="preserve">skin_vertices</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>All skin vertices</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshSkinVertexLayer" refuri="bpy.types.MeshSkinVertexLayer#bpy.types.MeshSkinVertexLayer"><literal classes="xref py py-class">MeshSkinVertexLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'texco_mesh\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.texco_mesh',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.texco_mesh" ids="bpy.types.Mesh.texco_mesh" module="bpy.types" names="bpy.types.Mesh.texco_mesh"><desc_name xml:space="preserve">texco_mesh</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Derive texture coordinates from another mesh</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" refid="bpy.types.Mesh" reftitle="bpy.types.Mesh"><literal classes="xref py py-class">Mesh</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'texspace_location\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.texspace_location',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.texspace_location" ids="bpy.types.Mesh.texspace_location" module="bpy.types" names="bpy.types.Mesh.texspace_location"><desc_name xml:space="preserve">texspace_location</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Texture space location</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'texspace_size\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.texspace_size',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.texspace_size" ids="bpy.types.Mesh.texspace_size" module="bpy.types" names="bpy.types.Mesh.texspace_size"><desc_name xml:space="preserve">texspace_size</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Texture space size</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'texture_mesh\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.texture_mesh',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.texture_mesh" ids="bpy.types.Mesh.texture_mesh" module="bpy.types" names="bpy.types.Mesh.texture_mesh"><desc_name xml:space="preserve">texture_mesh</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Use another mesh for texture indices (vertex indices must be aligned)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" refid="bpy.types.Mesh" reftitle="bpy.types.Mesh"><literal classes="xref py py-class">Mesh</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.total_edge_sel\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.total_edge_sel',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.total_edge_sel" ids="bpy.types.Mesh.total_edge_sel" module="bpy.types" names="bpy.types.Mesh.total_edge_sel"><desc_name xml:space="preserve">total_edge_sel</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Selected edge count in editmode</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.total_face_sel\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.total_face_sel',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.total_face_sel" ids="bpy.types.Mesh.total_face_sel" module="bpy.types" names="bpy.types.Mesh.total_face_sel"><desc_name xml:space="preserve">total_face_sel</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Selected face count in editmode</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.total_vert_sel\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.total_vert_sel',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.total_vert_sel" ids="bpy.types.Mesh.total_vert_sel" module="bpy.types" names="bpy.types.Mesh.total_vert_sel"><desc_name xml:space="preserve">total_vert_sel</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Selected vertex count in editmode</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_auto_smooth\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_auto_smooth',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_auto_smooth" ids="bpy.types.Mesh.use_auto_smooth" module="bpy.types" names="bpy.types.Mesh.use_auto_smooth"><desc_name xml:space="preserve">use_auto_smooth</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Auto smooth (based on smooth/sharp faces/edges and angle between faces), or use custom split normals data if available</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_auto_texspace\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_auto_texspace',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_auto_texspace" ids="bpy.types.Mesh.use_auto_texspace" module="bpy.types" names="bpy.types.Mesh.use_auto_texspace"><desc_name xml:space="preserve">use_auto_texspace</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Adjust active object’s texture space automatically when transforming object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_customdata_edge_bevel\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_customdata_edge_bevel',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_customdata_edge_bevel" ids="bpy.types.Mesh.use_customdata_edge_bevel" module="bpy.types" names="bpy.types.Mesh.use_customdata_edge_bevel"><desc_name xml:space="preserve">use_customdata_edge_bevel</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_customdata_edge_crease\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_customdata_edge_crease',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_customdata_edge_crease" ids="bpy.types.Mesh.use_customdata_edge_crease" module="bpy.types" names="bpy.types.Mesh.use_customdata_edge_crease"><desc_name xml:space="preserve">use_customdata_edge_crease</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_customdata_vertex_bevel\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_customdata_vertex_bevel',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_customdata_vertex_bevel" ids="bpy.types.Mesh.use_customdata_vertex_bevel" module="bpy.types" names="bpy.types.Mesh.use_customdata_vertex_bevel"><desc_name xml:space="preserve">use_customdata_vertex_bevel</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_mirror_topology\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_mirror_topology',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_mirror_topology" ids="bpy.types.Mesh.use_mirror_topology" module="bpy.types" names="bpy.types.Mesh.use_mirror_topology"><desc_name xml:space="preserve">use_mirror_topology</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Use topology based mirroring (for when both sides of mesh have matching, unique topology)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_mirror_x\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_mirror_x',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_mirror_x" ids="bpy.types.Mesh.use_mirror_x" module="bpy.types" names="bpy.types.Mesh.use_mirror_x"><desc_name xml:space="preserve">use_mirror_x</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>X Axis mirror editing</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_paint_mask\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_paint_mask',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_paint_mask" ids="bpy.types.Mesh.use_paint_mask" module="bpy.types" names="bpy.types.Mesh.use_paint_mask"><desc_name xml:space="preserve">use_paint_mask</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Face selection masking for painting</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_paint_mask_vertex\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.use_paint_mask_vertex',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.use_paint_mask_vertex" ids="bpy.types.Mesh.use_paint_mask_vertex" module="bpy.types" names="bpy.types.Mesh.use_paint_mask_vertex"><desc_name xml:space="preserve">use_paint_mask_vertex</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Vertex selection masking for painting (weight paint only)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'uv_layer_clone\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.uv_layer_clone',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.uv_layer_clone" ids="bpy.types.Mesh.uv_layer_clone" module="bpy.types" names="bpy.types.Mesh.uv_layer_clone"><desc_name xml:space="preserve">uv_layer_clone</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>UV loop layer to be used as cloning source</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshUVLoopLayer" refuri="bpy.types.MeshUVLoopLayer#bpy.types.MeshUVLoopLayer"><literal classes="xref py py-class">MeshUVLoopLayer</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'uv_layer_clone_index\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.uv_layer_clone_index',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.uv_layer_clone_index" ids="bpy.types.Mesh.uv_layer_clone_index" module="bpy.types" names="bpy.types.Mesh.uv_layer_clone_index"><desc_name xml:space="preserve">uv_layer_clone_index</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Clone UV loop layer index</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'uv_layer_stencil\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.uv_layer_stencil',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.uv_layer_stencil" ids="bpy.types.Mesh.uv_layer_stencil" module="bpy.types" names="bpy.types.Mesh.uv_layer_stencil"><desc_name xml:space="preserve">uv_layer_stencil</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>UV loop layer to mask the painted area</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshUVLoopLayer" refuri="bpy.types.MeshUVLoopLayer#bpy.types.MeshUVLoopLayer"><literal classes="xref py py-class">MeshUVLoopLayer</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'uv_layer_stencil_index\ (bpy.types.Mesh\ attribute)',\ u'bpy.types.Mesh.uv_layer_stencil_index',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.uv_layer_stencil_index" ids="bpy.types.Mesh.uv_layer_stencil_index" module="bpy.types" names="bpy.types.Mesh.uv_layer_stencil_index"><desc_name xml:space="preserve">uv_layer_stencil_index</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Mask UV loop layer index</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.uv_layers\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.uv_layers',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.uv_layers" ids="bpy.types.Mesh.uv_layers" module="bpy.types" names="bpy.types.Mesh.uv_layers"><desc_name xml:space="preserve">uv_layers</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>All UV loop layers</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.UVLoopLayers" refuri="bpy.types.UVLoopLayers#bpy.types.UVLoopLayers"><literal classes="xref py py-class">UVLoopLayers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshUVLoopLayer" refuri="bpy.types.MeshUVLoopLayer#bpy.types.MeshUVLoopLayer"><literal classes="xref py py-class">MeshUVLoopLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.vertex_colors\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.vertex_colors',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.vertex_colors" ids="bpy.types.Mesh.vertex_colors" module="bpy.types" names="bpy.types.Mesh.vertex_colors"><desc_name xml:space="preserve">vertex_colors</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>All vertex colors</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.LoopColors" refuri="bpy.types.LoopColors#bpy.types.LoopColors"><literal classes="xref py py-class">LoopColors</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshLoopColorLayer" refuri="bpy.types.MeshLoopColorLayer#bpy.types.MeshLoopColorLayer"><literal classes="xref py py-class">MeshLoopColorLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.vertex_layers_float\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.vertex_layers_float',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.vertex_layers_float" ids="bpy.types.Mesh.vertex_layers_float" module="bpy.types" names="bpy.types.Mesh.vertex_layers_float"><desc_name xml:space="preserve">vertex_layers_float</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.VertexFloatProperties" refuri="bpy.types.VertexFloatProperties#bpy.types.VertexFloatProperties"><literal classes="xref py py-class">VertexFloatProperties</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshVertexFloatPropertyLayer" refuri="bpy.types.MeshVertexFloatPropertyLayer#bpy.types.MeshVertexFloatPropertyLayer"><literal classes="xref py py-class">MeshVertexFloatPropertyLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.vertex_layers_int\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.vertex_layers_int',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.vertex_layers_int" ids="bpy.types.Mesh.vertex_layers_int" module="bpy.types" names="bpy.types.Mesh.vertex_layers_int"><desc_name xml:space="preserve">vertex_layers_int</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.VertexIntProperties" refuri="bpy.types.VertexIntProperties#bpy.types.VertexIntProperties"><literal classes="xref py py-class">VertexIntProperties</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshVertexIntPropertyLayer" refuri="bpy.types.MeshVertexIntPropertyLayer#bpy.types.MeshVertexIntPropertyLayer"><literal classes="xref py py-class">MeshVertexIntPropertyLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.vertex_layers_string\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.vertex_layers_string',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.vertex_layers_string" ids="bpy.types.Mesh.vertex_layers_string" module="bpy.types" names="bpy.types.Mesh.vertex_layers_string"><desc_name xml:space="preserve">vertex_layers_string</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.VertexStringProperties" refuri="bpy.types.VertexStringProperties#bpy.types.VertexStringProperties"><literal classes="xref py py-class">VertexStringProperties</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshVertexStringPropertyLayer" refuri="bpy.types.MeshVertexStringPropertyLayer#bpy.types.MeshVertexStringPropertyLayer"><literal classes="xref py py-class">MeshVertexStringPropertyLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.vertex_paint_masks\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.vertex_paint_masks',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.vertex_paint_masks" ids="bpy.types.Mesh.vertex_paint_masks" module="bpy.types" names="bpy.types.Mesh.vertex_paint_masks"><desc_name xml:space="preserve">vertex_paint_masks</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Vertex paint mask</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshPaintMaskLayer" refuri="bpy.types.MeshPaintMaskLayer#bpy.types.MeshPaintMaskLayer"><literal classes="xref py py-class">MeshPaintMaskLayer</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.vertices\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.vertices',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.vertices" ids="bpy.types.Mesh.vertices" module="bpy.types" names="bpy.types.Mesh.vertices"><desc_name xml:space="preserve">vertices</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Vertices of the mesh</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MeshVertices" refuri="bpy.types.MeshVertices#bpy.types.MeshVertices"><literal classes="xref py py-class">MeshVertices</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MeshVertex" refuri="bpy.types.MeshVertex#bpy.types.MeshVertex"><literal classes="xref py py-class">MeshVertex</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Mesh.edge_keys\ (in\ module\ bpy.types)',\ u'bpy.types.Mesh.edge_keys',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.edge_keys" ids="bpy.types.Mesh.edge_keys" module="bpy.types" names="bpy.types.Mesh.edge_keys"><desc_name xml:space="preserve">edge_keys</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>(readonly)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'transform()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.transform',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.transform" ids="bpy.types.Mesh.transform" module="bpy.types" names="bpy.types.Mesh.transform"><desc_name xml:space="preserve">transform</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">matrix</desc_parameter><desc_parameter xml:space="preserve">shape_keys=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Transform mesh vertices by a matrix (Warning: inverts normals if matrix is negative)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">matrix</literal_strong> (<literal_emphasis>float multi-dimensional array of 4 * 4 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Matrix</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">shape_keys</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Transform Shape Keys</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'flip_normals()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.flip_normals',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.flip_normals" ids="bpy.types.Mesh.flip_normals" module="bpy.types" names="bpy.types.Mesh.flip_normals"><desc_name xml:space="preserve">flip_normals</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Invert winding of all polygons (clears tessellation, does not handle custom normals)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'calc_normals()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.calc_normals',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.calc_normals" ids="bpy.types.Mesh.calc_normals" module="bpy.types" names="bpy.types.Mesh.calc_normals"><desc_name xml:space="preserve">calc_normals</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Calculate vertex normals</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'create_normals_split()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.create_normals_split',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.create_normals_split" ids="bpy.types.Mesh.create_normals_split" module="bpy.types" names="bpy.types.Mesh.create_normals_split"><desc_name xml:space="preserve">create_normals_split</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Empty split vertex normals</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'calc_normals_split()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.calc_normals_split',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.calc_normals_split" ids="bpy.types.Mesh.calc_normals_split" module="bpy.types" names="bpy.types.Mesh.calc_normals_split"><desc_name xml:space="preserve">calc_normals_split</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Calculate split vertex normals, which preserve sharp edges</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'free_normals_split()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.free_normals_split',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.free_normals_split" ids="bpy.types.Mesh.free_normals_split" module="bpy.types" names="bpy.types.Mesh.free_normals_split"><desc_name xml:space="preserve">free_normals_split</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Free split vertex normals</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'split_faces()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.split_faces',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.split_faces" ids="bpy.types.Mesh.split_faces" module="bpy.types" names="bpy.types.Mesh.split_faces"><desc_name xml:space="preserve">split_faces</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">free_loop_normals=True</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Split faces based on the edge angle</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">free_loop_normals</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Free Loop Notmals, Free loop normals custom data layer</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'calc_tangents()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.calc_tangents',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.calc_tangents" ids="bpy.types.Mesh.calc_tangents" module="bpy.types" names="bpy.types.Mesh.calc_tangents"><desc_name xml:space="preserve">calc_tangents</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">uvmap=""</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Compute tangents and bitangent signs, to be used together with the split normals to get a complete tangent space for normal mapping (split normals are also computed if not yet present)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">uvmap</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Name of the UV map to use for tangent space computation</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'free_tangents()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.free_tangents',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.free_tangents" ids="bpy.types.Mesh.free_tangents" module="bpy.types" names="bpy.types.Mesh.free_tangents"><desc_name xml:space="preserve">free_tangents</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Free tangents</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'calc_loop_triangles()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.calc_loop_triangles',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.calc_loop_triangles" ids="bpy.types.Mesh.calc_loop_triangles" module="bpy.types" names="bpy.types.Mesh.calc_loop_triangles"><desc_name xml:space="preserve">calc_loop_triangles</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Calculate loop triangle tessellation (supports editmode too)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'calc_smooth_groups()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.calc_smooth_groups',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.calc_smooth_groups" ids="bpy.types.Mesh.calc_smooth_groups" module="bpy.types" names="bpy.types.Mesh.calc_smooth_groups"><desc_name xml:space="preserve">calc_smooth_groups</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">use_bitflags=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Calculate smooth groups from sharp edges</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">use_bitflags</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Produce bitflags groups instead of simple numeric values</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return (poly_groups, groups)</field_name>
                                    <field_body>
                                        <paragraph><title_reference>poly_groups</title_reference>, Smooth Groups, int array of 1 items in [-inf, inf]</paragraph>
                                        <paragraph><title_reference>groups</title_reference>, Total number of groups, int in [0, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'normals_split_custom_set()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.normals_split_custom_set',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.normals_split_custom_set" ids="bpy.types.Mesh.normals_split_custom_set" module="bpy.types" names="bpy.types.Mesh.normals_split_custom_set"><desc_name xml:space="preserve">normals_split_custom_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">normals</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Define custom split normals of this mesh (use zero-vectors to keep auto ones)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">normals</literal_strong> (<literal_emphasis>float multi-dimensional array of 1 * 3 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Normals</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'normals_split_custom_set_from_vertices()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.normals_split_custom_set_from_vertices',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.normals_split_custom_set_from_vertices" ids="bpy.types.Mesh.normals_split_custom_set_from_vertices" module="bpy.types" names="bpy.types.Mesh.normals_split_custom_set_from_vertices"><desc_name xml:space="preserve">normals_split_custom_set_from_vertices</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">normals</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Define custom split normals of this mesh, from vertices’ normals (use zero-vectors to keep auto ones)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">normals</literal_strong> (<literal_emphasis>float multi-dimensional array of 1 * 3 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Normals</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.update',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.update" ids="bpy.types.Mesh.update" module="bpy.types" names="bpy.types.Mesh.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">calc_edges=False</desc_parameter><desc_parameter xml:space="preserve">calc_edges_loose=False</desc_parameter><desc_parameter xml:space="preserve">calc_loop_triangles=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>update</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">calc_edges</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Calculate Edges, Force recalculation of edges</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">calc_edges_loose</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Calculate Loose Edges, Calculate the loose state of each edge</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">calc_loop_triangles</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Calculate Triangules, Force recalculation of triangle tessellation</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_gpu_tag()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.update_gpu_tag',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.update_gpu_tag" ids="bpy.types.Mesh.update_gpu_tag" module="bpy.types" names="bpy.types.Mesh.update_gpu_tag"><desc_name xml:space="preserve">update_gpu_tag</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>update_gpu_tag</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'unit_test_compare()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.unit_test_compare',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.unit_test_compare" ids="bpy.types.Mesh.unit_test_compare" module="bpy.types" names="bpy.types.Mesh.unit_test_compare"><desc_name xml:space="preserve">unit_test_compare</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">mesh=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>unit_test_compare</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">mesh</literal_strong> (<reference internal="True" refid="bpy.types.Mesh" reftitle="bpy.types.Mesh"><literal classes="xref py py-class">Mesh</literal></reference>, (optional)) – Mesh to compare to</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Return value, String description of result of comparison</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>string, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'validate()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.validate',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.validate" ids="bpy.types.Mesh.validate" module="bpy.types" names="bpy.types.Mesh.validate"><desc_name xml:space="preserve">validate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">verbose=False</desc_parameter><desc_parameter xml:space="preserve">clean_customdata=True</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validate geometry, return True when the mesh has had invalid geometry corrected/removed</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">verbose</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Verbose, Output information about the errors found</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">clean_customdata</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Clean Custom Data, Remove temp/cached custom-data layers, like e.g. normals…</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Result</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'validate_material_indices()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.validate_material_indices',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.validate_material_indices" ids="bpy.types.Mesh.validate_material_indices" module="bpy.types" names="bpy.types.Mesh.validate_material_indices"><desc_name xml:space="preserve">validate_material_indices</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Validate material indices of polygons, return True when the mesh has had invalid indices corrected (to default 0)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Result</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'from_pydata()\ (bpy.types.Mesh\ method)',\ u'bpy.types.Mesh.from_pydata',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.from_pydata" ids="bpy.types.Mesh.from_pydata" module="bpy.types" names="bpy.types.Mesh.from_pydata"><desc_name xml:space="preserve">from_pydata</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vertices</desc_parameter><desc_parameter xml:space="preserve">edges</desc_parameter><desc_parameter xml:space="preserve">faces</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Make a mesh from a list of vertices/edges/faces
                                Until we have a nicer way to make geometry, use this.</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">vertices</literal_strong> (<literal_emphasis>iterable object</literal_emphasis>) – float triplets each representing (X, Y, Z)
                                                    eg: [(0.0, 1.0, 0.5), …].</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">edges</literal_strong> (<literal_emphasis>iterable object</literal_emphasis>) – int pairs, each pair contains two indices to the
                                                    <emphasis>vertices</emphasis> argument. eg: [(1, 2), …]</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">faces</literal_strong> (<literal_emphasis>iterable object</literal_emphasis>) – iterator of faces, each faces contains three or more indices to
                                                    the <emphasis>vertices</emphasis> argument. eg: [(5, 6, 8, 9), (1, 2, 3), …]</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                            <warning>
                                <paragraph>Invalid mesh data
                                    <emphasis>(out of range indices, edges with matching indices,
                                        2 sided faces… etc)</emphasis> are <strong>not</strong> prevented.
                                    If the data used for mesh creation isn’t known to be valid,
                                    run <reference internal="True" refid="bpy.types.Mesh.validate" reftitle="bpy.types.Mesh.validate"><literal classes="xref py py-class">Mesh.validate</literal></reference> after this function.</paragraph>
                            </warning>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Mesh\ class\ method)',\ u'bpy.types.Mesh.bl_rna_get_subclass',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.bl_rna_get_subclass" ids="bpy.types.Mesh.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Mesh.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The RNA type or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Mesh\ class\ method)',\ u'bpy.types.Mesh.bl_rna_get_subclass_py',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="Mesh" first="False" fullname="Mesh.bl_rna_get_subclass_py" ids="bpy.types.Mesh.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Mesh.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The class or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>type</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <rubric>Inherited Properties</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>Inherited Functions</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>References</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.mesh" refuri="bpy.context#bpy.context.mesh"><literal classes="xref py py-mod">bpy.context.mesh</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendData.meshes" refuri="bpy.types.BlendData#bpy.types.BlendData.meshes"><literal classes="xref py py-class">BlendData.meshes</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataMeshes.new" refuri="bpy.types.BlendDataMeshes#bpy.types.BlendDataMeshes.new"><literal classes="xref py py-class">BlendDataMeshes.new</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataMeshes.new_from_object" refuri="bpy.types.BlendDataMeshes#bpy.types.BlendDataMeshes.new_from_object"><literal classes="xref py py-class">BlendDataMeshes.new_from_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataMeshes.remove" refuri="bpy.types.BlendDataMeshes#bpy.types.BlendDataMeshes.remove"><literal classes="xref py py-class">BlendDataMeshes.remove</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.Mesh.texco_mesh" reftitle="bpy.types.Mesh.texco_mesh"><literal classes="xref py py-class">Mesh.texco_mesh</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.Mesh.texture_mesh" reftitle="bpy.types.Mesh.texture_mesh"><literal classes="xref py py-class">Mesh.texture_mesh</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.Mesh.unit_test_compare" reftitle="bpy.types.Mesh.unit_test_compare"><literal classes="xref py py-class">Mesh.unit_test_compare</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Object.to_mesh" refuri="bpy.types.Object#bpy.types.Object.to_mesh"><literal classes="xref py py-class">Object.to_mesh</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
        </section>
    </section>
</document>
