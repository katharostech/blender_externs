<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/mathutils.geometry.rst">
    <section ids="module-mathutils.geometry geometry-utilities-mathutils-geometry" names="geometry\ utilities\ (mathutils.geometry)">
        <title>Geometry Utilities (mathutils.geometry)</title>
        <index entries="['single',\ u'mathutils.geometry\ (module)',\ u'module-mathutils.geometry',\ '',\ None]"></index>
        <paragraph>The Blender geometry module</paragraph>
        <index entries="['single',\ u'area_tri()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.area_tri',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="area_tri" ids="mathutils.geometry.area_tri" module="mathutils.geometry" names="mathutils.geometry.area_tri"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">area_tri</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">v1</desc_parameter><desc_parameter xml:space="preserve">v2</desc_parameter><desc_parameter xml:space="preserve">v3</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the area size of the 2D or 3D triangle defined.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point1</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point2</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point3</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'barycentric_transform()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.barycentric_transform',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="barycentric_transform" ids="mathutils.geometry.barycentric_transform" module="mathutils.geometry" names="mathutils.geometry.barycentric_transform"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">barycentric_transform</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">point</desc_parameter><desc_parameter xml:space="preserve">tri_a1</desc_parameter><desc_parameter xml:space="preserve">tri_a2</desc_parameter><desc_parameter xml:space="preserve">tri_a3</desc_parameter><desc_parameter xml:space="preserve">tri_b1</desc_parameter><desc_parameter xml:space="preserve">tri_b2</desc_parameter><desc_parameter xml:space="preserve">tri_b3</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a transformed point, the transformation is defined by 2 triangles.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">point</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The point to transform.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_a1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – source triangle vertex.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_a2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – source triangle vertex.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_a3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – source triangle vertex.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_b1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – target triangle vertex.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_b2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – target triangle vertex.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_b3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – target triangle vertex.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The transformed point</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>’s</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'box_fit_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.box_fit_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="box_fit_2d" ids="mathutils.geometry.box_fit_2d" module="mathutils.geometry" names="mathutils.geometry.box_fit_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">box_fit_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">points</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns an angle that best fits the points to an axis aligned rectangle</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">points</literal_strong> (<literal_emphasis>list</literal_emphasis>) – list of 2d points.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>angle</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'box_pack_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.box_pack_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="box_pack_2d" ids="mathutils.geometry.box_pack_2d" module="mathutils.geometry" names="mathutils.geometry.box_pack_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">box_pack_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">boxes</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the normal of the 3D tri or quad.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">boxes</literal_strong> (<literal_emphasis>list</literal_emphasis>) – list of boxes, each box is a list where the first 4 items are [x, y, width, height, …] other items are ignored.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>the width and height of the packed bounding box</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>tuple, pair of floats</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'convex_hull_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.convex_hull_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="convex_hull_2d" ids="mathutils.geometry.convex_hull_2d" module="mathutils.geometry" names="mathutils.geometry.convex_hull_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">convex_hull_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">points</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a list of indices into the list given</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">points</literal_strong> (<literal_emphasis>list</literal_emphasis>) – list of 2d points.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>a list of indices</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list of ints</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'distance_point_to_plane()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.distance_point_to_plane',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="distance_point_to_plane" ids="mathutils.geometry.distance_point_to_plane" module="mathutils.geometry" names="mathutils.geometry.distance_point_to_plane"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">distance_point_to_plane</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pt</desc_parameter><desc_parameter xml:space="preserve">plane_co</desc_parameter><desc_parameter xml:space="preserve">plane_no</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the signed distance between a point and a plane    (negative when below the normal).</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">pt</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_co</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – A point on the plane</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_no</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The direction the plane is facing</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'interpolate_bezier()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.interpolate_bezier',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="interpolate_bezier" ids="mathutils.geometry.interpolate_bezier" module="mathutils.geometry" names="mathutils.geometry.interpolate_bezier"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">interpolate_bezier</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">knot1</desc_parameter><desc_parameter xml:space="preserve">handle1</desc_parameter><desc_parameter xml:space="preserve">handle2</desc_parameter><desc_parameter xml:space="preserve">knot2</desc_parameter><desc_parameter xml:space="preserve">resolution</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Interpolate a bezier spline segment.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">knot1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First bezier spline point.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">handle1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First bezier spline handle.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">handle2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second bezier spline handle.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">knot2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second bezier spline point.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">resolution</literal_strong> (<literal_emphasis>int</literal_emphasis>) – Number of points to return.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The interpolated points</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list of <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>’s</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_line_line()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_line_line',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_line_line" ids="mathutils.geometry.intersect_line_line" module="mathutils.geometry" names="mathutils.geometry.intersect_line_line"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_line_line</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">v1</desc_parameter><desc_parameter xml:space="preserve">v2</desc_parameter><desc_parameter xml:space="preserve">v3</desc_parameter><desc_parameter xml:space="preserve">v4</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a tuple with the points on each line respectively closest to the other.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the first line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the first line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the second line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v4</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the second line</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>tuple of <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>’s</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_line_line_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_line_line_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_line_line_2d" ids="mathutils.geometry.intersect_line_line_2d" module="mathutils.geometry" names="mathutils.geometry.intersect_line_line_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_line_line_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">lineA_p1</desc_parameter><desc_parameter xml:space="preserve">lineA_p2</desc_parameter><desc_parameter xml:space="preserve">lineB_p1</desc_parameter><desc_parameter xml:space="preserve">lineB_p2</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes 2 segments (defined by 4 vectors) and returns a vector for their point of intersection or None.</paragraph>
                <warning>
                    <paragraph>Despite its name, this function works on segments, and not on lines.</paragraph>
                </warning>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lineA_p1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the first line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lineA_p2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the first line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lineB_p1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the second line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">lineB_p2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the second line</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The point of intersection or None when not found</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or None</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_line_plane()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_line_plane',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_line_plane" ids="mathutils.geometry.intersect_line_plane" module="mathutils.geometry" names="mathutils.geometry.intersect_line_plane"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_line_plane</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">line_a</desc_parameter><desc_parameter xml:space="preserve">line_b</desc_parameter><desc_parameter xml:space="preserve">plane_co</desc_parameter><desc_parameter xml:space="preserve">plane_no</desc_parameter><desc_parameter xml:space="preserve">no_flip=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Calculate the intersection between a line (as 2 vectors) and a plane.
                    Returns a vector for the intersection or None.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_a</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the first line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_b</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the first line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_co</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – A point on the plane</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_no</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The direction the plane is facing</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The point of intersection or None when not found</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or None</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_line_sphere()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_line_sphere',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_line_sphere" ids="mathutils.geometry.intersect_line_sphere" module="mathutils.geometry" names="mathutils.geometry.intersect_line_sphere"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_line_sphere</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">line_a</desc_parameter><desc_parameter xml:space="preserve">line_b</desc_parameter><desc_parameter xml:space="preserve">sphere_co</desc_parameter><desc_parameter xml:space="preserve">sphere_radius</desc_parameter><desc_parameter xml:space="preserve">clip=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes a line (as 2 points) and a sphere (as a point and a radius) and
                    returns the intersection</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_a</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_b</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sphere_co</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The center of the sphere</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sphere_radius</literal_strong> (<literal_emphasis>sphere_radius</literal_emphasis>) – Radius of the sphere</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The intersection points as a pair of vectors or None when there is no intersection</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>A tuple pair containing <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or None</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_line_sphere_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_line_sphere_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_line_sphere_2d" ids="mathutils.geometry.intersect_line_sphere_2d" module="mathutils.geometry" names="mathutils.geometry.intersect_line_sphere_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_line_sphere_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">line_a</desc_parameter><desc_parameter xml:space="preserve">line_b</desc_parameter><desc_parameter xml:space="preserve">sphere_co</desc_parameter><desc_parameter xml:space="preserve">sphere_radius</desc_parameter><desc_parameter xml:space="preserve">clip=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes a line (as 2 points) and a sphere (as a point and a radius) and
                    returns the intersection</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_a</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_b</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sphere_co</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – The center of the sphere</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sphere_radius</literal_strong> (<literal_emphasis>sphere_radius</literal_emphasis>) – Radius of the sphere</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The intersection points as a pair of vectors or None when there is no intersection</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>A tuple pair containing <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or None</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_plane_plane()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_plane_plane',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_plane_plane" ids="mathutils.geometry.intersect_plane_plane" module="mathutils.geometry" names="mathutils.geometry.intersect_plane_plane"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_plane_plane</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">plane_a_co</desc_parameter><desc_parameter xml:space="preserve">plane_a_no</desc_parameter><desc_parameter xml:space="preserve">plane_b_co</desc_parameter><desc_parameter xml:space="preserve">plane_b_no</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return the intersection between two planes</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_a_co</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point on the first plane</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_a_no</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Normal of the first plane</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_b_co</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point on the second plane</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">plane_b_no</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Normal of the second plane</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The line of the intersection represented as a point and a vector</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>tuple pair of <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or None if the intersection can’t be calculated</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_point_line()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_point_line',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_point_line" ids="mathutils.geometry.intersect_point_line" module="mathutils.geometry" names="mathutils.geometry.intersect_point_line"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_point_line</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pt</desc_parameter><desc_parameter xml:space="preserve">line_p1</desc_parameter><desc_parameter xml:space="preserve">line_p2</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes a point and a line and returns a tuple with the closest point on the line and its distance from the first point of the line as a percentage of the length of the line.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">pt</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_p1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the line</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">line_p1</literal_strong> – Second point of the line</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>(<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>, float)</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_point_quad_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_point_quad_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_point_quad_2d" ids="mathutils.geometry.intersect_point_quad_2d" module="mathutils.geometry" names="mathutils.geometry.intersect_point_quad_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_point_quad_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pt</desc_parameter><desc_parameter xml:space="preserve">quad_p1</desc_parameter><desc_parameter xml:space="preserve">quad_p2</desc_parameter><desc_parameter xml:space="preserve">quad_p3</desc_parameter><desc_parameter xml:space="preserve">quad_p4</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes 5 vectors (using only the x and y coordinates): one is the point and the next 4 define the quad,
                    only the x and y are used from the vectors. Returns 1 if the point is within the quad, otherwise 0.
                    Works only with convex quads without singular edges.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">pt</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">quad_p1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the quad</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">quad_p2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the quad</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">quad_p3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Third point of the quad</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">quad_p4</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Fourth point of the quad</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>int</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_point_tri()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_point_tri',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_point_tri" ids="mathutils.geometry.intersect_point_tri" module="mathutils.geometry" names="mathutils.geometry.intersect_point_tri"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_point_tri</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pt</desc_parameter><desc_parameter xml:space="preserve">tri_p1</desc_parameter><desc_parameter xml:space="preserve">tri_p2</desc_parameter><desc_parameter xml:space="preserve">tri_p3</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes 4 vectors: one is the point and the next 3 define the triangle.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">pt</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_p1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the triangle</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_p2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the triangle</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_p3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Third point of the triangle</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>Point on the triangles plane or None if its outside the triangle</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or None</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_point_tri_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_point_tri_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_point_tri_2d" ids="mathutils.geometry.intersect_point_tri_2d" module="mathutils.geometry" names="mathutils.geometry.intersect_point_tri_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_point_tri_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pt</desc_parameter><desc_parameter xml:space="preserve">tri_p1</desc_parameter><desc_parameter xml:space="preserve">tri_p2</desc_parameter><desc_parameter xml:space="preserve">tri_p3</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes 4 vectors (using only the x and y coordinates): one is the point and the next 3 define the triangle. Returns 1 if the point is within the triangle, otherwise 0.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">pt</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_p1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – First point of the triangle</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_p2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Second point of the triangle</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">tri_p3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Third point of the triangle</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>int</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_ray_tri()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_ray_tri',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_ray_tri" ids="mathutils.geometry.intersect_ray_tri" module="mathutils.geometry" names="mathutils.geometry.intersect_ray_tri"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_ray_tri</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">v1</desc_parameter><desc_parameter xml:space="preserve">v2</desc_parameter><desc_parameter xml:space="preserve">v3</desc_parameter><desc_parameter xml:space="preserve">ray</desc_parameter><desc_parameter xml:space="preserve">orig</desc_parameter><desc_parameter xml:space="preserve">clip=True</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the intersection between a ray and a triangle, if possible, returns None otherwise.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point1</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point2</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point3</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">ray</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Direction of the projection</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">orig</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Origin</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">clip</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) – When False, don’t restrict the intersection to the area of the triangle, use the infinite plane defined by the triangle.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>The point of intersection or None if no intersection is found</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference> or None</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'intersect_sphere_sphere_2d()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.intersect_sphere_sphere_2d',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="intersect_sphere_sphere_2d" ids="mathutils.geometry.intersect_sphere_sphere_2d" module="mathutils.geometry" names="mathutils.geometry.intersect_sphere_sphere_2d"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">intersect_sphere_sphere_2d</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">p_a</desc_parameter><desc_parameter xml:space="preserve">radius_a</desc_parameter><desc_parameter xml:space="preserve">p_b</desc_parameter><desc_parameter xml:space="preserve">radius_b</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns 2 points on between intersecting circles.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">p_a</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Center of the first circle</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">radius_a</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Radius of the first circle</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">p_b</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Center of the second circle</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">radius_b</literal_strong> (<literal_emphasis>float</literal_emphasis>) – Radius of the second circle</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>tuple of <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>’s or None when there is no intersection</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'normal()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.normal',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="normal" ids="mathutils.geometry.normal" module="mathutils.geometry" names="mathutils.geometry.normal"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">normal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">vectors</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the normal of a 3D polygon.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">vectors</literal_strong> (<literal_emphasis>sequence of 3</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>more 3d vector</literal_emphasis>) – Vectors to calculate normals with</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'points_in_planes()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.points_in_planes',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="points_in_planes" ids="mathutils.geometry.points_in_planes" module="mathutils.geometry" names="mathutils.geometry.points_in_planes"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">points_in_planes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">planes</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a list of points inside all planes given and a list of index values for the planes used.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">planes</literal_strong> (list of <reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – List of planes (4D vectors).</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>two lists, once containing the vertices inside the planes, another containing the plane indices used</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>pair of lists</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'tessellate_polygon()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.tessellate_polygon',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="tessellate_polygon" ids="mathutils.geometry.tessellate_polygon" module="mathutils.geometry" names="mathutils.geometry.tessellate_polygon"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">tessellate_polygon</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">veclist_list</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Takes a list of polylines (each point a vector) and returns the point indices for a polyline filled with triangles.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">veclist_list</literal_strong> – list of polylines</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'volume_tetrahedron()\ (in\ module\ mathutils.geometry)',\ u'mathutils.geometry.volume_tetrahedron',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="volume_tetrahedron" ids="mathutils.geometry.volume_tetrahedron" module="mathutils.geometry" names="mathutils.geometry.volume_tetrahedron"><desc_addname xml:space="preserve">mathutils.geometry.</desc_addname><desc_name xml:space="preserve">volume_tetrahedron</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">v1</desc_parameter><desc_parameter xml:space="preserve">v2</desc_parameter><desc_parameter xml:space="preserve">v3</desc_parameter><desc_parameter xml:space="preserve">v4</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return the volume formed by a tetrahedron (points can be in any order).</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v1</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point1</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v2</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point2</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v3</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point3</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">v4</literal_strong> (<reference internal="True" reftitle="mathutils.Vector" refuri="mathutils#mathutils.Vector"><literal classes="xref py py-class">mathutils.Vector</literal></reference>) – Point4</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>float</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
