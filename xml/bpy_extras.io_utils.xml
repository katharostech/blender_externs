<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy_extras.io_utils.rst">
    <section ids="module-bpy_extras.io_utils bpy-extras-submodule-bpy-extras-io-utils" names="bpy_extras\ submodule\ (bpy_extras.io_utils)">
        <title>bpy_extras submodule (bpy_extras.io_utils)</title>
        <index entries="['single',\ u'bpy_extras.io_utils\ (module)',\ u'module-bpy_extras.io_utils',\ '',\ None]"></index>
        <index entries="['single',\ u'orientation_helper()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.orientation_helper',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="orientation_helper" ids="bpy_extras.io_utils.orientation_helper" module="bpy_extras.io_utils" names="bpy_extras.io_utils.orientation_helper"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">orientation_helper</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">axis_forward='Y'</desc_parameter><desc_parameter xml:space="preserve">axis_up='Z'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>A decorator for import/export classes, generating properties needed by the axis conversion system and IO helpers,
                    with specified default values (axes).</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'axis_conversion()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.axis_conversion',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="axis_conversion" ids="bpy_extras.io_utils.axis_conversion" module="bpy_extras.io_utils" names="bpy_extras.io_utils.axis_conversion"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">axis_conversion</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">from_forward='Y'</desc_parameter><desc_parameter xml:space="preserve">from_up='Z'</desc_parameter><desc_parameter xml:space="preserve">to_forward='Y'</desc_parameter><desc_parameter xml:space="preserve">to_up='Z'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Each argument us an axis in [‘X’, ‘Y’, ‘Z’, ‘-X’, ‘-Y’, ‘-Z’]
                    where the first 2 are a source and the second 2 are the target.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'axis_conversion_ensure()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.axis_conversion_ensure',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="axis_conversion_ensure" ids="bpy_extras.io_utils.axis_conversion_ensure" module="bpy_extras.io_utils" names="bpy_extras.io_utils.axis_conversion_ensure"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">axis_conversion_ensure</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">operator</desc_parameter><desc_parameter xml:space="preserve">forward_attr</desc_parameter><desc_parameter xml:space="preserve">up_attr</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Function to ensure an operator has valid axis conversion settings, intended
                    to be used from <reference internal="True" reftitle="bpy.types.Operator.check" refuri="bpy.types.Operator#bpy.types.Operator.check"><literal classes="xref py py-class">bpy.types.Operator.check</literal></reference>.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">operator</literal_strong> (<reference internal="True" reftitle="bpy.types.Operator" refuri="bpy.types.Operator#bpy.types.Operator"><literal classes="xref py py-class">bpy.types.Operator</literal></reference>) – the operator to access axis attributes from.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">forward_attr</literal_strong> (<literal_emphasis>string</literal_emphasis>) – attribute storing the forward axis</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">up_attr</literal_strong> (<literal_emphasis>string</literal_emphasis>) – attribute storing the up axis</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>True if the value was modified.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>boolean</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'create_derived_objects()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.create_derived_objects',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="create_derived_objects" ids="bpy_extras.io_utils.create_derived_objects" module="bpy_extras.io_utils" names="bpy_extras.io_utils.create_derived_objects"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">create_derived_objects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene</desc_parameter><desc_parameter xml:space="preserve">ob</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'free_derived_objects()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.free_derived_objects',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="free_derived_objects" ids="bpy_extras.io_utils.free_derived_objects" module="bpy_extras.io_utils" names="bpy_extras.io_utils.free_derived_objects"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">free_derived_objects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ob</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'unpack_list()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.unpack_list',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="unpack_list" ids="bpy_extras.io_utils.unpack_list" module="bpy_extras.io_utils" names="bpy_extras.io_utils.unpack_list"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">unpack_list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">list_of_tuples</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'unpack_face_list()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.unpack_face_list',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="unpack_face_list" ids="bpy_extras.io_utils.unpack_face_list" module="bpy_extras.io_utils" names="bpy_extras.io_utils.unpack_face_list"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">unpack_face_list</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">list_of_tuples</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
            </desc_content>
        </desc>
        <index entries="['single',\ u'path_reference()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.path_reference',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="path_reference" ids="bpy_extras.io_utils.path_reference" module="bpy_extras.io_utils" names="bpy_extras.io_utils.path_reference"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">path_reference</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filepath</desc_parameter><desc_parameter xml:space="preserve">base_src</desc_parameter><desc_parameter xml:space="preserve">base_dst</desc_parameter><desc_parameter xml:space="preserve">mode='AUTO'</desc_parameter><desc_parameter xml:space="preserve">copy_subdir=''</desc_parameter><desc_parameter xml:space="preserve">copy_set=None</desc_parameter><desc_parameter xml:space="preserve">library=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a filepath relative to a destination directory, for use with
                    exporters.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">filepath</literal_strong> (<literal_emphasis>string</literal_emphasis>) – the file path to return,
                                        supporting blenders relative ‘//’ prefix.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">base_src</literal_strong> (<literal_emphasis>string</literal_emphasis>) – the directory the <emphasis>filepath</emphasis> is relative too
                                        (normally the blend file).</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">base_dst</literal_strong> (<literal_emphasis>string</literal_emphasis>) – the directory the <emphasis>filepath</emphasis> will be referenced from
                                        (normally the export path).</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">mode</literal_strong> (<literal_emphasis>string</literal_emphasis>) – the method used get the path in
                                        [‘AUTO’, ‘ABSOLUTE’, ‘RELATIVE’, ‘MATCH’, ‘STRIP’, ‘COPY’]</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">copy_subdir</literal_strong> (<literal_emphasis>string</literal_emphasis>) – the subdirectory of <emphasis>base_dst</emphasis> to use when mode=’COPY’.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">copy_set</literal_strong> (<literal_emphasis>set</literal_emphasis>) – collect from/to pairs when mode=’COPY’,
                                        pass to <emphasis>path_reference_copy</emphasis> when exporting is done.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">library</literal_strong> (<reference internal="True" reftitle="bpy.types.Library" refuri="bpy.types.Library#bpy.types.Library"><literal classes="xref py py-class">bpy.types.Library</literal></reference> or None) – The library this path is relative to.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>the new filepath.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>string</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'path_reference_copy()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.path_reference_copy',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="path_reference_copy" ids="bpy_extras.io_utils.path_reference_copy" module="bpy_extras.io_utils" names="bpy_extras.io_utils.path_reference_copy"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">path_reference_copy</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">copy_set</desc_parameter><desc_parameter xml:space="preserve">report=&lt;built-in function print&gt;</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Execute copying files of path_reference</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">copy_set</literal_strong> (<literal_emphasis>set</literal_emphasis>) – set of (from, to) pairs to copy.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">report</literal_strong> (<literal_emphasis>function</literal_emphasis>) – function used for reporting warnings, takes a string argument.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'unique_name()\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.unique_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="unique_name" ids="bpy_extras.io_utils.unique_name" module="bpy_extras.io_utils" names="bpy_extras.io_utils.unique_name"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">unique_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key</desc_parameter><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">name_dict</desc_parameter><desc_parameter xml:space="preserve">name_max=-1</desc_parameter><desc_parameter xml:space="preserve">clean_func=None</desc_parameter><desc_parameter xml:space="preserve">sep='.'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Helper function for storing unique names which may have special characters
                    stripped and restricted to a maximum length.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">key</literal_strong> (any hashable object associated with the <emphasis>name</emphasis>.) – unique item this name belongs to, name_dict[key] will be reused
                                        when available.
                                        This can be the object, mesh, material, etc instance its self.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">name</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The name used to create a unique value in <emphasis>name_dict</emphasis>.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">name_dict</literal_strong> (<literal_emphasis>dict</literal_emphasis>) – This is used to cache namespace to ensure no collisions
                                        occur, this should be an empty dict initially and only modified by this
                                        function.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">clean_func</literal_strong> (<literal_emphasis>function</literal_emphasis>) – Function to call on <emphasis>name</emphasis> before creating a unique value.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">sep</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Separator to use when between the name and a number when a
                                        duplicate name is found.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'path_reference_mode\ (in\ module\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.path_reference_mode',\ '',\ None]"></index>
        <desc desctype="data" domain="py" noindex="False" objtype="data">
            <desc_signature class="" first="False" fullname="path_reference_mode" ids="bpy_extras.io_utils.path_reference_mode" module="bpy_extras.io_utils" names="bpy_extras.io_utils.path_reference_mode"><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">path_reference_mode</desc_name></desc_signature>
            <desc_content>
                <paragraph>constant value (&lt;built-in function EnumProperty&gt;, {‘name’: ‘Path Mode’, ‘description’: ‘Method used to reference paths’, ‘items’: ((‘AUTO’, ‘Auto’, ‘Use Relative paths with subdirectories only’), (‘ABSOLUTE’, ‘Absolute’, ‘Always write absolute paths’), (‘RELATIVE’, ‘Relative’, ‘Always write relative paths (where possible)’), (‘MATCH’, ‘Match’, ‘Match Absolute/Relative setting with input path’), (‘STRIP’, ‘Strip Path’, ‘Filename only’), (‘COPY’, ‘Copy’, ‘Copy the file to the destination path (or subdirectory)’)), ‘default’: ‘AUTO’, ‘attr’: ‘path_mode’})</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ExportHelper\ (class\ in\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.ExportHelper',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ExportHelper" ids="bpy_extras.io_utils.ExportHelper" module="bpy_extras.io_utils" names="bpy_extras.io_utils.ExportHelper"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">ExportHelper</desc_name></desc_signature>
            <desc_content>
                <index entries="['single',\ u'check()\ (bpy_extras.io_utils.ExportHelper\ method)',\ u'bpy_extras.io_utils.ExportHelper.check',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ExportHelper" first="False" fullname="ExportHelper.check" ids="bpy_extras.io_utils.ExportHelper.check" module="bpy_extras.io_utils" names="bpy_extras.io_utils.ExportHelper.check"><desc_name xml:space="preserve">check</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'invoke()\ (bpy_extras.io_utils.ExportHelper\ method)',\ u'bpy_extras.io_utils.ExportHelper.invoke',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ExportHelper" first="False" fullname="ExportHelper.invoke" ids="bpy_extras.io_utils.ExportHelper.invoke" module="bpy_extras.io_utils" names="bpy_extras.io_utils.ExportHelper.invoke"><desc_name xml:space="preserve">invoke</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">event</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ImportHelper\ (class\ in\ bpy_extras.io_utils)',\ u'bpy_extras.io_utils.ImportHelper',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ImportHelper" ids="bpy_extras.io_utils.ImportHelper" module="bpy_extras.io_utils" names="bpy_extras.io_utils.ImportHelper"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy_extras.io_utils.</desc_addname><desc_name xml:space="preserve">ImportHelper</desc_name></desc_signature>
            <desc_content>
                <index entries="['single',\ u'check()\ (bpy_extras.io_utils.ImportHelper\ method)',\ u'bpy_extras.io_utils.ImportHelper.check',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ImportHelper" first="False" fullname="ImportHelper.check" ids="bpy_extras.io_utils.ImportHelper.check" module="bpy_extras.io_utils" names="bpy_extras.io_utils.ImportHelper.check"><desc_name xml:space="preserve">check</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'invoke()\ (bpy_extras.io_utils.ImportHelper\ method)',\ u'bpy_extras.io_utils.ImportHelper.invoke',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ImportHelper" first="False" fullname="ImportHelper.invoke" ids="bpy_extras.io_utils.ImportHelper.invoke" module="bpy_extras.io_utils" names="bpy_extras.io_utils.ImportHelper.invoke"><desc_name xml:space="preserve">invoke</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">event</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
    </section>
</document>
