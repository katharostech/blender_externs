<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.NodeSocketStandard.rst">
    <section ids="module-bpy.types nodesocketstandard-nodesocket" names="nodesocketstandard(nodesocket)">
        <title>NodeSocketStandard(NodeSocket)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocket" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket"><literal classes="xref py py-class">NodeSocket</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.NodeSocketBool" refuri="bpy.types.NodeSocketBool#bpy.types.NodeSocketBool"><literal classes="xref py py-class">NodeSocketBool</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketColor" refuri="bpy.types.NodeSocketColor#bpy.types.NodeSocketColor"><literal classes="xref py py-class">NodeSocketColor</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketFloat" refuri="bpy.types.NodeSocketFloat#bpy.types.NodeSocketFloat"><literal classes="xref py py-class">NodeSocketFloat</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketFloatAngle" refuri="bpy.types.NodeSocketFloatAngle#bpy.types.NodeSocketFloatAngle"><literal classes="xref py py-class">NodeSocketFloatAngle</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketFloatFactor" refuri="bpy.types.NodeSocketFloatFactor#bpy.types.NodeSocketFloatFactor"><literal classes="xref py py-class">NodeSocketFloatFactor</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketFloatPercentage" refuri="bpy.types.NodeSocketFloatPercentage#bpy.types.NodeSocketFloatPercentage"><literal classes="xref py py-class">NodeSocketFloatPercentage</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketFloatTime" refuri="bpy.types.NodeSocketFloatTime#bpy.types.NodeSocketFloatTime"><literal classes="xref py py-class">NodeSocketFloatTime</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketFloatUnsigned" refuri="bpy.types.NodeSocketFloatUnsigned#bpy.types.NodeSocketFloatUnsigned"><literal classes="xref py py-class">NodeSocketFloatUnsigned</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketInt" refuri="bpy.types.NodeSocketInt#bpy.types.NodeSocketInt"><literal classes="xref py py-class">NodeSocketInt</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketIntFactor" refuri="bpy.types.NodeSocketIntFactor#bpy.types.NodeSocketIntFactor"><literal classes="xref py py-class">NodeSocketIntFactor</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketIntPercentage" refuri="bpy.types.NodeSocketIntPercentage#bpy.types.NodeSocketIntPercentage"><literal classes="xref py py-class">NodeSocketIntPercentage</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketIntUnsigned" refuri="bpy.types.NodeSocketIntUnsigned#bpy.types.NodeSocketIntUnsigned"><literal classes="xref py py-class">NodeSocketIntUnsigned</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketShader" refuri="bpy.types.NodeSocketShader#bpy.types.NodeSocketShader"><literal classes="xref py py-class">NodeSocketShader</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketString" refuri="bpy.types.NodeSocketString#bpy.types.NodeSocketString"><literal classes="xref py py-class">NodeSocketString</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVector" refuri="bpy.types.NodeSocketVector#bpy.types.NodeSocketVector"><literal classes="xref py py-class">NodeSocketVector</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVectorAcceleration" refuri="bpy.types.NodeSocketVectorAcceleration#bpy.types.NodeSocketVectorAcceleration"><literal classes="xref py py-class">NodeSocketVectorAcceleration</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVectorDirection" refuri="bpy.types.NodeSocketVectorDirection#bpy.types.NodeSocketVectorDirection"><literal classes="xref py py-class">NodeSocketVectorDirection</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVectorEuler" refuri="bpy.types.NodeSocketVectorEuler#bpy.types.NodeSocketVectorEuler"><literal classes="xref py py-class">NodeSocketVectorEuler</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVectorTranslation" refuri="bpy.types.NodeSocketVectorTranslation#bpy.types.NodeSocketVectorTranslation"><literal classes="xref py py-class">NodeSocketVectorTranslation</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVectorVelocity" refuri="bpy.types.NodeSocketVectorVelocity#bpy.types.NodeSocketVectorVelocity"><literal classes="xref py py-class">NodeSocketVectorVelocity</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVectorXYZ" refuri="bpy.types.NodeSocketVectorXYZ#bpy.types.NodeSocketVectorXYZ"><literal classes="xref py py-class">NodeSocketVectorXYZ</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeSocketVirtual" refuri="bpy.types.NodeSocketVirtual#bpy.types.NodeSocketVirtual"><literal classes="xref py py-class">NodeSocketVirtual</literal></reference></paragraph>
        <index entries="['single',\ u'NodeSocketStandard\ (class\ in\ bpy.types)',\ u'bpy.types.NodeSocketStandard',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="NodeSocketStandard" ids="bpy.types.NodeSocketStandard" module="bpy.types" names="bpy.types.NodeSocketStandard"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">NodeSocketStandard</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">NodeSocket</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ u'NodeSocketStandard.links\ (in\ module\ bpy.types)',\ u'bpy.types.NodeSocketStandard.links',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="NodeSocketStandard" first="False" fullname="NodeSocketStandard.links" ids="bpy.types.NodeSocketStandard.links" module="bpy.types" names="bpy.types.NodeSocketStandard.links"><desc_name xml:space="preserve">links</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>List of node links from or to this socket. Warning: takes O(len(nodetree.links)) time.
                            (readonly)</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw()\ (bpy.types.NodeSocketStandard\ method)',\ u'bpy.types.NodeSocketStandard.draw',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NodeSocketStandard" first="False" fullname="NodeSocketStandard.draw" ids="bpy.types.NodeSocketStandard.draw" module="bpy.types" names="bpy.types.NodeSocketStandard.draw"><desc_name xml:space="preserve">draw</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">layout</desc_parameter><desc_parameter xml:space="preserve">node</desc_parameter><desc_parameter xml:space="preserve">text</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Draw socket</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">layout</literal_strong> (<reference internal="True" reftitle="bpy.types.UILayout" refuri="bpy.types.UILayout#bpy.types.UILayout"><literal classes="xref py py-class">UILayout</literal></reference>, (never None)) – Layout, Layout in the UI</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">node</literal_strong> (<reference internal="True" reftitle="bpy.types.Node" refuri="bpy.types.Node#bpy.types.Node"><literal classes="xref py py-class">Node</literal></reference>, (never None)) – Node, Node the socket belongs to</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">text</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Text, Text label to draw alongside properties</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_color()\ (bpy.types.NodeSocketStandard\ method)',\ u'bpy.types.NodeSocketStandard.draw_color',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="NodeSocketStandard" first="False" fullname="NodeSocketStandard.draw_color" ids="bpy.types.NodeSocketStandard.draw_color" module="bpy.types" names="bpy.types.NodeSocketStandard.draw_color"><desc_name xml:space="preserve">draw_color</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">node</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Color of the socket icon</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">node</literal_strong> (<reference internal="True" reftitle="bpy.types.Node" refuri="bpy.types.Node#bpy.types.Node"><literal classes="xref py py-class">Node</literal></reference>, (never None)) – Node, Node the socket belongs to</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Color</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float array of 4 items in [0, 1]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.NodeSocketStandard\ class\ method)',\ u'bpy.types.NodeSocketStandard.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="NodeSocketStandard" first="False" fullname="NodeSocketStandard.bl_rna_get_subclass" ids="bpy.types.NodeSocketStandard.bl_rna_get_subclass" module="bpy.types" names="bpy.types.NodeSocketStandard.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.NodeSocketStandard\ class\ method)',\ u'bpy.types.NodeSocketStandard.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="NodeSocketStandard" first="False" fullname="NodeSocketStandard.bl_rna_get_subclass_py" ids="bpy.types.NodeSocketStandard.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.NodeSocketStandard.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.name" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.name"><literal classes="xref py py-class">NodeSocket.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.identifier" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.identifier"><literal classes="xref py py-class">NodeSocket.identifier</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.is_output" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.is_output"><literal classes="xref py py-class">NodeSocket.is_output</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.hide" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.hide"><literal classes="xref py py-class">NodeSocket.hide</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.enabled" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.enabled"><literal classes="xref py py-class">NodeSocket.enabled</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.link_limit" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.link_limit"><literal classes="xref py py-class">NodeSocket.link_limit</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.is_linked" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.is_linked"><literal classes="xref py py-class">NodeSocket.is_linked</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.show_expanded" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.show_expanded"><literal classes="xref py py-class">NodeSocket.show_expanded</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.hide_value" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.hide_value"><literal classes="xref py py-class">NodeSocket.hide_value</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.node" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.node"><literal classes="xref py py-class">NodeSocket.node</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.type" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.type"><literal classes="xref py py-class">NodeSocket.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.draw_shape" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.draw_shape"><literal classes="xref py py-class">NodeSocket.draw_shape</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.bl_idname" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.bl_idname"><literal classes="xref py py-class">NodeSocket.bl_idname</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.links" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.links"><literal classes="xref py py-class">NodeSocket.links</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.links" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.links"><literal classes="xref py py-class">NodeSocket.links</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.draw" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.draw"><literal classes="xref py py-class">NodeSocket.draw</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeSocket.draw_color" refuri="bpy.types.NodeSocket#bpy.types.NodeSocket.draw_color"><literal classes="xref py py-class">NodeSocket.draw_color</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
