<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.TexMapping.rst">
    <section ids="module-bpy.types texmapping-bpy-struct" names="texmapping(bpy_struct)">
        <title>TexMapping(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'TexMapping\ (class\ in\ bpy.types)',\ u'bpy.types.TexMapping',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="TexMapping" ids="bpy.types.TexMapping" module="bpy.types" names="bpy.types.TexMapping"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">TexMapping</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Texture coordinate mapping settings</paragraph>
                <index entries="['single',\ u'mapping\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.mapping',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.mapping" ids="bpy.types.TexMapping.mapping" module="bpy.types" names="bpy.types.TexMapping.mapping"><desc_name xml:space="preserve">mapping</desc_name></desc_signature>
                    <desc_content>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>FLAT</literal> Flat, Map X and Y coordinates directly.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CUBE</literal> Cube, Map using the normal vector.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TUBE</literal> Tube, Map with Z as central axis.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SPHERE</literal> Sphere, Map with Z as central axis.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘FLAT’, ‘CUBE’, ‘TUBE’, ‘SPHERE’], default ‘FLAT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mapping_x\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.mapping_x',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.mapping_x" ids="bpy.types.TexMapping.mapping_x" module="bpy.types" names="bpy.types.TexMapping.mapping_x"><desc_name xml:space="preserve">mapping_x</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘X’, ‘Y’, ‘Z’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mapping_y\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.mapping_y',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.mapping_y" ids="bpy.types.TexMapping.mapping_y" module="bpy.types" names="bpy.types.TexMapping.mapping_y"><desc_name xml:space="preserve">mapping_y</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘X’, ‘Y’, ‘Z’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mapping_z\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.mapping_z',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.mapping_z" ids="bpy.types.TexMapping.mapping_z" module="bpy.types" names="bpy.types.TexMapping.mapping_z"><desc_name xml:space="preserve">mapping_z</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘X’, ‘Y’, ‘Z’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'max\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.max" ids="bpy.types.TexMapping.max" module="bpy.types" names="bpy.types.TexMapping.max"><desc_name xml:space="preserve">max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum value for clipping</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'min\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.min" ids="bpy.types.TexMapping.min" module="bpy.types" names="bpy.types.TexMapping.min"><desc_name xml:space="preserve">min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Minimum value for clipping</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'rotation\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.rotation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.rotation" ids="bpy.types.TexMapping.rotation" module="bpy.types" names="bpy.types.TexMapping.rotation"><desc_name xml:space="preserve">rotation</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'scale\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.scale',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.scale" ids="bpy.types.TexMapping.scale" module="bpy.types" names="bpy.types.TexMapping.scale"><desc_name xml:space="preserve">scale</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'translation\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.translation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.translation" ids="bpy.types.TexMapping.translation" module="bpy.types" names="bpy.types.TexMapping.translation"><desc_name xml:space="preserve">translation</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_max\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.use_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.use_max" ids="bpy.types.TexMapping.use_max" module="bpy.types" names="bpy.types.TexMapping.use_max"><desc_name xml:space="preserve">use_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Whether to use maximum clipping value</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_min\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.use_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.use_min" ids="bpy.types.TexMapping.use_min" module="bpy.types" names="bpy.types.TexMapping.use_min"><desc_name xml:space="preserve">use_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Whether to use minimum clipping value</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'vector_type\ (bpy.types.TexMapping\ attribute)',\ u'bpy.types.TexMapping.vector_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.vector_type" ids="bpy.types.TexMapping.vector_type" module="bpy.types" names="bpy.types.TexMapping.vector_type"><desc_name xml:space="preserve">vector_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Type of vector that the mapping transforms</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>TEXTURE</literal> Texture, Transform a texture by inverse mapping the texture coordinate.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>POINT</literal> Point, Transform a point.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VECTOR</literal> Vector, Transform a direction vector.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NORMAL</literal> Normal, Transform a normal vector with unit length.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘TEXTURE’, ‘POINT’, ‘VECTOR’, ‘NORMAL’], default ‘POINT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.TexMapping\ class\ method)',\ u'bpy.types.TexMapping.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.bl_rna_get_subclass" ids="bpy.types.TexMapping.bl_rna_get_subclass" module="bpy.types" names="bpy.types.TexMapping.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.TexMapping\ class\ method)',\ u'bpy.types.TexMapping.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="TexMapping" first="False" fullname="TexMapping.bl_rna_get_subclass_py" ids="bpy.types.TexMapping.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.TexMapping.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexBrick.texture_mapping" refuri="bpy.types.ShaderNodeTexBrick#bpy.types.ShaderNodeTexBrick.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexBrick.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexChecker.texture_mapping" refuri="bpy.types.ShaderNodeTexChecker#bpy.types.ShaderNodeTexChecker.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexChecker.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexEnvironment.texture_mapping" refuri="bpy.types.ShaderNodeTexEnvironment#bpy.types.ShaderNodeTexEnvironment.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexEnvironment.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexGradient.texture_mapping" refuri="bpy.types.ShaderNodeTexGradient#bpy.types.ShaderNodeTexGradient.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexGradient.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexImage.texture_mapping" refuri="bpy.types.ShaderNodeTexImage#bpy.types.ShaderNodeTexImage.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexImage.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexMagic.texture_mapping" refuri="bpy.types.ShaderNodeTexMagic#bpy.types.ShaderNodeTexMagic.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexMagic.texture_mapping</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexMusgrave.texture_mapping" refuri="bpy.types.ShaderNodeTexMusgrave#bpy.types.ShaderNodeTexMusgrave.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexMusgrave.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexNoise.texture_mapping" refuri="bpy.types.ShaderNodeTexNoise#bpy.types.ShaderNodeTexNoise.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexNoise.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexSky.texture_mapping" refuri="bpy.types.ShaderNodeTexSky#bpy.types.ShaderNodeTexSky.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexSky.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexVoronoi.texture_mapping" refuri="bpy.types.ShaderNodeTexVoronoi#bpy.types.ShaderNodeTexVoronoi.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexVoronoi.texture_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexWave.texture_mapping" refuri="bpy.types.ShaderNodeTexWave#bpy.types.ShaderNodeTexWave.texture_mapping"><literal classes="xref py py-class">ShaderNodeTexWave.texture_mapping</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
