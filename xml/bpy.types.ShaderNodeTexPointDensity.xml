<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ShaderNodeTexPointDensity.rst">
    <section ids="module-bpy.types shadernodetexpointdensity-shadernode" names="shadernodetexpointdensity(shadernode)">
        <title>ShaderNodeTexPointDensity(ShaderNode)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.Node" refuri="bpy.types.Node#bpy.types.Node"><literal classes="xref py py-class">Node</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeInternal" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal"><literal classes="xref py py-class">NodeInternal</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNode" refuri="bpy.types.ShaderNode#bpy.types.ShaderNode"><literal classes="xref py py-class">ShaderNode</literal></reference></paragraph>
        <index entries="['single',\ u'ShaderNodeTexPointDensity\ (class\ in\ bpy.types)',\ u'bpy.types.ShaderNodeTexPointDensity',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ShaderNodeTexPointDensity" ids="bpy.types.ShaderNodeTexPointDensity" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ShaderNodeTexPointDensity</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ShaderNode</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ u'interpolation\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.interpolation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.interpolation" ids="bpy.types.ShaderNodeTexPointDensity.interpolation" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.interpolation"><desc_name xml:space="preserve">interpolation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Texture interpolation</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>Closest</literal> Closest, No interpolation (sample closest texel).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>Linear</literal> Linear, Linear interpolation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>Cubic</literal> Cubic, Cubic interpolation.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘Closest’, ‘Linear’, ‘Cubic’], default ‘Linear’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'object\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.object',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.object" ids="bpy.types.ShaderNodeTexPointDensity.object" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.object"><desc_name xml:space="preserve">object</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Object to take point data from</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'particle_color_source\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.particle_color_source',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.particle_color_source" ids="bpy.types.ShaderNodeTexPointDensity.particle_color_source" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.particle_color_source"><desc_name xml:space="preserve">particle_color_source</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Data to derive color results from</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>PARTICLE_AGE</literal> Particle Age, Lifetime mapped as 0.0 - 1.0 intensity.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PARTICLE_SPEED</literal> Particle Speed, Particle speed (absolute magnitude of velocity) mapped as 0.0-1.0 intensity.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PARTICLE_VELOCITY</literal> Particle Velocity, XYZ velocity mapped to RGB colors.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘PARTICLE_AGE’, ‘PARTICLE_SPEED’, ‘PARTICLE_VELOCITY’], default ‘PARTICLE_AGE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'particle_system\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.particle_system',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.particle_system" ids="bpy.types.ShaderNodeTexPointDensity.particle_system" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.particle_system"><desc_name xml:space="preserve">particle_system</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Particle System to render as points</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ParticleSystem" refuri="bpy.types.ParticleSystem#bpy.types.ParticleSystem"><literal classes="xref py py-class">ParticleSystem</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'point_source\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.point_source',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.point_source" ids="bpy.types.ShaderNodeTexPointDensity.point_source" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.point_source"><desc_name xml:space="preserve">point_source</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Point data to use as renderable point density</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>PARTICLE_SYSTEM</literal> Particle System, Generate point density from a particle system.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OBJECT</literal> Object Vertices, Generate point density from an object’s vertices.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘PARTICLE_SYSTEM’, ‘OBJECT’], default ‘PARTICLE_SYSTEM’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'radius\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.radius',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.radius" ids="bpy.types.ShaderNodeTexPointDensity.radius" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.radius"><desc_name xml:space="preserve">radius</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Radius from the shaded sample to look for points within</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0.001, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'resolution\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.resolution',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.resolution" ids="bpy.types.ShaderNodeTexPointDensity.resolution" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.resolution"><desc_name xml:space="preserve">resolution</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Resolution used by the texture holding the point density</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 32768], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'space\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.space',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.space" ids="bpy.types.ShaderNodeTexPointDensity.space" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.space"><desc_name xml:space="preserve">space</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Coordinate system to calculate voxels in</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘OBJECT’, ‘WORLD’], default ‘OBJECT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'vertex_attribute_name\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.vertex_attribute_name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.vertex_attribute_name" ids="bpy.types.ShaderNodeTexPointDensity.vertex_attribute_name" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.vertex_attribute_name"><desc_name xml:space="preserve">vertex_attribute_name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Vertex attribute to use for color</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'vertex_color_source\ (bpy.types.ShaderNodeTexPointDensity\ attribute)',\ u'bpy.types.ShaderNodeTexPointDensity.vertex_color_source',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.vertex_color_source" ids="bpy.types.ShaderNodeTexPointDensity.vertex_color_source" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.vertex_color_source"><desc_name xml:space="preserve">vertex_color_source</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Data to derive color results from</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>VERTEX_COLOR</literal> Vertex Color, Vertex color layer.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VERTEX_WEIGHT</literal> Vertex Weight, Vertex group weight.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VERTEX_NORMAL</literal> Vertex Normal, XYZ normal vector mapped to RGB colors.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘VERTEX_COLOR’, ‘VERTEX_WEIGHT’, ‘VERTEX_NORMAL’], default ‘VERTEX_COLOR’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'is_registered_node_type()\ (bpy.types.ShaderNodeTexPointDensity\ class\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.is_registered_node_type',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.is_registered_node_type" ids="bpy.types.ShaderNodeTexPointDensity.is_registered_node_type" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.is_registered_node_type"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">is_registered_node_type</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>True if a registered node type</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Result</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'input_template()\ (bpy.types.ShaderNodeTexPointDensity\ class\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.input_template',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.input_template" ids="bpy.types.ShaderNodeTexPointDensity.input_template" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.input_template"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">input_template</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">index</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Input socket template</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">index</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Index</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>result</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.NodeInternalSocketTemplate" refuri="bpy.types.NodeInternalSocketTemplate#bpy.types.NodeInternalSocketTemplate"><literal classes="xref py py-class">NodeInternalSocketTemplate</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'output_template()\ (bpy.types.ShaderNodeTexPointDensity\ class\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.output_template',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.output_template" ids="bpy.types.ShaderNodeTexPointDensity.output_template" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.output_template"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">output_template</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">index</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Output socket template</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">index</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Index</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>result</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.NodeInternalSocketTemplate" refuri="bpy.types.NodeInternalSocketTemplate#bpy.types.NodeInternalSocketTemplate"><literal classes="xref py py-class">NodeInternalSocketTemplate</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'cache_point_density()\ (bpy.types.ShaderNodeTexPointDensity\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.cache_point_density',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.cache_point_density" ids="bpy.types.ShaderNodeTexPointDensity.cache_point_density" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.cache_point_density"><desc_name xml:space="preserve">cache_point_density</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Cache point density data for later calculation</paragraph>
                        <field_list>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'calc_point_density()\ (bpy.types.ShaderNodeTexPointDensity\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.calc_point_density',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.calc_point_density" ids="bpy.types.ShaderNodeTexPointDensity.calc_point_density" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.calc_point_density"><desc_name xml:space="preserve">calc_point_density</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Calculate point density</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>RGBA Values</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float array of 1 items in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'calc_point_density_minmax()\ (bpy.types.ShaderNodeTexPointDensity\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.calc_point_density_minmax',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.calc_point_density_minmax" ids="bpy.types.ShaderNodeTexPointDensity.calc_point_density_minmax" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.calc_point_density_minmax"><desc_name xml:space="preserve">calc_point_density_minmax</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Calculate point density</paragraph>
                        <field_list>
                            <field>
                                <field_name>Return (min, max)</field_name>
                                <field_body>
                                    <paragraph><title_reference>min</title_reference>, min, float array of 3 items in [-inf, inf]</paragraph>
                                    <paragraph><title_reference>max</title_reference>, max, float array of 3 items in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ShaderNodeTexPointDensity\ class\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.bl_rna_get_subclass" ids="bpy.types.ShaderNodeTexPointDensity.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ShaderNodeTexPointDensity\ class\ method)',\ u'bpy.types.ShaderNodeTexPointDensity.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNodeTexPointDensity" first="False" fullname="ShaderNodeTexPointDensity.bl_rna_get_subclass_py" ids="bpy.types.ShaderNodeTexPointDensity.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ShaderNodeTexPointDensity.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.type" refuri="bpy.types.Node#bpy.types.Node.type"><literal classes="xref py py-class">Node.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.location" refuri="bpy.types.Node#bpy.types.Node.location"><literal classes="xref py py-class">Node.location</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.width" refuri="bpy.types.Node#bpy.types.Node.width"><literal classes="xref py py-class">Node.width</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.width_hidden" refuri="bpy.types.Node#bpy.types.Node.width_hidden"><literal classes="xref py py-class">Node.width_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.height" refuri="bpy.types.Node#bpy.types.Node.height"><literal classes="xref py py-class">Node.height</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.dimensions" refuri="bpy.types.Node#bpy.types.Node.dimensions"><literal classes="xref py py-class">Node.dimensions</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.name" refuri="bpy.types.Node#bpy.types.Node.name"><literal classes="xref py py-class">Node.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.label" refuri="bpy.types.Node#bpy.types.Node.label"><literal classes="xref py py-class">Node.label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.inputs" refuri="bpy.types.Node#bpy.types.Node.inputs"><literal classes="xref py py-class">Node.inputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.outputs" refuri="bpy.types.Node#bpy.types.Node.outputs"><literal classes="xref py py-class">Node.outputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.internal_links" refuri="bpy.types.Node#bpy.types.Node.internal_links"><literal classes="xref py py-class">Node.internal_links</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.parent" refuri="bpy.types.Node#bpy.types.Node.parent"><literal classes="xref py py-class">Node.parent</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.use_custom_color" refuri="bpy.types.Node#bpy.types.Node.use_custom_color"><literal classes="xref py py-class">Node.use_custom_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.color" refuri="bpy.types.Node#bpy.types.Node.color"><literal classes="xref py py-class">Node.color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.select" refuri="bpy.types.Node#bpy.types.Node.select"><literal classes="xref py py-class">Node.select</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_options" refuri="bpy.types.Node#bpy.types.Node.show_options"><literal classes="xref py py-class">Node.show_options</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_preview" refuri="bpy.types.Node#bpy.types.Node.show_preview"><literal classes="xref py py-class">Node.show_preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.hide" refuri="bpy.types.Node#bpy.types.Node.hide"><literal classes="xref py py-class">Node.hide</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.mute" refuri="bpy.types.Node#bpy.types.Node.mute"><literal classes="xref py py-class">Node.mute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.show_texture" refuri="bpy.types.Node#bpy.types.Node.show_texture"><literal classes="xref py py-class">Node.show_texture</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_idname" refuri="bpy.types.Node#bpy.types.Node.bl_idname"><literal classes="xref py py-class">Node.bl_idname</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_label" refuri="bpy.types.Node#bpy.types.Node.bl_label"><literal classes="xref py py-class">Node.bl_label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_description" refuri="bpy.types.Node#bpy.types.Node.bl_description"><literal classes="xref py py-class">Node.bl_description</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_icon" refuri="bpy.types.Node#bpy.types.Node.bl_icon"><literal classes="xref py py-class">Node.bl_icon</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_static_type" refuri="bpy.types.Node#bpy.types.Node.bl_static_type"><literal classes="xref py py-class">Node.bl_static_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_default" refuri="bpy.types.Node#bpy.types.Node.bl_width_default"><literal classes="xref py py-class">Node.bl_width_default</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_min" refuri="bpy.types.Node#bpy.types.Node.bl_width_min"><literal classes="xref py py-class">Node.bl_width_min</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_width_max" refuri="bpy.types.Node#bpy.types.Node.bl_width_max"><literal classes="xref py py-class">Node.bl_width_max</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_default" refuri="bpy.types.Node#bpy.types.Node.bl_height_default"><literal classes="xref py py-class">Node.bl_height_default</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_min" refuri="bpy.types.Node#bpy.types.Node.bl_height_min"><literal classes="xref py py-class">Node.bl_height_min</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.bl_height_max" refuri="bpy.types.Node#bpy.types.Node.bl_height_max"><literal classes="xref py py-class">Node.bl_height_max</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.socket_value_update" refuri="bpy.types.Node#bpy.types.Node.socket_value_update"><literal classes="xref py py-class">Node.socket_value_update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.is_registered_node_type" refuri="bpy.types.Node#bpy.types.Node.is_registered_node_type"><literal classes="xref py py-class">Node.is_registered_node_type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll" refuri="bpy.types.Node#bpy.types.Node.poll"><literal classes="xref py py-class">Node.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll_instance" refuri="bpy.types.Node#bpy.types.Node.poll_instance"><literal classes="xref py py-class">Node.poll_instance</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.update" refuri="bpy.types.Node#bpy.types.Node.update"><literal classes="xref py py-class">Node.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.insert_link" refuri="bpy.types.Node#bpy.types.Node.insert_link"><literal classes="xref py py-class">Node.insert_link</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.init" refuri="bpy.types.Node#bpy.types.Node.init"><literal classes="xref py py-class">Node.init</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.copy" refuri="bpy.types.Node#bpy.types.Node.copy"><literal classes="xref py py-class">Node.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.free" refuri="bpy.types.Node#bpy.types.Node.free"><literal classes="xref py py-class">Node.free</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons" refuri="bpy.types.Node#bpy.types.Node.draw_buttons"><literal classes="xref py py-class">Node.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_buttons_ext" refuri="bpy.types.Node#bpy.types.Node.draw_buttons_ext"><literal classes="xref py py-class">Node.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.draw_label" refuri="bpy.types.Node#bpy.types.Node.draw_label"><literal classes="xref py py-class">Node.draw_label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Node.poll" refuri="bpy.types.Node#bpy.types.Node.poll"><literal classes="xref py py-class">Node.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll"><literal classes="xref py py-class">NodeInternal.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll_instance" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll_instance"><literal classes="xref py py-class">NodeInternal.poll_instance</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.update" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.update"><literal classes="xref py py-class">NodeInternal.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons"><literal classes="xref py py-class">NodeInternal.draw_buttons</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.draw_buttons_ext" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.draw_buttons_ext"><literal classes="xref py py-class">NodeInternal.draw_buttons_ext</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><literal classes="xref py py-class">ShaderNode.poll</literal></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
