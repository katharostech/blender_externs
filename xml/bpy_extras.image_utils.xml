<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy_extras.image_utils.rst">
    <section ids="module-bpy_extras.image_utils bpy-extras-submodule-bpy-extras-image-utils" names="bpy_extras\ submodule\ (bpy_extras.image_utils)">
        <title>bpy_extras submodule (bpy_extras.image_utils)</title>
        <index entries="['single',\ u'bpy_extras.image_utils\ (module)',\ u'module-bpy_extras.image_utils',\ '',\ None]"></index>
        <index entries="['single',\ u'load_image()\ (in\ module\ bpy_extras.image_utils)',\ u'bpy_extras.image_utils.load_image',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="load_image" ids="bpy_extras.image_utils.load_image" module="bpy_extras.image_utils" names="bpy_extras.image_utils.load_image"><desc_addname xml:space="preserve">bpy_extras.image_utils.</desc_addname><desc_name xml:space="preserve">load_image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">imagepath</desc_parameter><desc_parameter xml:space="preserve">dirname=''</desc_parameter><desc_parameter xml:space="preserve">place_holder=False</desc_parameter><desc_parameter xml:space="preserve">recursive=False</desc_parameter><desc_parameter xml:space="preserve">ncase_cmp=True</desc_parameter><desc_parameter xml:space="preserve">convert_callback=None</desc_parameter><desc_parameter xml:space="preserve">verbose=False</desc_parameter><desc_parameter xml:space="preserve">relpath=None</desc_parameter><desc_parameter xml:space="preserve">check_existing=False</desc_parameter><desc_parameter xml:space="preserve">force_reload=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return an image from the file path with options to search multiple paths
                    and return a placeholder if its not found.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">filepath</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The image filename
                                        If a path precedes it, this will be searched as well.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">dirname</literal_strong> (<literal_emphasis>string</literal_emphasis>) – is the directory where the image may be located - any file at
                                        the end will be ignored.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">place_holder</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – if True a new place holder image will be created.
                                        this is useful so later you can relink the image to its original data.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">recursive</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If True, directories will be recursively searched.
                                        Be careful with this if you have files in your root directory because
                                        it may take a long time.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">ncase_cmp</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – on non windows systems, find the correct case for the file.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">convert_callback</literal_strong> (<literal_emphasis>function</literal_emphasis>) – a function that takes an existing path and returns
                                        a new one. Use this when loading image formats blender may not support,
                                        the CONVERT_CALLBACK can take the path for a GIF (for example),
                                        convert it to a PNG and return the PNG’s path.
                                        For formats blender can read, simply return the path that is given.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">relpath</literal_strong> (<literal_emphasis>None</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>string</literal_emphasis>) – If not None, make the file relative to this path.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">check_existing</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If true,
                                        returns already loaded image datablock if possible
                                        (based on file path).</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">force_reload</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – If true,
                                        force reloading of image (only useful when <title_reference>check_existing</title_reference>
                                        is also enabled).</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>an image or None</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph><reference internal="True" reftitle="bpy.types.Image" refuri="bpy.types.Image#bpy.types.Image"><literal classes="xref py py-class">bpy.types.Image</literal></reference></paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
    </section>
</document>
