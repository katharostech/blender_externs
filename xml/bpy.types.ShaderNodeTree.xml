<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ShaderNodeTree.rst">
    <section ids="module-bpy.types shadernodetree-nodetree" names="shadernodetree(nodetree)">
        <title>ShaderNodeTree(NodeTree)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference>, <reference internal="True" reftitle="bpy.types.NodeTree" refuri="bpy.types.NodeTree#bpy.types.NodeTree"><literal classes="xref py py-class">NodeTree</literal></reference></paragraph>
        <index entries="['single',\ u'ShaderNodeTree\ (class\ in\ bpy.types)',\ u'bpy.types.ShaderNodeTree',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ShaderNodeTree" ids="bpy.types.ShaderNodeTree" module="bpy.types" names="bpy.types.ShaderNodeTree"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ShaderNodeTree</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">NodeTree</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Node tree consisting of linked nodes used for materials (and other shading data-blocks)</paragraph>
                <index entries="['single',\ u'get_output_node()\ (bpy.types.ShaderNodeTree\ method)',\ u'bpy.types.ShaderNodeTree.get_output_node',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShaderNodeTree" first="False" fullname="ShaderNodeTree.get_output_node" ids="bpy.types.ShaderNodeTree.get_output_node" module="bpy.types" names="bpy.types.ShaderNodeTree.get_output_node"><desc_name xml:space="preserve">get_output_node</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">target</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return active shader output node for the specified target</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">target</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'ALL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'EEVEE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'CYCLES'</literal_emphasis><literal_emphasis>]</literal_emphasis>) – <paragraph>Target</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>ALL</literal> All, Use shaders for all renderers and viewports, unless there exists a more specific output.</paragraph></list_item><list_item><paragraph><literal>EEVEE</literal> Eevee, Use shaders for Eevee renderer.</paragraph></list_item><list_item><paragraph><literal>CYCLES</literal> Cycles, Use shaders for Cycles renderer.</paragraph></list_item></bullet_list></paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Node</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ShaderNode" refuri="bpy.types.ShaderNode#bpy.types.ShaderNode"><literal classes="xref py py-class">ShaderNode</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ShaderNodeTree\ class\ method)',\ u'bpy.types.ShaderNodeTree.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNodeTree" first="False" fullname="ShaderNodeTree.bl_rna_get_subclass" ids="bpy.types.ShaderNodeTree.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ShaderNodeTree.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ShaderNodeTree\ class\ method)',\ u'bpy.types.ShaderNodeTree.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderNodeTree" first="False" fullname="ShaderNodeTree.bl_rna_get_subclass_py" ids="bpy.types.ShaderNodeTree.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ShaderNodeTree.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.view_center" refuri="bpy.types.NodeTree#bpy.types.NodeTree.view_center"><literal classes="xref py py-class">NodeTree.view_center</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.animation_data" refuri="bpy.types.NodeTree#bpy.types.NodeTree.animation_data"><literal classes="xref py py-class">NodeTree.animation_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.nodes" refuri="bpy.types.NodeTree#bpy.types.NodeTree.nodes"><literal classes="xref py py-class">NodeTree.nodes</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.links" refuri="bpy.types.NodeTree#bpy.types.NodeTree.links"><literal classes="xref py py-class">NodeTree.links</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.grease_pencil" refuri="bpy.types.NodeTree#bpy.types.NodeTree.grease_pencil"><literal classes="xref py py-class">NodeTree.grease_pencil</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.type" refuri="bpy.types.NodeTree#bpy.types.NodeTree.type"><literal classes="xref py py-class">NodeTree.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.inputs" refuri="bpy.types.NodeTree#bpy.types.NodeTree.inputs"><literal classes="xref py py-class">NodeTree.inputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.active_input" refuri="bpy.types.NodeTree#bpy.types.NodeTree.active_input"><literal classes="xref py py-class">NodeTree.active_input</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.outputs" refuri="bpy.types.NodeTree#bpy.types.NodeTree.outputs"><literal classes="xref py py-class">NodeTree.outputs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.active_output" refuri="bpy.types.NodeTree#bpy.types.NodeTree.active_output"><literal classes="xref py py-class">NodeTree.active_output</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.bl_idname" refuri="bpy.types.NodeTree#bpy.types.NodeTree.bl_idname"><literal classes="xref py py-class">NodeTree.bl_idname</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.bl_label" refuri="bpy.types.NodeTree#bpy.types.NodeTree.bl_label"><literal classes="xref py py-class">NodeTree.bl_label</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.bl_description" refuri="bpy.types.NodeTree#bpy.types.NodeTree.bl_description"><literal classes="xref py py-class">NodeTree.bl_description</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.bl_icon" refuri="bpy.types.NodeTree#bpy.types.NodeTree.bl_icon"><literal classes="xref py py-class">NodeTree.bl_icon</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.interface_update" refuri="bpy.types.NodeTree#bpy.types.NodeTree.interface_update"><literal classes="xref py py-class">NodeTree.interface_update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.poll" refuri="bpy.types.NodeTree#bpy.types.NodeTree.poll"><literal classes="xref py py-class">NodeTree.poll</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.update" refuri="bpy.types.NodeTree#bpy.types.NodeTree.update"><literal classes="xref py py-class">NodeTree.update</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTree.get_from_context" refuri="bpy.types.NodeTree#bpy.types.NodeTree.get_from_context"><literal classes="xref py py-class">NodeTree.get_from_context</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
