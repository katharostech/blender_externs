<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Keyframe.rst">
    <section ids="module-bpy.types keyframe-bpy-struct" names="keyframe(bpy_struct)">
        <title>Keyframe(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'Keyframe\ (class\ in\ bpy.types)',\ u'bpy.types.Keyframe',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Keyframe" ids="bpy.types.Keyframe" module="bpy.types" names="bpy.types.Keyframe"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Keyframe</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Bezier curve point with two handles defining a Keyframe on an F-Curve</paragraph>
                <index entries="['single',\ u'amplitude\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.amplitude',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.amplitude" ids="bpy.types.Keyframe.amplitude" module="bpy.types" names="bpy.types.Keyframe.amplitude"><desc_name xml:space="preserve">amplitude</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Amount to boost elastic bounces for ‘elastic’ easing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'back\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.back',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.back" ids="bpy.types.Keyframe.back" module="bpy.types" names="bpy.types.Keyframe.back"><desc_name xml:space="preserve">back</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Amount of overshoot for ‘back’ easing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'co\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.co',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.co" ids="bpy.types.Keyframe.co" module="bpy.types" names="bpy.types.Keyframe.co"><desc_name xml:space="preserve">co</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Coordinates of the control point</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [-inf, inf], default (0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'easing\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.easing',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.easing" ids="bpy.types.Keyframe.easing" module="bpy.types" names="bpy.types.Keyframe.easing"><desc_name xml:space="preserve">easing</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Which ends of the segment between this and the next keyframe easing interpolation is applied to</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>AUTO</literal> Automatic Easing, Easing type is chosen automatically based on what the type of interpolation used (e.g. ‘Ease In’ for transitional types, and ‘Ease Out’ for dynamic effects).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EASE_IN</literal> Ease In, Only on the end closest to the next keyframe.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EASE_OUT</literal> Ease Out, Only on the end closest to the first keyframe.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EASE_IN_OUT</literal> Ease In and Out, Segment between both keyframes.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘AUTO’, ‘EASE_IN’, ‘EASE_OUT’, ‘EASE_IN_OUT’], default ‘AUTO’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'handle_left\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.handle_left',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.handle_left" ids="bpy.types.Keyframe.handle_left" module="bpy.types" names="bpy.types.Keyframe.handle_left"><desc_name xml:space="preserve">handle_left</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Coordinates of the left handle (before the control point)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [-inf, inf], default (0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'handle_left_type\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.handle_left_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.handle_left_type" ids="bpy.types.Keyframe.handle_left_type" module="bpy.types" names="bpy.types.Keyframe.handle_left_type"><desc_name xml:space="preserve">handle_left_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Handle types</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>FREE</literal> Free, Completely independent manually set handle.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ALIGNED</literal> Aligned, Manually set handle with rotation locked together with its pair.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VECTOR</literal> Vector, Automatic handles that create straight lines.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUTO</literal> Automatic, Automatic handles that create smooth curves.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUTO_CLAMPED</literal> Auto Clamped, Automatic handles that create smooth curves which only change direction at keyframes.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘FREE’, ‘ALIGNED’, ‘VECTOR’, ‘AUTO’, ‘AUTO_CLAMPED’], default ‘FREE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'handle_right\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.handle_right',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.handle_right" ids="bpy.types.Keyframe.handle_right" module="bpy.types" names="bpy.types.Keyframe.handle_right"><desc_name xml:space="preserve">handle_right</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Coordinates of the right handle (after the control point)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [-inf, inf], default (0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'handle_right_type\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.handle_right_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.handle_right_type" ids="bpy.types.Keyframe.handle_right_type" module="bpy.types" names="bpy.types.Keyframe.handle_right_type"><desc_name xml:space="preserve">handle_right_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Handle types</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>FREE</literal> Free, Completely independent manually set handle.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ALIGNED</literal> Aligned, Manually set handle with rotation locked together with its pair.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VECTOR</literal> Vector, Automatic handles that create straight lines.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUTO</literal> Automatic, Automatic handles that create smooth curves.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUTO_CLAMPED</literal> Auto Clamped, Automatic handles that create smooth curves which only change direction at keyframes.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘FREE’, ‘ALIGNED’, ‘VECTOR’, ‘AUTO’, ‘AUTO_CLAMPED’], default ‘FREE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'interpolation\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.interpolation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.interpolation" ids="bpy.types.Keyframe.interpolation" module="bpy.types" names="bpy.types.Keyframe.interpolation"><desc_name xml:space="preserve">interpolation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Interpolation method to use for segment of the F-Curve from this Keyframe until the next Keyframe</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>CONSTANT</literal> Constant, No interpolation, value of A gets held until B is encountered.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LINEAR</literal> Linear, Straight-line interpolation between A and B (i.e. no ease in/out).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>BEZIER</literal> Bezier, Smooth interpolation between A and B, with some control over curve shape.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SINE</literal> Sinusoidal, Sinusoidal easing (weakest, almost linear but with a slight curvature).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>QUAD</literal> Quadratic, Quadratic easing.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CUBIC</literal> Cubic, Cubic easing.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>QUART</literal> Quartic, Quartic easing.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>QUINT</literal> Quintic, Quintic easing.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EXPO</literal> Exponential, Exponential easing (dramatic).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CIRC</literal> Circular, Circular easing (strongest and most dynamic).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>BACK</literal> Back, Cubic easing with overshoot and settle.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>BOUNCE</literal> Bounce, Exponentially decaying parabolic bounce, like when objects collide.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ELASTIC</literal> Elastic, Exponentially decaying sine wave, like an elastic band.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘CONSTANT’, ‘LINEAR’, ‘BEZIER’, ‘SINE’, ‘QUAD’, ‘CUBIC’, ‘QUART’, ‘QUINT’, ‘EXPO’, ‘CIRC’, ‘BACK’, ‘BOUNCE’, ‘ELASTIC’], default ‘CONSTANT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'period\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.period',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.period" ids="bpy.types.Keyframe.period" module="bpy.types" names="bpy.types.Keyframe.period"><desc_name xml:space="preserve">period</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Time between bounces for elastic easing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select_control_point\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.select_control_point',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.select_control_point" ids="bpy.types.Keyframe.select_control_point" module="bpy.types" names="bpy.types.Keyframe.select_control_point"><desc_name xml:space="preserve">select_control_point</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Control point selection status</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select_left_handle\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.select_left_handle',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.select_left_handle" ids="bpy.types.Keyframe.select_left_handle" module="bpy.types" names="bpy.types.Keyframe.select_left_handle"><desc_name xml:space="preserve">select_left_handle</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Left handle selection status</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select_right_handle\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.select_right_handle',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.select_right_handle" ids="bpy.types.Keyframe.select_right_handle" module="bpy.types" names="bpy.types.Keyframe.select_right_handle"><desc_name xml:space="preserve">select_right_handle</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Right handle selection status</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'type\ (bpy.types.Keyframe\ attribute)',\ u'bpy.types.Keyframe.type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.type" ids="bpy.types.Keyframe.type" module="bpy.types" names="bpy.types.Keyframe.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Type of keyframe (for visual purposes only)</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>KEYFRAME</literal> Keyframe, Normal keyframe - e.g. for key poses.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>BREAKDOWN</literal> Breakdown, A breakdown pose - e.g. for transitions between key poses.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MOVING_HOLD</literal> Moving Hold, A keyframe that is part of a moving hold.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EXTREME</literal> Extreme, An ‘extreme’ pose, or some other purpose as needed.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>JITTER</literal> Jitter, A filler or baked keyframe for keying on ones, or some other purpose as needed.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘KEYFRAME’, ‘BREAKDOWN’, ‘MOVING_HOLD’, ‘EXTREME’, ‘JITTER’], default ‘KEYFRAME’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Keyframe\ class\ method)',\ u'bpy.types.Keyframe.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.bl_rna_get_subclass" ids="bpy.types.Keyframe.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Keyframe.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Keyframe\ class\ method)',\ u'bpy.types.Keyframe.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Keyframe" first="False" fullname="Keyframe.bl_rna_get_subclass_py" ids="bpy.types.Keyframe.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Keyframe.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FCurve.keyframe_points" refuri="bpy.types.FCurve#bpy.types.FCurve.keyframe_points"><literal classes="xref py py-class">FCurve.keyframe_points</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FCurveKeyframePoints.insert" refuri="bpy.types.FCurveKeyframePoints#bpy.types.FCurveKeyframePoints.insert"><literal classes="xref py py-class">FCurveKeyframePoints.insert</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FCurveKeyframePoints.remove" refuri="bpy.types.FCurveKeyframePoints#bpy.types.FCurveKeyframePoints.remove"><literal classes="xref py py-class">FCurveKeyframePoints.remove</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
