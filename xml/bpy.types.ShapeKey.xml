<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ShapeKey.rst">
    <section ids="module-bpy.types shapekey-bpy-struct" names="shapekey(bpy_struct)">
        <title>ShapeKey(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'ShapeKey\ (class\ in\ bpy.types)',\ u'bpy.types.ShapeKey',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ShapeKey" ids="bpy.types.ShapeKey" module="bpy.types" names="bpy.types.ShapeKey"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ShapeKey</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Shape key in a shape keys data-block</paragraph>
                <index entries="['single',\ u'ShapeKey.data\ (in\ module\ bpy.types)',\ u'bpy.types.ShapeKey.data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.data" ids="bpy.types.ShapeKey.data" module="bpy.types" names="bpy.types.ShapeKey.data"><desc_name xml:space="preserve">data</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.UnknownType" refuri="bpy.types.UnknownType#bpy.types.UnknownType"><literal classes="xref py py-class">UnknownType</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ShapeKey.frame\ (in\ module\ bpy.types)',\ u'bpy.types.ShapeKey.frame',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.frame" ids="bpy.types.ShapeKey.frame" module="bpy.types" names="bpy.types.ShapeKey.frame"><desc_name xml:space="preserve">frame</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Frame for absolute keys</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf], default 0.0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'interpolation\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.interpolation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.interpolation" ids="bpy.types.ShapeKey.interpolation" module="bpy.types" names="bpy.types.ShapeKey.interpolation"><desc_name xml:space="preserve">interpolation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Interpolation type for absolute shape keys</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘KEY_LINEAR’, ‘KEY_CARDINAL’, ‘KEY_CATMULL_ROM’, ‘KEY_BSPLINE’], default ‘KEY_LINEAR’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mute\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.mute',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.mute" ids="bpy.types.ShapeKey.mute" module="bpy.types" names="bpy.types.ShapeKey.mute"><desc_name xml:space="preserve">mute</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Mute this shape key</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'name\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.name" ids="bpy.types.ShapeKey.name" module="bpy.types" names="bpy.types.ShapeKey.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Name of Shape Key</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'relative_key\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.relative_key',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.relative_key" ids="bpy.types.ShapeKey.relative_key" module="bpy.types" names="bpy.types.ShapeKey.relative_key"><desc_name xml:space="preserve">relative_key</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Shape used as a relative key</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" refid="bpy.types.ShapeKey" reftitle="bpy.types.ShapeKey"><literal classes="xref py py-class">ShapeKey</literal></reference>, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'slider_max\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.slider_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.slider_max" ids="bpy.types.ShapeKey.slider_max" module="bpy.types" names="bpy.types.ShapeKey.slider_max"><desc_name xml:space="preserve">slider_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum for slider</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-10, 10], default 1.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'slider_min\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.slider_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.slider_min" ids="bpy.types.ShapeKey.slider_min" module="bpy.types" names="bpy.types.ShapeKey.slider_min"><desc_name xml:space="preserve">slider_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Minimum for slider</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-10, 10], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'value\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.value',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.value" ids="bpy.types.ShapeKey.value" module="bpy.types" names="bpy.types.ShapeKey.value"><desc_name xml:space="preserve">value</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Value of shape key at the current frame</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'vertex_group\ (bpy.types.ShapeKey\ attribute)',\ u'bpy.types.ShapeKey.vertex_group',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.vertex_group" ids="bpy.types.ShapeKey.vertex_group" module="bpy.types" names="bpy.types.ShapeKey.vertex_group"><desc_name xml:space="preserve">vertex_group</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Vertex weight group, to blend with basis shape</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'normals_vertex_get()\ (bpy.types.ShapeKey\ method)',\ u'bpy.types.ShapeKey.normals_vertex_get',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.normals_vertex_get" ids="bpy.types.ShapeKey.normals_vertex_get" module="bpy.types" names="bpy.types.ShapeKey.normals_vertex_get"><desc_name xml:space="preserve">normals_vertex_get</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Compute local space vertices’ normals for this shape key</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>normals</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float in [-1, 1]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'normals_polygon_get()\ (bpy.types.ShapeKey\ method)',\ u'bpy.types.ShapeKey.normals_polygon_get',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.normals_polygon_get" ids="bpy.types.ShapeKey.normals_polygon_get" module="bpy.types" names="bpy.types.ShapeKey.normals_polygon_get"><desc_name xml:space="preserve">normals_polygon_get</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Compute local space faces’ normals for this shape key</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>normals</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float in [-1, 1]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'normals_split_get()\ (bpy.types.ShapeKey\ method)',\ u'bpy.types.ShapeKey.normals_split_get',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.normals_split_get" ids="bpy.types.ShapeKey.normals_split_get" module="bpy.types" names="bpy.types.ShapeKey.normals_split_get"><desc_name xml:space="preserve">normals_split_get</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Compute local space face corners’ normals for this shape key</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>normals</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float in [-1, 1]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ShapeKey\ class\ method)',\ u'bpy.types.ShapeKey.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.bl_rna_get_subclass" ids="bpy.types.ShapeKey.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ShapeKey.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ShapeKey\ class\ method)',\ u'bpy.types.ShapeKey.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShapeKey" first="False" fullname="ShapeKey.bl_rna_get_subclass_py" ids="bpy.types.ShapeKey.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ShapeKey.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ClothSettings.rest_shape_key" refuri="bpy.types.ClothSettings#bpy.types.ClothSettings.rest_shape_key"><literal classes="xref py py-class">ClothSettings.rest_shape_key</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Key.key_blocks" refuri="bpy.types.Key#bpy.types.Key.key_blocks"><literal classes="xref py py-class">Key.key_blocks</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Key.reference_key" refuri="bpy.types.Key#bpy.types.Key.reference_key"><literal classes="xref py py-class">Key.reference_key</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.active_shape_key" refuri="bpy.types.Object#bpy.types.Object.active_shape_key"><literal classes="xref py py-class">Object.active_shape_key</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.shape_key_add" refuri="bpy.types.Object#bpy.types.Object.shape_key_add"><literal classes="xref py py-class">Object.shape_key_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.shape_key_remove" refuri="bpy.types.Object#bpy.types.Object.shape_key_remove"><literal classes="xref py py-class">Object.shape_key_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.ShapeKey.relative_key" reftitle="bpy.types.ShapeKey.relative_key"><literal classes="xref py py-class">ShapeKey.relative_key</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
