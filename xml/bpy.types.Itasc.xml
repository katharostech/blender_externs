<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Itasc.rst">
    <section ids="module-bpy.types itasc-ikparam" names="itasc(ikparam)">
        <title>Itasc(IKParam)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.IKParam" refuri="bpy.types.IKParam#bpy.types.IKParam"><literal classes="xref py py-class">IKParam</literal></reference></paragraph>
        <index entries="['single',\ u'Itasc\ (class\ in\ bpy.types)',\ u'bpy.types.Itasc',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Itasc" ids="bpy.types.Itasc" module="bpy.types" names="bpy.types.Itasc"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Itasc</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">IKParam</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Parameters for the iTaSC IK solver</paragraph>
                <index entries="['single',\ u'damping_epsilon\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.damping_epsilon',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.damping_epsilon" ids="bpy.types.Itasc.damping_epsilon" module="bpy.types" names="bpy.types.Itasc.damping_epsilon"><desc_name xml:space="preserve">damping_epsilon</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Singular value under which damping is progressively applied (higher values=more stability, less reactivity - default=0.1)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'damping_max\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.damping_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.damping_max" ids="bpy.types.Itasc.damping_max" module="bpy.types" names="bpy.types.Itasc.damping_max"><desc_name xml:space="preserve">damping_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum damping coefficient when singular value is nearly 0 (higher values=more stability, less reactivity - default=0.5)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'feedback\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.feedback',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.feedback" ids="bpy.types.Itasc.feedback" module="bpy.types" names="bpy.types.Itasc.feedback"><desc_name xml:space="preserve">feedback</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Feedback coefficient for error correction, average response time is 1/feedback (default=20)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 100], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'iterations\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.iterations',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.iterations" ids="bpy.types.Itasc.iterations" module="bpy.types" names="bpy.types.Itasc.iterations"><desc_name xml:space="preserve">iterations</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum number of iterations for convergence in case of reiteration</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1000], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mode\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.mode" ids="bpy.types.Itasc.mode" module="bpy.types" names="bpy.types.Itasc.mode"><desc_name xml:space="preserve">mode</desc_name></desc_signature>
                    <desc_content>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>ANIMATION</literal> Animation, Stateless solver computing pose starting from current action and non-IK constraints.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SIMULATION</literal> Simulation, State-full solver running in real-time context and ignoring actions and non-IK constraints.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘ANIMATION’, ‘SIMULATION’], default ‘ANIMATION’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'precision\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.precision',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.precision" ids="bpy.types.Itasc.precision" module="bpy.types" names="bpy.types.Itasc.precision"><desc_name xml:space="preserve">precision</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Precision of convergence in case of reiteration</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 0.1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'reiteration_method\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.reiteration_method',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.reiteration_method" ids="bpy.types.Itasc.reiteration_method" module="bpy.types" names="bpy.types.Itasc.reiteration_method"><desc_name xml:space="preserve">reiteration_method</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Defines if the solver is allowed to reiterate (converge until precision is met) on none, first or all frames</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NEVER</literal> Never, The solver does not reiterate, not even on first frame (starts from rest pose).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INITIAL</literal> Initial, The solver reiterates (converges) on the first frame but not on subsequent frame.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ALWAYS</literal> Always, The solver reiterates (converges) on all frames.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NEVER’, ‘INITIAL’, ‘ALWAYS’], default ‘NEVER’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'solver\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.solver',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.solver" ids="bpy.types.Itasc.solver" module="bpy.types" names="bpy.types.Itasc.solver"><desc_name xml:space="preserve">solver</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Solving method selection: automatic damping or manual damping</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>SDLS</literal> SDLS, Selective Damped Least Square.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DLS</literal> DLS, Damped Least Square with Numerical Filtering.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘SDLS’, ‘DLS’], default ‘SDLS’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'step_count\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.step_count',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.step_count" ids="bpy.types.Itasc.step_count" module="bpy.types" names="bpy.types.Itasc.step_count"><desc_name xml:space="preserve">step_count</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Divide the frame interval into this many steps</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 50], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'step_max\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.step_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.step_max" ids="bpy.types.Itasc.step_max" module="bpy.types" names="bpy.types.Itasc.step_max"><desc_name xml:space="preserve">step_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Higher bound for timestep in second in case of automatic substeps</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'step_min\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.step_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.step_min" ids="bpy.types.Itasc.step_min" module="bpy.types" names="bpy.types.Itasc.step_min"><desc_name xml:space="preserve">step_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Lower bound for timestep in second in case of automatic substeps</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 0.1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_auto_step\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.use_auto_step',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.use_auto_step" ids="bpy.types.Itasc.use_auto_step" module="bpy.types" names="bpy.types.Itasc.use_auto_step"><desc_name xml:space="preserve">use_auto_step</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Automatically determine the optimal number of steps for best performance/accuracy trade off</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'velocity_max\ (bpy.types.Itasc\ attribute)',\ u'bpy.types.Itasc.velocity_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.velocity_max" ids="bpy.types.Itasc.velocity_max" module="bpy.types" names="bpy.types.Itasc.velocity_max"><desc_name xml:space="preserve">velocity_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum joint velocity in rad/s (default=50)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 100], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Itasc\ class\ method)',\ u'bpy.types.Itasc.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.bl_rna_get_subclass" ids="bpy.types.Itasc.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Itasc.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Itasc\ class\ method)',\ u'bpy.types.Itasc.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Itasc" first="False" fullname="Itasc.bl_rna_get_subclass_py" ids="bpy.types.Itasc.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Itasc.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.IKParam.ik_solver" refuri="bpy.types.IKParam#bpy.types.IKParam.ik_solver"><literal classes="xref py py-class">IKParam.ik_solver</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
