<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.FCurve.rst">
    <section ids="module-bpy.types fcurve-bpy-struct" names="fcurve(bpy_struct)">
        <title>FCurve(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'FCurve\ (class\ in\ bpy.types)',\ u'bpy.types.FCurve',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="FCurve" ids="bpy.types.FCurve" module="bpy.types" names="bpy.types.FCurve"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">FCurve</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>F-Curve defining values of a period of time</paragraph>
                <index entries="['single',\ u'array_index\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.array_index',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.array_index" ids="bpy.types.FCurve.array_index" module="bpy.types" names="bpy.types.FCurve.array_index"><desc_name xml:space="preserve">array_index</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Index to the specific property affected by F-Curve if applicable</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'auto_smoothing\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.auto_smoothing',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.auto_smoothing" ids="bpy.types.FCurve.auto_smoothing" module="bpy.types" names="bpy.types.FCurve.auto_smoothing"><desc_name xml:space="preserve">auto_smoothing</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Algorithm used to compute automatic handles</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NONE</literal> None, Auto handles only take adjacent keys into account (legacy mode).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CONT_ACCEL</literal> Continuous Acceleration, Auto handles are placed to avoid jumps in acceleration.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘CONT_ACCEL’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.color',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.color" ids="bpy.types.FCurve.color" module="bpy.types" names="bpy.types.FCurve.color"><desc_name xml:space="preserve">color</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Color of the F-Curve in the Graph Editor</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [0, 1], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color_mode\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.color_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.color_mode" ids="bpy.types.FCurve.color_mode" module="bpy.types" names="bpy.types.FCurve.color_mode"><desc_name xml:space="preserve">color_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Method used to determine color of F-Curve in Graph Editor</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>AUTO_RAINBOW</literal> Auto Rainbow, Cycle through the rainbow, trying to give each curve a unique color.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUTO_RGB</literal> Auto XYZ to RGB, Use axis colors for transform and color properties, and auto-rainbow for the rest.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUTO_YRGB</literal> Auto WXYZ to YRGB, Use axis colors for XYZ parts of transform, and yellow for the ‘W’ channel.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CUSTOM</literal> User Defined, Use custom hand-picked color for F-Curve.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘AUTO_RAINBOW’, ‘AUTO_RGB’, ‘AUTO_YRGB’, ‘CUSTOM’], default ‘AUTO_RAINBOW’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'data_path\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.data_path',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.data_path" ids="bpy.types.FCurve.data_path" module="bpy.types" names="bpy.types.FCurve.data_path"><desc_name xml:space="preserve">data_path</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>RNA Path to property affected by F-Curve</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FCurve.driver\ (in\ module\ bpy.types)',\ u'bpy.types.FCurve.driver',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.driver" ids="bpy.types.FCurve.driver" module="bpy.types" names="bpy.types.FCurve.driver"><desc_name xml:space="preserve">driver</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Channel Driver (only set for Driver F-Curves)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Driver" refuri="bpy.types.Driver#bpy.types.Driver"><literal classes="xref py py-class">Driver</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'extrapolation\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.extrapolation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.extrapolation" ids="bpy.types.FCurve.extrapolation" module="bpy.types" names="bpy.types.FCurve.extrapolation"><desc_name xml:space="preserve">extrapolation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Method used for evaluating value of F-Curve outside first and last keyframes</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>CONSTANT</literal> Constant, Hold values of endpoint keyframes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LINEAR</literal> Linear, Use slope of curve leading in/out of endpoint keyframes.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘CONSTANT’, ‘LINEAR’], default ‘CONSTANT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'group\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.group',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.group" ids="bpy.types.FCurve.group" module="bpy.types" names="bpy.types.FCurve.group"><desc_name xml:space="preserve">group</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Action Group that this F-Curve belongs to</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ActionGroup" refuri="bpy.types.ActionGroup#bpy.types.ActionGroup"><literal classes="xref py py-class">ActionGroup</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'hide\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.hide',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.hide" ids="bpy.types.FCurve.hide" module="bpy.types" names="bpy.types.FCurve.hide"><desc_name xml:space="preserve">hide</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>F-Curve and its keyframes are hidden in the Graph Editor graphs</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'is_valid\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.is_valid',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.is_valid" ids="bpy.types.FCurve.is_valid" module="bpy.types" names="bpy.types.FCurve.is_valid"><desc_name xml:space="preserve">is_valid</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>False when F-Curve could not be evaluated in past, so should be skipped when evaluating</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FCurve.keyframe_points\ (in\ module\ bpy.types)',\ u'bpy.types.FCurve.keyframe_points',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.keyframe_points" ids="bpy.types.FCurve.keyframe_points" module="bpy.types" names="bpy.types.FCurve.keyframe_points"><desc_name xml:space="preserve">keyframe_points</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>User-editable keyframes</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.FCurveKeyframePoints" refuri="bpy.types.FCurveKeyframePoints#bpy.types.FCurveKeyframePoints"><literal classes="xref py py-class">FCurveKeyframePoints</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Keyframe" refuri="bpy.types.Keyframe#bpy.types.Keyframe"><literal classes="xref py py-class">Keyframe</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'lock\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.lock',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.lock" ids="bpy.types.FCurve.lock" module="bpy.types" names="bpy.types.FCurve.lock"><desc_name xml:space="preserve">lock</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>F-Curve’s settings cannot be edited</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FCurve.modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.FCurve.modifiers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.modifiers" ids="bpy.types.FCurve.modifiers" module="bpy.types" names="bpy.types.FCurve.modifiers"><desc_name xml:space="preserve">modifiers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Modifiers affecting the shape of the F-Curve</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.FCurveModifiers" refuri="bpy.types.FCurveModifiers#bpy.types.FCurveModifiers"><literal classes="xref py py-class">FCurveModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.FModifier" refuri="bpy.types.FModifier#bpy.types.FModifier"><literal classes="xref py py-class">FModifier</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mute\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.mute',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.mute" ids="bpy.types.FCurve.mute" module="bpy.types" names="bpy.types.FCurve.mute"><desc_name xml:space="preserve">mute</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>F-Curve is not evaluated</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FCurve.sampled_points\ (in\ module\ bpy.types)',\ u'bpy.types.FCurve.sampled_points',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.sampled_points" ids="bpy.types.FCurve.sampled_points" module="bpy.types" names="bpy.types.FCurve.sampled_points"><desc_name xml:space="preserve">sampled_points</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Sampled animation data</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.FCurveSample" refuri="bpy.types.FCurveSample#bpy.types.FCurveSample"><literal classes="xref py py-class">FCurveSample</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select\ (bpy.types.FCurve\ attribute)',\ u'bpy.types.FCurve.select',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.select" ids="bpy.types.FCurve.select" module="bpy.types" names="bpy.types.FCurve.select"><desc_name xml:space="preserve">select</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>F-Curve is selected for editing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'evaluate()\ (bpy.types.FCurve\ method)',\ u'bpy.types.FCurve.evaluate',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.evaluate" ids="bpy.types.FCurve.evaluate" module="bpy.types" names="bpy.types.FCurve.evaluate"><desc_name xml:space="preserve">evaluate</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">frame</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Evaluate F-Curve</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Frame, Evaluate F-Curve at given frame</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Value, Value of F-Curve specific frame</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update()\ (bpy.types.FCurve\ method)',\ u'bpy.types.FCurve.update',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.update" ids="bpy.types.FCurve.update" module="bpy.types" names="bpy.types.FCurve.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Ensure keyframes are sorted in chronological order and handles are set correctly</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'range()\ (bpy.types.FCurve\ method)',\ u'bpy.types.FCurve.range',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.range" ids="bpy.types.FCurve.range" module="bpy.types" names="bpy.types.FCurve.range"><desc_name xml:space="preserve">range</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get the time extents for F-Curve</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Range, Min/Max values</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update_autoflags()\ (bpy.types.FCurve\ method)',\ u'bpy.types.FCurve.update_autoflags',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.update_autoflags" ids="bpy.types.FCurve.update_autoflags" module="bpy.types" names="bpy.types.FCurve.update_autoflags"><desc_name xml:space="preserve">update_autoflags</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update FCurve flags set automatically from affected property (currently, integer/discrete flags set when the property is not a float)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">data</literal_strong> (<reference internal="True" reftitle="bpy.types.AnyType" refuri="bpy.types.AnyType#bpy.types.AnyType"><literal classes="xref py py-class">AnyType</literal></reference>, (never None)) – Data, Data containing the property controlled by given FCurve</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'convert_to_samples()\ (bpy.types.FCurve\ method)',\ u'bpy.types.FCurve.convert_to_samples',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.convert_to_samples" ids="bpy.types.FCurve.convert_to_samples" module="bpy.types" names="bpy.types.FCurve.convert_to_samples"><desc_name xml:space="preserve">convert_to_samples</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">start</desc_parameter><desc_parameter xml:space="preserve">end</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Convert current FCurve from keyframes to sample points, if necessary</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">start</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1048574</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1048574</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Start Frame</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">end</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1048574</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1048574</literal_emphasis><literal_emphasis>]</literal_emphasis>) – End Frame</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'convert_to_keyframes()\ (bpy.types.FCurve\ method)',\ u'bpy.types.FCurve.convert_to_keyframes',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.convert_to_keyframes" ids="bpy.types.FCurve.convert_to_keyframes" module="bpy.types" names="bpy.types.FCurve.convert_to_keyframes"><desc_name xml:space="preserve">convert_to_keyframes</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">start</desc_parameter><desc_parameter xml:space="preserve">end</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Convert current FCurve from sample points to keyframes (linear interpolation), if necessary</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">start</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1048574</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1048574</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Start Frame</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">end</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1048574</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1048574</literal_emphasis><literal_emphasis>]</literal_emphasis>) – End Frame</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.FCurve\ class\ method)',\ u'bpy.types.FCurve.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.bl_rna_get_subclass" ids="bpy.types.FCurve.bl_rna_get_subclass" module="bpy.types" names="bpy.types.FCurve.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.FCurve\ class\ method)',\ u'bpy.types.FCurve.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="FCurve" first="False" fullname="FCurve.bl_rna_get_subclass_py" ids="bpy.types.FCurve.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.FCurve.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Action.fcurves" refuri="bpy.types.Action#bpy.types.Action.fcurves"><literal classes="xref py py-class">Action.fcurves</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ActionFCurves.find" refuri="bpy.types.ActionFCurves#bpy.types.ActionFCurves.find"><literal classes="xref py py-class">ActionFCurves.find</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ActionFCurves.new" refuri="bpy.types.ActionFCurves#bpy.types.ActionFCurves.new"><literal classes="xref py py-class">ActionFCurves.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ActionFCurves.remove" refuri="bpy.types.ActionFCurves#bpy.types.ActionFCurves.remove"><literal classes="xref py py-class">ActionFCurves.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ActionGroup.channels" refuri="bpy.types.ActionGroup#bpy.types.ActionGroup.channels"><literal classes="xref py py-class">ActionGroup.channels</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AnimData.drivers" refuri="bpy.types.AnimData#bpy.types.AnimData.drivers"><literal classes="xref py py-class">AnimData.drivers</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AnimDataDrivers.find" refuri="bpy.types.AnimDataDrivers#bpy.types.AnimDataDrivers.find"><literal classes="xref py py-class">AnimDataDrivers.find</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AnimDataDrivers.from_existing" refuri="bpy.types.AnimDataDrivers#bpy.types.AnimDataDrivers.from_existing"><literal classes="xref py py-class">AnimDataDrivers.from_existing</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AnimDataDrivers.from_existing" refuri="bpy.types.AnimDataDrivers#bpy.types.AnimDataDrivers.from_existing"><literal classes="xref py py-class">AnimDataDrivers.from_existing</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NlaStrip.fcurves" refuri="bpy.types.NlaStrip#bpy.types.NlaStrip.fcurves"><literal classes="xref py py-class">NlaStrip.fcurves</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NlaStripFCurves.find" refuri="bpy.types.NlaStripFCurves#bpy.types.NlaStripFCurves.find"><literal classes="xref py py-class">NlaStripFCurves.find</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
