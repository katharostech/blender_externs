<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ShrinkwrapConstraint.rst">
    <section ids="module-bpy.types shrinkwrapconstraint-constraint" names="shrinkwrapconstraint(constraint)">
        <title>ShrinkwrapConstraint(Constraint)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.Constraint" refuri="bpy.types.Constraint#bpy.types.Constraint"><literal classes="xref py py-class">Constraint</literal></reference></paragraph>
        <index entries="['single',\ u'ShrinkwrapConstraint\ (class\ in\ bpy.types)',\ u'bpy.types.ShrinkwrapConstraint',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ShrinkwrapConstraint" ids="bpy.types.ShrinkwrapConstraint" module="bpy.types" names="bpy.types.ShrinkwrapConstraint"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ShrinkwrapConstraint</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">Constraint</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Create constraint-based shrinkwrap relationship</paragraph>
                <index entries="['single',\ u'cull_face\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.cull_face',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.cull_face" ids="bpy.types.ShrinkwrapConstraint.cull_face" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.cull_face"><desc_name xml:space="preserve">cull_face</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Stop vertices from projecting to a face on the target when facing towards/away</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>OFF</literal> Off, No culling.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FRONT</literal> Front, No projection when in front of the face.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>BACK</literal> Back, No projection when behind the face.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘OFF’, ‘FRONT’, ‘BACK’], default ‘OFF’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'distance\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.distance',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.distance" ids="bpy.types.ShrinkwrapConstraint.distance" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.distance"><desc_name xml:space="preserve">distance</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Distance to Target</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'project_axis\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.project_axis',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.project_axis" ids="bpy.types.ShrinkwrapConstraint.project_axis" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.project_axis"><desc_name xml:space="preserve">project_axis</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Axis constrain to</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘POS_X’, ‘POS_Y’, ‘POS_Z’, ‘NEG_X’, ‘NEG_Y’, ‘NEG_Z’], default ‘POS_X’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'project_axis_space\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.project_axis_space',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.project_axis_space" ids="bpy.types.ShrinkwrapConstraint.project_axis_space" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.project_axis_space"><desc_name xml:space="preserve">project_axis_space</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Space for the projection axis</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>WORLD</literal> World Space, The constraint is applied relative to the world coordinate system.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>POSE</literal> Pose Space, The constraint is applied in Pose Space, the object transformation is ignored.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LOCAL_WITH_PARENT</literal> Local With Parent, The constraint is applied relative to the local coordinate system of the object, with the parent transformation added.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LOCAL</literal> Local Space, The constraint is applied relative to the local coordinate system of the object.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘WORLD’, ‘POSE’, ‘LOCAL_WITH_PARENT’, ‘LOCAL’], default ‘WORLD’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'project_limit\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.project_limit',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.project_limit" ids="bpy.types.ShrinkwrapConstraint.project_limit" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.project_limit"><desc_name xml:space="preserve">project_limit</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Limit the distance used for projection (zero disables)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'shrinkwrap_type\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.shrinkwrap_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.shrinkwrap_type" ids="bpy.types.ShrinkwrapConstraint.shrinkwrap_type" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.shrinkwrap_type"><desc_name xml:space="preserve">shrinkwrap_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select type of shrinkwrap algorithm for target position</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NEAREST_SURFACE</literal> Nearest Surface Point, Shrink the location to the nearest target surface.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PROJECT</literal> Project, Shrink the location to the nearest target surface along a given axis.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NEAREST_VERTEX</literal> Nearest Vertex, Shrink the location to the nearest target vertex.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TARGET_PROJECT</literal> Target Normal Project, Shrink the location to the nearest target surface along the interpolated vertex normals of the target.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NEAREST_SURFACE’, ‘PROJECT’, ‘NEAREST_VERTEX’, ‘TARGET_PROJECT’], default ‘NEAREST_SURFACE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'target\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.target',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.target" ids="bpy.types.ShrinkwrapConstraint.target" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.target"><desc_name xml:space="preserve">target</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Target Mesh object</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'track_axis\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.track_axis',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.track_axis" ids="bpy.types.ShrinkwrapConstraint.track_axis" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.track_axis"><desc_name xml:space="preserve">track_axis</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Axis that is aligned to the normal</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘TRACK_X’, ‘TRACK_Y’, ‘TRACK_Z’, ‘TRACK_NEGATIVE_X’, ‘TRACK_NEGATIVE_Y’, ‘TRACK_NEGATIVE_Z’], default ‘TRACK_X’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_invert_cull\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.use_invert_cull',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.use_invert_cull" ids="bpy.types.ShrinkwrapConstraint.use_invert_cull" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.use_invert_cull"><desc_name xml:space="preserve">use_invert_cull</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>When projecting in the opposite direction invert the face cull mode</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_project_opposite\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.use_project_opposite',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.use_project_opposite" ids="bpy.types.ShrinkwrapConstraint.use_project_opposite" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.use_project_opposite"><desc_name xml:space="preserve">use_project_opposite</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Project in both specified and opposite directions</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_track_normal\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.use_track_normal',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.use_track_normal" ids="bpy.types.ShrinkwrapConstraint.use_track_normal" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.use_track_normal"><desc_name xml:space="preserve">use_track_normal</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Align the specified axis to the surface normal</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'wrap_mode\ (bpy.types.ShrinkwrapConstraint\ attribute)',\ u'bpy.types.ShrinkwrapConstraint.wrap_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.wrap_mode" ids="bpy.types.ShrinkwrapConstraint.wrap_mode" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.wrap_mode"><desc_name xml:space="preserve">wrap_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select how to constrain the object to the target surface</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>ON_SURFACE</literal> On Surface, The point is constrained to the surface of the target object, with distance offset towards the original point location.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INSIDE</literal> Inside, The point is constrained to be inside the target object.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OUTSIDE</literal> Outside, The point is constrained to be outside the target object.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OUTSIDE_SURFACE</literal> Outside Surface, The point is constrained to the surface of the target object, with distance offset always to the outside, towards or away from the original location.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ABOVE_SURFACE</literal> Above Surface, The point is constrained to the surface of the target object, with distance offset applied exactly along the target normal.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘ON_SURFACE’, ‘INSIDE’, ‘OUTSIDE’, ‘OUTSIDE_SURFACE’, ‘ABOVE_SURFACE’], default ‘ON_SURFACE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ShrinkwrapConstraint\ class\ method)',\ u'bpy.types.ShrinkwrapConstraint.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.bl_rna_get_subclass" ids="bpy.types.ShrinkwrapConstraint.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ShrinkwrapConstraint\ class\ method)',\ u'bpy.types.ShrinkwrapConstraint.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShrinkwrapConstraint" first="False" fullname="ShrinkwrapConstraint.bl_rna_get_subclass_py" ids="bpy.types.ShrinkwrapConstraint.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ShrinkwrapConstraint.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.name" refuri="bpy.types.Constraint#bpy.types.Constraint.name"><literal classes="xref py py-class">Constraint.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.type" refuri="bpy.types.Constraint#bpy.types.Constraint.type"><literal classes="xref py py-class">Constraint.type</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.owner_space" refuri="bpy.types.Constraint#bpy.types.Constraint.owner_space"><literal classes="xref py py-class">Constraint.owner_space</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.target_space" refuri="bpy.types.Constraint#bpy.types.Constraint.target_space"><literal classes="xref py py-class">Constraint.target_space</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.mute" refuri="bpy.types.Constraint#bpy.types.Constraint.mute"><literal classes="xref py py-class">Constraint.mute</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.show_expanded" refuri="bpy.types.Constraint#bpy.types.Constraint.show_expanded"><literal classes="xref py py-class">Constraint.show_expanded</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.is_valid" refuri="bpy.types.Constraint#bpy.types.Constraint.is_valid"><literal classes="xref py py-class">Constraint.is_valid</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.active" refuri="bpy.types.Constraint#bpy.types.Constraint.active"><literal classes="xref py py-class">Constraint.active</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.is_proxy_local" refuri="bpy.types.Constraint#bpy.types.Constraint.is_proxy_local"><literal classes="xref py py-class">Constraint.is_proxy_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.influence" refuri="bpy.types.Constraint#bpy.types.Constraint.influence"><literal classes="xref py py-class">Constraint.influence</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.error_location" refuri="bpy.types.Constraint#bpy.types.Constraint.error_location"><literal classes="xref py py-class">Constraint.error_location</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Constraint.error_rotation" refuri="bpy.types.Constraint#bpy.types.Constraint.error_rotation"><literal classes="xref py py-class">Constraint.error_rotation</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
