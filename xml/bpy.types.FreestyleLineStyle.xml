<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.FreestyleLineStyle.rst">
    <section ids="module-bpy.types freestylelinestyle-id" names="freestylelinestyle(id)">
        <title>FreestyleLineStyle(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes â€” <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <index entries="['single',\ u'FreestyleLineStyle\ (class\ in\ bpy.types)',\ u'bpy.types.FreestyleLineStyle',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="FreestyleLineStyle" ids="bpy.types.FreestyleLineStyle" module="bpy.types" names="bpy.types.FreestyleLineStyle"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">FreestyleLineStyle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Freestyle line style, reusable by multiple line sets</paragraph>
                <index entries="['single',\ u'active_texture\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.active_texture',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.active_texture" ids="bpy.types.FreestyleLineStyle.active_texture" module="bpy.types" names="bpy.types.FreestyleLineStyle.active_texture"><desc_name xml:space="preserve">active_texture</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Active texture slot being displayed</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Texture" refuri="bpy.types.Texture#bpy.types.Texture"><literal classes="xref py py-class">Texture</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'active_texture_index\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.active_texture_index',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.active_texture_index" ids="bpy.types.FreestyleLineStyle.active_texture_index" module="bpy.types" names="bpy.types.FreestyleLineStyle.active_texture_index"><desc_name xml:space="preserve">active_texture_index</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Index of active texture slot</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 17], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'alpha\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.alpha" ids="bpy.types.FreestyleLineStyle.alpha" module="bpy.types" names="bpy.types.FreestyleLineStyle.alpha"><desc_name xml:space="preserve">alpha</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Base alpha transparency, possibly modified by alpha transparency modifiers</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FreestyleLineStyle.alpha_modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.FreestyleLineStyle.alpha_modifiers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.alpha_modifiers" ids="bpy.types.FreestyleLineStyle.alpha_modifiers" module="bpy.types" names="bpy.types.FreestyleLineStyle.alpha_modifiers"><desc_name xml:space="preserve">alpha_modifiers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>List of alpha transparency modifiers</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.LineStyleAlphaModifiers" refuri="bpy.types.LineStyleAlphaModifiers#bpy.types.LineStyleAlphaModifiers"><literal classes="xref py py-class">LineStyleAlphaModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.LineStyleAlphaModifier" refuri="bpy.types.LineStyleAlphaModifier#bpy.types.LineStyleAlphaModifier"><literal classes="xref py py-class">LineStyleAlphaModifier</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'angle_max\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.angle_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.angle_max" ids="bpy.types.FreestyleLineStyle.angle_max" module="bpy.types" names="bpy.types.FreestyleLineStyle.angle_max"><desc_name xml:space="preserve">angle_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum 2D angle for splitting chains</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 3.14159], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'angle_min\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.angle_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.angle_min" ids="bpy.types.FreestyleLineStyle.angle_min" module="bpy.types" names="bpy.types.FreestyleLineStyle.angle_min"><desc_name xml:space="preserve">angle_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Minimum 2D angle for splitting chains</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 3.14159], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FreestyleLineStyle.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.FreestyleLineStyle.animation_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.animation_data" ids="bpy.types.FreestyleLineStyle.animation_data" module="bpy.types" names="bpy.types.FreestyleLineStyle.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation data for this data-block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'caps\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.caps',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.caps" ids="bpy.types.FreestyleLineStyle.caps" module="bpy.types" names="bpy.types.FreestyleLineStyle.caps"><desc_name xml:space="preserve">caps</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select the shape of both ends of strokes</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>BUTT</literal> Butt, Butt cap (flat).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ROUND</literal> Round, Round cap (half-circle).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SQUARE</literal> Square, Square cap (flat and extended).</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜BUTTâ€™, â€˜ROUNDâ€™, â€˜SQUAREâ€™], default â€˜BUTTâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'chain_count\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.chain_count',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.chain_count" ids="bpy.types.FreestyleLineStyle.chain_count" module="bpy.types" names="bpy.types.FreestyleLineStyle.chain_count"><desc_name xml:space="preserve">chain_count</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Chain count for the selection of first N chains</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'chaining\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.chaining',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.chaining" ids="bpy.types.FreestyleLineStyle.chaining" module="bpy.types" names="bpy.types.FreestyleLineStyle.chaining"><desc_name xml:space="preserve">chaining</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select the way how feature edges are jointed to form chains</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>PLAIN</literal> Plain, Plain chaining.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SKETCHY</literal> Sketchy, Sketchy chaining with a multiple touch.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜PLAINâ€™, â€˜SKETCHYâ€™], default â€˜PLAINâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.color',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.color" ids="bpy.types.FreestyleLineStyle.color" module="bpy.types" names="bpy.types.FreestyleLineStyle.color"><desc_name xml:space="preserve">color</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Base line color, possibly modified by line color modifiers</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [0, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FreestyleLineStyle.color_modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.FreestyleLineStyle.color_modifiers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.color_modifiers" ids="bpy.types.FreestyleLineStyle.color_modifiers" module="bpy.types" names="bpy.types.FreestyleLineStyle.color_modifiers"><desc_name xml:space="preserve">color_modifiers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>List of line color modifiers</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.LineStyleColorModifiers" refuri="bpy.types.LineStyleColorModifiers#bpy.types.LineStyleColorModifiers"><literal classes="xref py py-class">LineStyleColorModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.LineStyleColorModifier" refuri="bpy.types.LineStyleColorModifier#bpy.types.LineStyleColorModifier"><literal classes="xref py py-class">LineStyleColorModifier</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'dash1\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.dash1',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.dash1" ids="bpy.types.FreestyleLineStyle.dash1" module="bpy.types" names="bpy.types.FreestyleLineStyle.dash1"><desc_name xml:space="preserve">dash1</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 1st dash for dashed lines</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'dash2\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.dash2',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.dash2" ids="bpy.types.FreestyleLineStyle.dash2" module="bpy.types" names="bpy.types.FreestyleLineStyle.dash2"><desc_name xml:space="preserve">dash2</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 2nd dash for dashed lines</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'dash3\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.dash3',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.dash3" ids="bpy.types.FreestyleLineStyle.dash3" module="bpy.types" names="bpy.types.FreestyleLineStyle.dash3"><desc_name xml:space="preserve">dash3</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 3rd dash for dashed lines</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gap1\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.gap1',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.gap1" ids="bpy.types.FreestyleLineStyle.gap1" module="bpy.types" names="bpy.types.FreestyleLineStyle.gap1"><desc_name xml:space="preserve">gap1</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 1st gap for dashed lines</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gap2\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.gap2',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.gap2" ids="bpy.types.FreestyleLineStyle.gap2" module="bpy.types" names="bpy.types.FreestyleLineStyle.gap2"><desc_name xml:space="preserve">gap2</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 2nd gap for dashed lines</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gap3\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.gap3',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.gap3" ids="bpy.types.FreestyleLineStyle.gap3" module="bpy.types" names="bpy.types.FreestyleLineStyle.gap3"><desc_name xml:space="preserve">gap3</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 3rd gap for dashed lines</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FreestyleLineStyle.geometry_modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.FreestyleLineStyle.geometry_modifiers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.geometry_modifiers" ids="bpy.types.FreestyleLineStyle.geometry_modifiers" module="bpy.types" names="bpy.types.FreestyleLineStyle.geometry_modifiers"><desc_name xml:space="preserve">geometry_modifiers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>List of stroke geometry modifiers</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.LineStyleGeometryModifiers" refuri="bpy.types.LineStyleGeometryModifiers#bpy.types.LineStyleGeometryModifiers"><literal classes="xref py py-class">LineStyleGeometryModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.LineStyleGeometryModifier" refuri="bpy.types.LineStyleGeometryModifier#bpy.types.LineStyleGeometryModifier"><literal classes="xref py py-class">LineStyleGeometryModifier</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'integration_type\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.integration_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.integration_type" ids="bpy.types.FreestyleLineStyle.integration_type" module="bpy.types" names="bpy.types.FreestyleLineStyle.integration_type"><desc_name xml:space="preserve">integration_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select the way how the sort key is computed for each chain</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>MEAN</literal> Mean, The value computed for the chain is the mean of the values obtained for chain vertices.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MIN</literal> Min, The value computed for the chain is the minimum of the values obtained for chain vertices.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MAX</literal> Max, The value computed for the chain is the maximum of the values obtained for chain vertices.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FIRST</literal> First, The value computed for the chain is the value obtained for the first chain vertex.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LAST</literal> Last, The value computed for the chain is the value obtained for the last chain vertex.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜MEANâ€™, â€˜MINâ€™, â€˜MAXâ€™, â€˜FIRSTâ€™, â€˜LASTâ€™], default â€˜MEANâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'length_max\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.length_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.length_max" ids="bpy.types.FreestyleLineStyle.length_max" module="bpy.types" names="bpy.types.FreestyleLineStyle.length_max"><desc_name xml:space="preserve">length_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum curvilinear 2D length for the selection of chains</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 10000], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'length_min\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.length_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.length_min" ids="bpy.types.FreestyleLineStyle.length_min" module="bpy.types" names="bpy.types.FreestyleLineStyle.length_min"><desc_name xml:space="preserve">length_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Minimum curvilinear 2D length for the selection of chains</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 10000], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'material_boundary\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.material_boundary',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.material_boundary" ids="bpy.types.FreestyleLineStyle.material_boundary" module="bpy.types" names="bpy.types.FreestyleLineStyle.material_boundary"><desc_name xml:space="preserve">material_boundary</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>If true, chains of feature edges are split at material boundaries</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FreestyleLineStyle.node_tree\ (in\ module\ bpy.types)',\ u'bpy.types.FreestyleLineStyle.node_tree',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.node_tree" ids="bpy.types.FreestyleLineStyle.node_tree" module="bpy.types" names="bpy.types.FreestyleLineStyle.node_tree"><desc_name xml:space="preserve">node_tree</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Node tree for node-based shaders</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.NodeTree" refuri="bpy.types.NodeTree#bpy.types.NodeTree"><literal classes="xref py py-class">NodeTree</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'panel\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.panel',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.panel" ids="bpy.types.FreestyleLineStyle.panel" module="bpy.types" names="bpy.types.FreestyleLineStyle.panel"><desc_name xml:space="preserve">panel</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select the property panel to be shown</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>STROKES</literal> Strokes, Show the panel for stroke construction.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>COLOR</literal> Color, Show the panel for line color options.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>ALPHA</literal> Alpha, Show the panel for alpha transparency options.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>THICKNESS</literal> Thickness, Show the panel for line thickness options.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GEOMETRY</literal> Geometry, Show the panel for stroke geometry options.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TEXTURE</literal> Texture, Show the panel for stroke texture options.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜STROKESâ€™, â€˜COLORâ€™, â€˜ALPHAâ€™, â€˜THICKNESSâ€™, â€˜GEOMETRYâ€™, â€˜TEXTUREâ€™], default â€˜STROKESâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'rounds\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.rounds',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.rounds" ids="bpy.types.FreestyleLineStyle.rounds" module="bpy.types" names="bpy.types.FreestyleLineStyle.rounds"><desc_name xml:space="preserve">rounds</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of rounds in a sketchy multiple touch</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 1000], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'sort_key\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.sort_key',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.sort_key" ids="bpy.types.FreestyleLineStyle.sort_key" module="bpy.types" names="bpy.types.FreestyleLineStyle.sort_key"><desc_name xml:space="preserve">sort_key</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select the sort key to determine the stacking order of chains</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>DISTANCE_FROM_CAMERA</literal> Distance from Camera, Sort by distance from camera (closer lines lie on top of further lines).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>2D_LENGTH</literal> 2D Length, Sort by curvilinear 2D length (longer lines lie on top of shorter lines).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PROJECTED_X</literal> Projected X, Sort by the projected X value in the image coordinate system.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PROJECTED_Y</literal> Projected Y, Sort by the projected Y value in the image coordinate system.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜DISTANCE_FROM_CAMERAâ€™, â€˜2D_LENGTHâ€™, â€˜PROJECTED_Xâ€™, â€˜PROJECTED_Yâ€™], default â€˜DISTANCE_FROM_CAMERAâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'sort_order\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.sort_order',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.sort_order" ids="bpy.types.FreestyleLineStyle.sort_order" module="bpy.types" names="bpy.types.FreestyleLineStyle.sort_order"><desc_name xml:space="preserve">sort_order</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Select the sort order</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>DEFAULT</literal> Default, Default order of the sort key.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>REVERSE</literal> Reverse, Reverse order.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜DEFAULTâ€™, â€˜REVERSEâ€™], default â€˜DEFAULTâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'split_dash1\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.split_dash1',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.split_dash1" ids="bpy.types.FreestyleLineStyle.split_dash1" module="bpy.types" names="bpy.types.FreestyleLineStyle.split_dash1"><desc_name xml:space="preserve">split_dash1</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 1st dash for splitting</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'split_dash2\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.split_dash2',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.split_dash2" ids="bpy.types.FreestyleLineStyle.split_dash2" module="bpy.types" names="bpy.types.FreestyleLineStyle.split_dash2"><desc_name xml:space="preserve">split_dash2</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 2nd dash for splitting</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'split_dash3\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.split_dash3',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.split_dash3" ids="bpy.types.FreestyleLineStyle.split_dash3" module="bpy.types" names="bpy.types.FreestyleLineStyle.split_dash3"><desc_name xml:space="preserve">split_dash3</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 3rd dash for splitting</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'split_gap1\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.split_gap1',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.split_gap1" ids="bpy.types.FreestyleLineStyle.split_gap1" module="bpy.types" names="bpy.types.FreestyleLineStyle.split_gap1"><desc_name xml:space="preserve">split_gap1</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 1st gap for splitting</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'split_gap2\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.split_gap2',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.split_gap2" ids="bpy.types.FreestyleLineStyle.split_gap2" module="bpy.types" names="bpy.types.FreestyleLineStyle.split_gap2"><desc_name xml:space="preserve">split_gap2</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 2nd gap for splitting</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'split_gap3\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.split_gap3',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.split_gap3" ids="bpy.types.FreestyleLineStyle.split_gap3" module="bpy.types" names="bpy.types.FreestyleLineStyle.split_gap3"><desc_name xml:space="preserve">split_gap3</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Length of the 3rd gap for splitting</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 65535], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'split_length\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.split_length',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.split_length" ids="bpy.types.FreestyleLineStyle.split_length" module="bpy.types" names="bpy.types.FreestyleLineStyle.split_length"><desc_name xml:space="preserve">split_length</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Curvilinear 2D length for chain splitting</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 10000], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FreestyleLineStyle.texture_slots\ (in\ module\ bpy.types)',\ u'bpy.types.FreestyleLineStyle.texture_slots',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.texture_slots" ids="bpy.types.FreestyleLineStyle.texture_slots" module="bpy.types" names="bpy.types.FreestyleLineStyle.texture_slots"><desc_name xml:space="preserve">texture_slots</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Texture slots defining the mapping and influence of textures</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.LineStyleTextureSlots" refuri="bpy.types.LineStyleTextureSlots#bpy.types.LineStyleTextureSlots"><literal classes="xref py py-class">LineStyleTextureSlots</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.LineStyleTextureSlot" refuri="bpy.types.LineStyleTextureSlot#bpy.types.LineStyleTextureSlot"><literal classes="xref py py-class">LineStyleTextureSlot</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'texture_spacing\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.texture_spacing',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.texture_spacing" ids="bpy.types.FreestyleLineStyle.texture_spacing" module="bpy.types" names="bpy.types.FreestyleLineStyle.texture_spacing"><desc_name xml:space="preserve">texture_spacing</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Spacing for textures along stroke length</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0.01, 100], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'thickness\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.thickness',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.thickness" ids="bpy.types.FreestyleLineStyle.thickness" module="bpy.types" names="bpy.types.FreestyleLineStyle.thickness"><desc_name xml:space="preserve">thickness</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Base line thickness, possibly modified by line thickness modifiers</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 10000], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'FreestyleLineStyle.thickness_modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.FreestyleLineStyle.thickness_modifiers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.thickness_modifiers" ids="bpy.types.FreestyleLineStyle.thickness_modifiers" module="bpy.types" names="bpy.types.FreestyleLineStyle.thickness_modifiers"><desc_name xml:space="preserve">thickness_modifiers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>List of line thickness modifiers</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.LineStyleThicknessModifiers" refuri="bpy.types.LineStyleThicknessModifiers#bpy.types.LineStyleThicknessModifiers"><literal classes="xref py py-class">LineStyleThicknessModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.LineStyleThicknessModifier" refuri="bpy.types.LineStyleThicknessModifier#bpy.types.LineStyleThicknessModifier"><literal classes="xref py py-class">LineStyleThicknessModifier</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'thickness_position\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.thickness_position',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.thickness_position" ids="bpy.types.FreestyleLineStyle.thickness_position" module="bpy.types" names="bpy.types.FreestyleLineStyle.thickness_position"><desc_name xml:space="preserve">thickness_position</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Thickness position of silhouettes and border edges (applicable when plain chaining is used with the Same Object option)</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>CENTER</literal> Center, Silhouettes and border edges are centered along stroke geometry.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INSIDE</literal> Inside, Silhouettes and border edges are drawn inside of stroke geometry.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OUTSIDE</literal> Outside, Silhouettes and border edges are drawn outside of stroke geometry.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>RELATIVE</literal> Relative, Silhouettes and border edges are shifted by a user-defined ratio.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [â€˜CENTERâ€™, â€˜INSIDEâ€™, â€˜OUTSIDEâ€™, â€˜RELATIVEâ€™], default â€˜CENTERâ€™</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'thickness_ratio\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.thickness_ratio',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.thickness_ratio" ids="bpy.types.FreestyleLineStyle.thickness_ratio" module="bpy.types" names="bpy.types.FreestyleLineStyle.thickness_ratio"><desc_name xml:space="preserve">thickness_ratio</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>A number between 0 (inside) and 1 (outside) specifying the relative position of stroke thickness</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_angle_max\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_angle_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_angle_max" ids="bpy.types.FreestyleLineStyle.use_angle_max" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_angle_max"><desc_name xml:space="preserve">use_angle_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Split chains at points with angles larger than the maximum 2D angle</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_angle_min\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_angle_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_angle_min" ids="bpy.types.FreestyleLineStyle.use_angle_min" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_angle_min"><desc_name xml:space="preserve">use_angle_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Split chains at points with angles smaller than the minimum 2D angle</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_chain_count\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_chain_count',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_chain_count" ids="bpy.types.FreestyleLineStyle.use_chain_count" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_chain_count"><desc_name xml:space="preserve">use_chain_count</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable the selection of first N chains</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_chaining\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_chaining',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_chaining" ids="bpy.types.FreestyleLineStyle.use_chaining" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_chaining"><desc_name xml:space="preserve">use_chaining</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable chaining of feature edges</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_dashed_line\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_dashed_line',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_dashed_line" ids="bpy.types.FreestyleLineStyle.use_dashed_line" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_dashed_line"><desc_name xml:space="preserve">use_dashed_line</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable or disable dashed line</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_length_max\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_length_max',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_length_max" ids="bpy.types.FreestyleLineStyle.use_length_max" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_length_max"><desc_name xml:space="preserve">use_length_max</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable the selection of chains by a maximum 2D length</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_length_min\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_length_min',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_length_min" ids="bpy.types.FreestyleLineStyle.use_length_min" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_length_min"><desc_name xml:space="preserve">use_length_min</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable the selection of chains by a minimum 2D length</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_nodes\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_nodes',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_nodes" ids="bpy.types.FreestyleLineStyle.use_nodes" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_nodes"><desc_name xml:space="preserve">use_nodes</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use shader nodes for the line style</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_same_object\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_same_object',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_same_object" ids="bpy.types.FreestyleLineStyle.use_same_object" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_same_object"><desc_name xml:space="preserve">use_same_object</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>If true, only feature edges of the same object are joined</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_sorting\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_sorting',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_sorting" ids="bpy.types.FreestyleLineStyle.use_sorting" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_sorting"><desc_name xml:space="preserve">use_sorting</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Arrange the stacking order of strokes</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_split_length\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_split_length',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_split_length" ids="bpy.types.FreestyleLineStyle.use_split_length" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_split_length"><desc_name xml:space="preserve">use_split_length</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable chain splitting by curvilinear 2D length</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_split_pattern\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_split_pattern',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_split_pattern" ids="bpy.types.FreestyleLineStyle.use_split_pattern" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_split_pattern"><desc_name xml:space="preserve">use_split_pattern</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable chain splitting by dashed line patterns</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_texture\ (bpy.types.FreestyleLineStyle\ attribute)',\ u'bpy.types.FreestyleLineStyle.use_texture',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.use_texture" ids="bpy.types.FreestyleLineStyle.use_texture" module="bpy.types" names="bpy.types.FreestyleLineStyle.use_texture"><desc_name xml:space="preserve">use_texture</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable or disable textured strokes</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.FreestyleLineStyle\ class\ method)',\ u'bpy.types.FreestyleLineStyle.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.bl_rna_get_subclass" ids="bpy.types.FreestyleLineStyle.bl_rna_get_subclass" module="bpy.types" names="bpy.types.FreestyleLineStyle.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.FreestyleLineStyle\ class\ method)',\ u'bpy.types.FreestyleLineStyle.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="FreestyleLineStyle" first="False" fullname="FreestyleLineStyle.bl_rna_get_subclass_py" ids="bpy.types.FreestyleLineStyle.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.FreestyleLineStyle.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.line_style" refuri="bpy.context#bpy.context.line_style"><literal classes="xref py py-mod">bpy.context.line_style</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.linestyles" refuri="bpy.types.BlendData#bpy.types.BlendData.linestyles"><literal classes="xref py py-class">BlendData.linestyles</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataLineStyles.new" refuri="bpy.types.BlendDataLineStyles#bpy.types.BlendDataLineStyles.new"><literal classes="xref py py-class">BlendDataLineStyles.new</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataLineStyles.remove" refuri="bpy.types.BlendDataLineStyles#bpy.types.BlendDataLineStyles.remove"><literal classes="xref py py-class">BlendDataLineStyles.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FreestyleLineSet.linestyle" refuri="bpy.types.FreestyleLineSet#bpy.types.FreestyleLineSet.linestyle"><literal classes="xref py py-class">FreestyleLineSet.linestyle</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
