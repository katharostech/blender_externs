<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Gizmo.rst">
    <section ids="module-bpy.types gizmo-bpy-struct" names="gizmo(bpy_struct)">
        <title>Gizmo(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'Gizmo\ (class\ in\ bpy.types)',\ u'bpy.types.Gizmo',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Gizmo" ids="bpy.types.Gizmo" module="bpy.types" names="bpy.types.Gizmo"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Gizmo</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Collection of gizmos</paragraph>
                <index entries="['single',\ u'alpha\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.alpha" ids="bpy.types.Gizmo.alpha" module="bpy.types" names="bpy.types.Gizmo.alpha"><desc_name xml:space="preserve">alpha</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'alpha_highlight\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.alpha_highlight',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.alpha_highlight" ids="bpy.types.Gizmo.alpha_highlight" module="bpy.types" names="bpy.types.Gizmo.alpha_highlight"><desc_name xml:space="preserve">alpha_highlight</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_idname\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.bl_idname',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.bl_idname" ids="bpy.types.Gizmo.bl_idname" module="bpy.types" names="bpy.types.Gizmo.bl_idname"><desc_name xml:space="preserve">bl_idname</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.color',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.color" ids="bpy.types.Gizmo.color" module="bpy.types" names="bpy.types.Gizmo.color"><desc_name xml:space="preserve">color</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [0, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'color_highlight\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.color_highlight',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.color_highlight" ids="bpy.types.Gizmo.color_highlight" module="bpy.types" names="bpy.types.Gizmo.color_highlight"><desc_name xml:space="preserve">color_highlight</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [0, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Gizmo.group\ (in\ module\ bpy.types)',\ u'bpy.types.Gizmo.group',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.group" ids="bpy.types.Gizmo.group" module="bpy.types" names="bpy.types.Gizmo.group"><desc_name xml:space="preserve">group</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Gizmo group this gizmo is a member of</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup"><literal classes="xref py py-class">GizmoGroup</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'hide\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.hide',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.hide" ids="bpy.types.Gizmo.hide" module="bpy.types" names="bpy.types.Gizmo.hide"><desc_name xml:space="preserve">hide</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'hide_select\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.hide_select',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.hide_select" ids="bpy.types.Gizmo.hide_select" module="bpy.types" names="bpy.types.Gizmo.hide_select"><desc_name xml:space="preserve">hide_select</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Gizmo.is_highlight\ (in\ module\ bpy.types)',\ u'bpy.types.Gizmo.is_highlight',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.is_highlight" ids="bpy.types.Gizmo.is_highlight" module="bpy.types" names="bpy.types.Gizmo.is_highlight"><desc_name xml:space="preserve">is_highlight</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Gizmo.is_modal\ (in\ module\ bpy.types)',\ u'bpy.types.Gizmo.is_modal',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.is_modal" ids="bpy.types.Gizmo.is_modal" module="bpy.types" names="bpy.types.Gizmo.is_modal"><desc_name xml:space="preserve">is_modal</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'line_width\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.line_width',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.line_width" ids="bpy.types.Gizmo.line_width" module="bpy.types" names="bpy.types.Gizmo.line_width"><desc_name xml:space="preserve">line_width</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'matrix_basis\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.matrix_basis',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.matrix_basis" ids="bpy.types.Gizmo.matrix_basis" module="bpy.types" names="bpy.types.Gizmo.matrix_basis"><desc_name xml:space="preserve">matrix_basis</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0))</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'matrix_offset\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.matrix_offset',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.matrix_offset" ids="bpy.types.Gizmo.matrix_offset" module="bpy.types" names="bpy.types.Gizmo.matrix_offset"><desc_name xml:space="preserve">matrix_offset</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0))</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'matrix_space\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.matrix_space',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.matrix_space" ids="bpy.types.Gizmo.matrix_space" module="bpy.types" names="bpy.types.Gizmo.matrix_space"><desc_name xml:space="preserve">matrix_space</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0))</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Gizmo.matrix_world\ (in\ module\ bpy.types)',\ u'bpy.types.Gizmo.matrix_world',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.matrix_world" ids="bpy.types.Gizmo.matrix_world" module="bpy.types" names="bpy.types.Gizmo.matrix_world"><desc_name xml:space="preserve">matrix_world</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0)), (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Gizmo.properties\ (in\ module\ bpy.types)',\ u'bpy.types.Gizmo.properties',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.properties" ids="bpy.types.Gizmo.properties" module="bpy.types" names="bpy.types.Gizmo.properties"><desc_name xml:space="preserve">properties</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.GizmoProperties" refuri="bpy.types.GizmoProperties#bpy.types.GizmoProperties"><literal classes="xref py py-class">GizmoProperties</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'scale_basis\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.scale_basis',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.scale_basis" ids="bpy.types.Gizmo.scale_basis" module="bpy.types" names="bpy.types.Gizmo.scale_basis"><desc_name xml:space="preserve">scale_basis</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.select',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.select" ids="bpy.types.Gizmo.select" module="bpy.types" names="bpy.types.Gizmo.select"><desc_name xml:space="preserve">select</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_draw_hover\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.use_draw_hover',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.use_draw_hover" ids="bpy.types.Gizmo.use_draw_hover" module="bpy.types" names="bpy.types.Gizmo.use_draw_hover"><desc_name xml:space="preserve">use_draw_hover</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_draw_modal\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.use_draw_modal',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.use_draw_modal" ids="bpy.types.Gizmo.use_draw_modal" module="bpy.types" names="bpy.types.Gizmo.use_draw_modal"><desc_name xml:space="preserve">use_draw_modal</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Draw while dragging</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_draw_offset_scale\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.use_draw_offset_scale',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.use_draw_offset_scale" ids="bpy.types.Gizmo.use_draw_offset_scale" module="bpy.types" names="bpy.types.Gizmo.use_draw_offset_scale"><desc_name xml:space="preserve">use_draw_offset_scale</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Scale the offset matrix (use to apply screen-space offset)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_draw_scale\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.use_draw_scale',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.use_draw_scale" ids="bpy.types.Gizmo.use_draw_scale" module="bpy.types" names="bpy.types.Gizmo.use_draw_scale"><desc_name xml:space="preserve">use_draw_scale</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use scale when calculating the matrix</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_draw_value\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.use_draw_value',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.use_draw_value" ids="bpy.types.Gizmo.use_draw_value" module="bpy.types" names="bpy.types.Gizmo.use_draw_value"><desc_name xml:space="preserve">use_draw_value</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Show an indicator for the current value while dragging</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_grab_cursor\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.use_grab_cursor',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.use_grab_cursor" ids="bpy.types.Gizmo.use_grab_cursor" module="bpy.types" names="bpy.types.Gizmo.use_grab_cursor"><desc_name xml:space="preserve">use_grab_cursor</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_select_background\ (bpy.types.Gizmo\ attribute)',\ u'bpy.types.Gizmo.use_select_background',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.use_select_background" ids="bpy.types.Gizmo.use_select_background" module="bpy.types" names="bpy.types.Gizmo.use_select_background"><desc_name xml:space="preserve">use_select_background</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Don’t write into the depth buffer</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.draw',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.draw" ids="bpy.types.Gizmo.draw" module="bpy.types" names="bpy.types.Gizmo.draw"><desc_name xml:space="preserve">draw</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_select()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.draw_select',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.draw_select" ids="bpy.types.Gizmo.draw_select" module="bpy.types" names="bpy.types.Gizmo.draw_select"><desc_name xml:space="preserve">draw_select</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">select_id=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'test_select()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.test_select',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.test_select" ids="bpy.types.Gizmo.test_select" module="bpy.types" names="bpy.types.Gizmo.test_select"><desc_name xml:space="preserve">test_select</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">location</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">location</literal_strong> (<literal_emphasis>int array of 2 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Location, Region coordinates</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'modal()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.modal',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.modal" ids="bpy.types.Gizmo.modal" module="bpy.types" names="bpy.types.Gizmo.modal"><desc_name xml:space="preserve">modal</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">event</desc_parameter><desc_parameter xml:space="preserve">tweak</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">tweak</literal_strong> (<literal_emphasis>enum set in {'PRECISE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SNAP'}</literal_emphasis>) – Tweak</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph><paragraph>result</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>RUNNING_MODAL</literal> Running Modal, Keep the operator running with blender.</paragraph></list_item><list_item><paragraph><literal>CANCELLED</literal> Cancelled, When no action has been taken, operator exits.</paragraph></list_item><list_item><paragraph><literal>FINISHED</literal> Finished, When the operator is complete, operator exits.</paragraph></list_item><list_item><paragraph><literal>PASS_THROUGH</literal> Pass Through, Do nothing and pass the event on.</paragraph></list_item><list_item><paragraph><literal>INTERFACE</literal> Interface, Handled but not executed (popup menus).</paragraph></list_item></bullet_list></paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>enum set in {‘RUNNING_MODAL’, ‘CANCELLED’, ‘FINISHED’, ‘PASS_THROUGH’, ‘INTERFACE’}</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'setup()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.setup',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.setup" ids="bpy.types.Gizmo.setup" module="bpy.types" names="bpy.types.Gizmo.setup"><desc_name xml:space="preserve">setup</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'invoke()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.invoke',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.invoke" ids="bpy.types.Gizmo.invoke" module="bpy.types" names="bpy.types.Gizmo.invoke"><desc_name xml:space="preserve">invoke</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">event</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph><paragraph>result</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>RUNNING_MODAL</literal> Running Modal, Keep the operator running with blender.</paragraph></list_item><list_item><paragraph><literal>CANCELLED</literal> Cancelled, When no action has been taken, operator exits.</paragraph></list_item><list_item><paragraph><literal>FINISHED</literal> Finished, When the operator is complete, operator exits.</paragraph></list_item><list_item><paragraph><literal>PASS_THROUGH</literal> Pass Through, Do nothing and pass the event on.</paragraph></list_item><list_item><paragraph><literal>INTERFACE</literal> Interface, Handled but not executed (popup menus).</paragraph></list_item></bullet_list></paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>enum set in {‘RUNNING_MODAL’, ‘CANCELLED’, ‘FINISHED’, ‘PASS_THROUGH’, ‘INTERFACE’}</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'exit()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.exit',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.exit" ids="bpy.types.Gizmo.exit" module="bpy.types" names="bpy.types.Gizmo.exit"><desc_name xml:space="preserve">exit</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter><desc_parameter xml:space="preserve">cancel</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">cancel</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) – Cancel, otherwise confirm</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select_refresh()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.select_refresh',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.select_refresh" ids="bpy.types.Gizmo.select_refresh" module="bpy.types" names="bpy.types.Gizmo.select_refresh"><desc_name xml:space="preserve">select_refresh</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_preset_box()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.draw_preset_box',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.draw_preset_box" ids="bpy.types.Gizmo.draw_preset_box" module="bpy.types" names="bpy.types.Gizmo.draw_preset_box"><desc_name xml:space="preserve">draw_preset_box</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">matrix</desc_parameter><desc_parameter xml:space="preserve">select_id=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Draw a box</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">matrix</literal_strong> (<literal_emphasis>float multi-dimensional array of 4 * 4 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – The matrix to transform</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">select_id</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Zero when not selecting</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_preset_arrow()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.draw_preset_arrow',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.draw_preset_arrow" ids="bpy.types.Gizmo.draw_preset_arrow" module="bpy.types" names="bpy.types.Gizmo.draw_preset_arrow"><desc_name xml:space="preserve">draw_preset_arrow</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">matrix</desc_parameter><desc_parameter xml:space="preserve">axis='POS_Z'</desc_parameter><desc_parameter xml:space="preserve">select_id=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Draw a box</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">matrix</literal_strong> (<literal_emphasis>float multi-dimensional array of 4 * 4 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – The matrix to transform</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">axis</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'POS_X'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'POS_Y'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'POS_Z'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NEG_X'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NEG_Y'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NEG_Z'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Arrow Orientation</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">select_id</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Zero when not selecting</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_preset_circle()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.draw_preset_circle',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.draw_preset_circle" ids="bpy.types.Gizmo.draw_preset_circle" module="bpy.types" names="bpy.types.Gizmo.draw_preset_circle"><desc_name xml:space="preserve">draw_preset_circle</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">matrix</desc_parameter><desc_parameter xml:space="preserve">axis='POS_Z'</desc_parameter><desc_parameter xml:space="preserve">select_id=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Draw a box</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">matrix</literal_strong> (<literal_emphasis>float multi-dimensional array of 4 * 4 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – The matrix to transform</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">axis</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'POS_X'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'POS_Y'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'POS_Z'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NEG_X'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NEG_Y'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'NEG_Z'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Arrow Orientation</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">select_id</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Zero when not selecting</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_preset_facemap()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.draw_preset_facemap',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.draw_preset_facemap" ids="bpy.types.Gizmo.draw_preset_facemap" module="bpy.types" names="bpy.types.Gizmo.draw_preset_facemap"><desc_name xml:space="preserve">draw_preset_facemap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">object</desc_parameter><desc_parameter xml:space="preserve">face_map</desc_parameter><desc_parameter xml:space="preserve">select_id=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Draw the face-map of a mesh object</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">object</literal_strong> (<reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (never None)) – Object</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">face_map</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Face map index</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">select_id</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Zero when not selecting</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'target_set_prop()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.target_set_prop',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.target_set_prop" ids="bpy.types.Gizmo.target_set_prop" module="bpy.types" names="bpy.types.Gizmo.target_set_prop"><desc_name xml:space="preserve">target_set_prop</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">target</desc_parameter><desc_parameter xml:space="preserve">data</desc_parameter><desc_parameter xml:space="preserve">property</desc_parameter><desc_parameter xml:space="preserve">index=-1</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">target</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Target property</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">data</literal_strong> (<reference internal="True" reftitle="bpy.types.AnyType" refuri="bpy.types.AnyType#bpy.types.AnyType"><literal classes="xref py py-class">AnyType</literal></reference>, (never None)) – Data from which to take property</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">property</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Identifier of property in data</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'target_set_operator()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.target_set_operator',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.target_set_operator" ids="bpy.types.Gizmo.target_set_operator" module="bpy.types" names="bpy.types.Gizmo.target_set_operator"><desc_name xml:space="preserve">target_set_operator</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">operator</desc_parameter><desc_parameter xml:space="preserve">index=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Operator to run when activating the gizmo (overrides property targets)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">operator</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Target operator</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">index</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>255</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Part index</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Operator properties to fill in</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.OperatorProperties" refuri="bpy.types.OperatorProperties#bpy.types.OperatorProperties"><literal classes="xref py py-class">OperatorProperties</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'target_is_valid()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.target_is_valid',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.target_is_valid" ids="bpy.types.Gizmo.target_is_valid" module="bpy.types" names="bpy.types.Gizmo.target_is_valid"><desc_name xml:space="preserve">target_is_valid</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">property</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">property</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Property identifier</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'draw_custom_shape()\ (bpy.types.Gizmo\ method)',\ u'bpy.types.Gizmo.draw_custom_shape',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.draw_custom_shape" ids="bpy.types.Gizmo.draw_custom_shape" module="bpy.types" names="bpy.types.Gizmo.draw_custom_shape"><desc_name xml:space="preserve">draw_custom_shape</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">shape</desc_parameter><desc_parameter xml:space="preserve">*</desc_parameter><desc_parameter xml:space="preserve">matrix=None</desc_parameter><desc_parameter xml:space="preserve">select_id=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Draw a shape created form <reference internal="True" refid="bpy.types.Gizmo.draw_custom_shape" reftitle="bpy.types.Gizmo.draw_custom_shape"><literal classes="xref py py-class">bpy.types.Gizmo.draw_custom_shape</literal></reference>.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">shape</literal_strong> (<literal_emphasis>Undefined.</literal_emphasis>) – The cached shape to draw.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">matrix</literal_strong> (<reference internal="True" reftitle="mathutils.Matrix" refuri="mathutils#mathutils.Matrix"><literal classes="xref py py-class">mathutils.Matrix</literal></reference>) – 4x4 matrix, when not given
                                                <reference internal="True" refid="bpy.types.Gizmo.matrix_world" reftitle="bpy.types.Gizmo.matrix_world"><literal classes="xref py py-class">bpy.types.Gizmo.matrix_world</literal></reference> is used.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">select_id</literal_strong> – The selection id.
                                                Only use when drawing within <reference internal="True" refid="bpy.types.Gizmo.draw_select" reftitle="bpy.types.Gizmo.draw_select"><literal classes="xref py py-class">bpy.types.Gizmo.draw_select</literal></reference>.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'new_custom_shape()\ (bpy.types.Gizmo\ static\ method)',\ u'bpy.types.Gizmo.new_custom_shape',\ '',\ None]"></index>
                <desc desctype="staticmethod" domain="py" noindex="False" objtype="staticmethod">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.new_custom_shape" ids="bpy.types.Gizmo.new_custom_shape" module="bpy.types" names="bpy.types.Gizmo.new_custom_shape"><desc_annotation xml:space="preserve">static </desc_annotation><desc_name xml:space="preserve">new_custom_shape</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">type</desc_parameter><desc_parameter xml:space="preserve">verts</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Create a new shape that can be passed to <reference internal="True" refid="bpy.types.Gizmo.draw_custom_shape" reftitle="bpy.types.Gizmo.draw_custom_shape"><literal classes="xref py py-class">bpy.types.Gizmo.draw_custom_shape</literal></reference>.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">type</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The type of shape to create in (POINTS, LINES, TRIS, LINE_STRIP).</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">verts</literal_strong> (<literal_emphasis>sequence of of 2D</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>3D coordinates.</literal_emphasis>) – Coordinates.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">display_name</literal_strong> (<literal_emphasis>Callable that takes a string and returns a string.</literal_emphasis>) – Optional callback that takes the full path, returns the name to display.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The newly created shape.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>Undefined (it may change)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Gizmo\ class\ method)',\ u'bpy.types.Gizmo.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.bl_rna_get_subclass" ids="bpy.types.Gizmo.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Gizmo.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Gizmo\ class\ method)',\ u'bpy.types.Gizmo.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Gizmo" first="False" fullname="Gizmo.bl_rna_get_subclass_py" ids="bpy.types.Gizmo.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Gizmo.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature first="False"><desc_name xml:space="preserve">target_get_range(target):</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Get the range for this target property.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">target</literal_strong> – Target property name.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The range of this property (min, max).</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>tuple pair.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature first="False"><desc_name xml:space="preserve">target_get_value(target):</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Get the value of this target property.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">target</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Target property name.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The value of the target property.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>Single value or array based on the target type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature first="False"><desc_name xml:space="preserve">target_set_handler(target, get, set, range=None):</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Assigns callbacks to a gizmos property.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">get</literal_strong> (<literal_emphasis>callable</literal_emphasis>) – Function that returns the value for this property (single value or sequence).</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">set</literal_strong> (<literal_emphasis>callable</literal_emphasis>) – Function that takes a single value argument and applies it.</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">range</literal_strong> (<literal_emphasis>callable</literal_emphasis>) – Function that returns a (min, max) tuple for gizmos that use a range.</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries=""></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature first="False"><desc_name xml:space="preserve">target_set_value(target):</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Set the value of this target property.</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">target</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Target property name.</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.gizmos" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.gizmos"><literal classes="xref py py-class">GizmoGroup.gizmos</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GizmoGroup.invoke_prepare" refuri="bpy.types.GizmoGroup#bpy.types.GizmoGroup.invoke_prepare"><literal classes="xref py py-class">GizmoGroup.invoke_prepare</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmos.new" refuri="bpy.types.Gizmos#bpy.types.Gizmos.new"><literal classes="xref py py-class">Gizmos.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmos.remove" refuri="bpy.types.Gizmos#bpy.types.Gizmos.remove"><literal classes="xref py py-class">Gizmos.remove</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
