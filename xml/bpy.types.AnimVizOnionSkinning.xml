<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.AnimVizOnionSkinning.rst">
    <section ids="module-bpy.types animvizonionskinning-bpy-struct" names="animvizonionskinning(bpy_struct)">
        <title>AnimVizOnionSkinning(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'AnimVizOnionSkinning\ (class\ in\ bpy.types)',\ u'bpy.types.AnimVizOnionSkinning',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="AnimVizOnionSkinning" ids="bpy.types.AnimVizOnionSkinning" module="bpy.types" names="bpy.types.AnimVizOnionSkinning"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">AnimVizOnionSkinning</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Onion Skinning settings for animation visualization</paragraph>
                <index entries="['single',\ u'frame_after\ (bpy.types.AnimVizOnionSkinning\ attribute)',\ u'bpy.types.AnimVizOnionSkinning.frame_after',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.frame_after" ids="bpy.types.AnimVizOnionSkinning.frame_after" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.frame_after"><desc_name xml:space="preserve">frame_after</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of frames to show after the current frame (only for ‘Around Current Frame’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 30], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_before\ (bpy.types.AnimVizOnionSkinning\ attribute)',\ u'bpy.types.AnimVizOnionSkinning.frame_before',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.frame_before" ids="bpy.types.AnimVizOnionSkinning.frame_before" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.frame_before"><desc_name xml:space="preserve">frame_before</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of frames to show before the current frame (only for ‘Around Current Frame’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 30], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_end\ (bpy.types.AnimVizOnionSkinning\ attribute)',\ u'bpy.types.AnimVizOnionSkinning.frame_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.frame_end" ids="bpy.types.AnimVizOnionSkinning.frame_end" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.frame_end"><desc_name xml:space="preserve">frame_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>End frame of range of Ghosts to display (not for ‘Around Current Frame’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_start\ (bpy.types.AnimVizOnionSkinning\ attribute)',\ u'bpy.types.AnimVizOnionSkinning.frame_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.frame_start" ids="bpy.types.AnimVizOnionSkinning.frame_start" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.frame_start"><desc_name xml:space="preserve">frame_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Starting frame of range of Ghosts to display (not for ‘Around Current Frame’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_step\ (bpy.types.AnimVizOnionSkinning\ attribute)',\ u'bpy.types.AnimVizOnionSkinning.frame_step',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.frame_step" ids="bpy.types.AnimVizOnionSkinning.frame_step" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.frame_step"><desc_name xml:space="preserve">frame_step</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of frames between ghosts shown (not for ‘On Keyframes’ Onion-skinning method)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 20], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_only_selected\ (bpy.types.AnimVizOnionSkinning\ attribute)',\ u'bpy.types.AnimVizOnionSkinning.show_only_selected',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.show_only_selected" ids="bpy.types.AnimVizOnionSkinning.show_only_selected" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.show_only_selected"><desc_name xml:space="preserve">show_only_selected</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>For Pose-Mode drawing, only draw ghosts for selected bones</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'type\ (bpy.types.AnimVizOnionSkinning\ attribute)',\ u'bpy.types.AnimVizOnionSkinning.type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.type" ids="bpy.types.AnimVizOnionSkinning.type" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Method used for determining what ghosts get drawn</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NONE</literal> No Ghosts, Do not show any ghosts.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CURRENT_FRAME</literal> Around Current Frame, Show ghosts from around the current frame.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>RANGE</literal> In Range, Show ghosts for the specified frame range.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>KEYS</literal> On Keyframes, Show ghosts on keyframes.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘CURRENT_FRAME’, ‘RANGE’, ‘KEYS’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.AnimVizOnionSkinning\ class\ method)',\ u'bpy.types.AnimVizOnionSkinning.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.bl_rna_get_subclass" ids="bpy.types.AnimVizOnionSkinning.bl_rna_get_subclass" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.AnimVizOnionSkinning\ class\ method)',\ u'bpy.types.AnimVizOnionSkinning.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AnimVizOnionSkinning" first="False" fullname="AnimVizOnionSkinning.bl_rna_get_subclass_py" ids="bpy.types.AnimVizOnionSkinning.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.AnimVizOnionSkinning.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AnimViz.onion_skin_frames" refuri="bpy.types.AnimViz#bpy.types.AnimViz.onion_skin_frames"><literal classes="xref py py-class">AnimViz.onion_skin_frames</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
