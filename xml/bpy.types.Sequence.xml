<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Sequence.rst">
    <section ids="module-bpy.types sequence-bpy-struct" names="sequence(bpy_struct)">
        <title>Sequence(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.EffectSequence" refuri="bpy.types.EffectSequence#bpy.types.EffectSequence"><literal classes="xref py py-class">EffectSequence</literal></reference>, <reference internal="True" reftitle="bpy.types.ImageSequence" refuri="bpy.types.ImageSequence#bpy.types.ImageSequence"><literal classes="xref py py-class">ImageSequence</literal></reference>, <reference internal="True" reftitle="bpy.types.MaskSequence" refuri="bpy.types.MaskSequence#bpy.types.MaskSequence"><literal classes="xref py py-class">MaskSequence</literal></reference>, <reference internal="True" reftitle="bpy.types.MetaSequence" refuri="bpy.types.MetaSequence#bpy.types.MetaSequence"><literal classes="xref py py-class">MetaSequence</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieClipSequence" refuri="bpy.types.MovieClipSequence#bpy.types.MovieClipSequence"><literal classes="xref py py-class">MovieClipSequence</literal></reference>, <reference internal="True" reftitle="bpy.types.MovieSequence" refuri="bpy.types.MovieSequence#bpy.types.MovieSequence"><literal classes="xref py py-class">MovieSequence</literal></reference>, <reference internal="True" reftitle="bpy.types.SceneSequence" refuri="bpy.types.SceneSequence#bpy.types.SceneSequence"><literal classes="xref py py-class">SceneSequence</literal></reference>, <reference internal="True" reftitle="bpy.types.SoundSequence" refuri="bpy.types.SoundSequence#bpy.types.SoundSequence"><literal classes="xref py py-class">SoundSequence</literal></reference></paragraph>
        <index entries="['single',\ u'Sequence\ (class\ in\ bpy.types)',\ u'bpy.types.Sequence',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Sequence" ids="bpy.types.Sequence" module="bpy.types" names="bpy.types.Sequence"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Sequence</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Sequence strip in the sequence editor</paragraph>
                <index entries="['single',\ u'blend_alpha\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.blend_alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.blend_alpha" ids="bpy.types.Sequence.blend_alpha" module="bpy.types" names="bpy.types.Sequence.blend_alpha"><desc_name xml:space="preserve">blend_alpha</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Percentage of how much the strip’s colors affect other strips</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'blend_type\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.blend_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.blend_type" ids="bpy.types.Sequence.blend_type" module="bpy.types" names="bpy.types.Sequence.blend_type"><desc_name xml:space="preserve">blend_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Method for controlling how the strip combines with other strips</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘REPLACE’, ‘CROSS’, ‘DARKEN’, ‘MULTIPLY’, ‘BURN’, ‘LINEAR_BURN’, ‘LIGHTEN’, ‘SCREEN’, ‘DODGE’, ‘ADD’, ‘OVERLAY’, ‘SOFT_LIGHT’, ‘HARD_LIGHT’, ‘VIVID_LIGHT’, ‘LINEAR_LIGHT’, ‘PIN_LIGHT’, ‘DIFFERENCE’, ‘EXCLUSION’, ‘SUBTRACT’, ‘HUE’, ‘SATURATION’, ‘COLOR’, ‘VALUE’, ‘ALPHA_OVER’, ‘ALPHA_UNDER’, ‘GAMMA_CROSS’, ‘OVER_DROP’], default ‘REPLACE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'channel\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.channel',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.channel" ids="bpy.types.Sequence.channel" module="bpy.types" names="bpy.types.Sequence.channel"><desc_name xml:space="preserve">channel</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Y position of the sequence strip</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 32], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'effect_fader\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.effect_fader',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.effect_fader" ids="bpy.types.Sequence.effect_fader" module="bpy.types" names="bpy.types.Sequence.effect_fader"><desc_name xml:space="preserve">effect_fader</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Custom fade value</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Sequence.frame_duration\ (in\ module\ bpy.types)',\ u'bpy.types.Sequence.frame_duration',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_duration" ids="bpy.types.Sequence.frame_duration" module="bpy.types" names="bpy.types.Sequence.frame_duration"><desc_name xml:space="preserve">frame_duration</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>The length of the contents of this strip before the handles are applied</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 1048574], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_final_duration\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_final_duration',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_final_duration" ids="bpy.types.Sequence.frame_final_duration" module="bpy.types" names="bpy.types.Sequence.frame_final_duration"><desc_name xml:space="preserve">frame_final_duration</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>The length of the contents of this strip after the handles are applied</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 1048574], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_final_end\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_final_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_final_end" ids="bpy.types.Sequence.frame_final_end" module="bpy.types" names="bpy.types.Sequence.frame_final_end"><desc_name xml:space="preserve">frame_final_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>End frame displayed in the sequence editor after offsets are applied</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_final_start\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_final_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_final_start" ids="bpy.types.Sequence.frame_final_start" module="bpy.types" names="bpy.types.Sequence.frame_final_start"><desc_name xml:space="preserve">frame_final_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Start frame displayed in the sequence editor after offsets are applied, setting this is equivalent to moving the handle, not the actual start frame</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_offset_end\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_offset_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_offset_end" ids="bpy.types.Sequence.frame_offset_end" module="bpy.types" names="bpy.types.Sequence.frame_offset_end"><desc_name xml:space="preserve">frame_offset_end</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_offset_start\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_offset_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_offset_start" ids="bpy.types.Sequence.frame_offset_start" module="bpy.types" names="bpy.types.Sequence.frame_offset_start"><desc_name xml:space="preserve">frame_offset_start</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_start\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_start" ids="bpy.types.Sequence.frame_start" module="bpy.types" names="bpy.types.Sequence.frame_start"><desc_name xml:space="preserve">frame_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>X position where the strip begins</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_still_end\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_still_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_still_end" ids="bpy.types.Sequence.frame_still_end" module="bpy.types" names="bpy.types.Sequence.frame_still_end"><desc_name xml:space="preserve">frame_still_end</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1048574], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_still_start\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.frame_still_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.frame_still_start" ids="bpy.types.Sequence.frame_still_start" module="bpy.types" names="bpy.types.Sequence.frame_still_start"><desc_name xml:space="preserve">frame_still_start</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1048574], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'lock\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.lock',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.lock" ids="bpy.types.Sequence.lock" module="bpy.types" names="bpy.types.Sequence.lock"><desc_name xml:space="preserve">lock</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Lock strip so that it cannot be transformed</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Sequence.modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.Sequence.modifiers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.modifiers" ids="bpy.types.Sequence.modifiers" module="bpy.types" names="bpy.types.Sequence.modifiers"><desc_name xml:space="preserve">modifiers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Modifiers affecting this strip</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifiers" refuri="bpy.types.SequenceModifiers#bpy.types.SequenceModifiers"><literal classes="xref py py-class">SequenceModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.SequenceModifier" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier"><literal classes="xref py py-class">SequenceModifier</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'mute\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.mute',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.mute" ids="bpy.types.Sequence.mute" module="bpy.types" names="bpy.types.Sequence.mute"><desc_name xml:space="preserve">mute</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Disable strip so that it cannot be viewed in the output</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'name\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.name" ids="bpy.types.Sequence.name" module="bpy.types" names="bpy.types.Sequence.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.select',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.select" ids="bpy.types.Sequence.select" module="bpy.types" names="bpy.types.Sequence.select"><desc_name xml:space="preserve">select</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select_left_handle\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.select_left_handle',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.select_left_handle" ids="bpy.types.Sequence.select_left_handle" module="bpy.types" names="bpy.types.Sequence.select_left_handle"><desc_name xml:space="preserve">select_left_handle</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'select_right_handle\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.select_right_handle',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.select_right_handle" ids="bpy.types.Sequence.select_right_handle" module="bpy.types" names="bpy.types.Sequence.select_right_handle"><desc_name xml:space="preserve">select_right_handle</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'speed_factor\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.speed_factor',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.speed_factor" ids="bpy.types.Sequence.speed_factor" module="bpy.types" names="bpy.types.Sequence.speed_factor"><desc_name xml:space="preserve">speed_factor</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Multiply the current speed of the sequence with this number or remap current frame to this frame</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Sequence.type\ (in\ module\ bpy.types)',\ u'bpy.types.Sequence.type',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.type" ids="bpy.types.Sequence.type" module="bpy.types" names="bpy.types.Sequence.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘IMAGE’, ‘META’, ‘SCENE’, ‘MOVIE’, ‘MOVIECLIP’, ‘MASK’, ‘SOUND’, ‘CROSS’, ‘ADD’, ‘SUBTRACT’, ‘ALPHA_OVER’, ‘ALPHA_UNDER’, ‘GAMMA_CROSS’, ‘MULTIPLY’, ‘OVER_DROP’, ‘WIPE’, ‘GLOW’, ‘TRANSFORM’, ‘COLOR’, ‘SPEED’, ‘MULTICAM’, ‘ADJUSTMENT’, ‘GAUSSIAN_BLUR’, ‘TEXT’, ‘COLORMIX’], default ‘IMAGE’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_default_fade\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.use_default_fade',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.use_default_fade" ids="bpy.types.Sequence.use_default_fade" module="bpy.types" names="bpy.types.Sequence.use_default_fade"><desc_name xml:space="preserve">use_default_fade</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Fade effect using the built-in default (usually make transition as long as effect strip)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_linear_modifiers\ (bpy.types.Sequence\ attribute)',\ u'bpy.types.Sequence.use_linear_modifiers',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.use_linear_modifiers" ids="bpy.types.Sequence.use_linear_modifiers" module="bpy.types" names="bpy.types.Sequence.use_linear_modifiers"><desc_name xml:space="preserve">use_linear_modifiers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Calculate modifiers in linear space instead of sequencer’s space</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update()\ (bpy.types.Sequence\ method)',\ u'bpy.types.Sequence.update',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.update" ids="bpy.types.Sequence.update" module="bpy.types" names="bpy.types.Sequence.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">data=False</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update the strip dimensions</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">data</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Data, Update strip data</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'strip_elem_from_frame()\ (bpy.types.Sequence\ method)',\ u'bpy.types.Sequence.strip_elem_from_frame',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.strip_elem_from_frame" ids="bpy.types.Sequence.strip_elem_from_frame" module="bpy.types" names="bpy.types.Sequence.strip_elem_from_frame"><desc_name xml:space="preserve">strip_elem_from_frame</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">frame</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the strip element from a given frame or None</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1048574</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1048574</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Frame, The frame to get the strip element from</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>strip element of the current frame</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SequenceElement" refuri="bpy.types.SequenceElement#bpy.types.SequenceElement"><literal classes="xref py py-class">SequenceElement</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'swap()\ (bpy.types.Sequence\ method)',\ u'bpy.types.Sequence.swap',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.swap" ids="bpy.types.Sequence.swap" module="bpy.types" names="bpy.types.Sequence.swap"><desc_name xml:space="preserve">swap</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">other</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>swap</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">other</literal_strong> (<reference internal="True" refid="bpy.types.Sequence" reftitle="bpy.types.Sequence"><literal classes="xref py py-class">Sequence</literal></reference>, (never None)) – Other</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Sequence\ class\ method)',\ u'bpy.types.Sequence.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.bl_rna_get_subclass" ids="bpy.types.Sequence.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Sequence.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Sequence\ class\ method)',\ u'bpy.types.Sequence.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Sequence" first="False" fullname="Sequence.bl_rna_get_subclass_py" ids="bpy.types.Sequence.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Sequence.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.selected_editable_sequences" refuri="bpy.context#bpy.context.selected_editable_sequences"><literal classes="xref py py-mod">bpy.context.selected_editable_sequences</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.selected_sequences" refuri="bpy.context#bpy.context.selected_sequences"><literal classes="xref py py-mod">bpy.context.selected_sequences</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.sequences" refuri="bpy.context#bpy.context.sequences"><literal classes="xref py py-mod">bpy.context.sequences</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AddSequence.input_1" refuri="bpy.types.AddSequence#bpy.types.AddSequence.input_1"><literal classes="xref py py-class">AddSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AddSequence.input_2" refuri="bpy.types.AddSequence#bpy.types.AddSequence.input_2"><literal classes="xref py py-class">AddSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AlphaOverSequence.input_1" refuri="bpy.types.AlphaOverSequence#bpy.types.AlphaOverSequence.input_1"><literal classes="xref py py-class">AlphaOverSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AlphaOverSequence.input_2" refuri="bpy.types.AlphaOverSequence#bpy.types.AlphaOverSequence.input_2"><literal classes="xref py py-class">AlphaOverSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AlphaUnderSequence.input_1" refuri="bpy.types.AlphaUnderSequence#bpy.types.AlphaUnderSequence.input_1"><literal classes="xref py py-class">AlphaUnderSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.AlphaUnderSequence.input_2" refuri="bpy.types.AlphaUnderSequence#bpy.types.AlphaUnderSequence.input_2"><literal classes="xref py py-class">AlphaUnderSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ColorMixSequence.input_1" refuri="bpy.types.ColorMixSequence#bpy.types.ColorMixSequence.input_1"><literal classes="xref py py-class">ColorMixSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ColorMixSequence.input_2" refuri="bpy.types.ColorMixSequence#bpy.types.ColorMixSequence.input_2"><literal classes="xref py py-class">ColorMixSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CrossSequence.input_1" refuri="bpy.types.CrossSequence#bpy.types.CrossSequence.input_1"><literal classes="xref py py-class">CrossSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CrossSequence.input_2" refuri="bpy.types.CrossSequence#bpy.types.CrossSequence.input_2"><literal classes="xref py py-class">CrossSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GammaCrossSequence.input_1" refuri="bpy.types.GammaCrossSequence#bpy.types.GammaCrossSequence.input_1"><literal classes="xref py py-class">GammaCrossSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GammaCrossSequence.input_2" refuri="bpy.types.GammaCrossSequence#bpy.types.GammaCrossSequence.input_2"><literal classes="xref py py-class">GammaCrossSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GaussianBlurSequence.input_1" refuri="bpy.types.GaussianBlurSequence#bpy.types.GaussianBlurSequence.input_1"><literal classes="xref py py-class">GaussianBlurSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.GlowSequence.input_1" refuri="bpy.types.GlowSequence#bpy.types.GlowSequence.input_1"><literal classes="xref py py-class">GlowSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MetaSequence.sequences" refuri="bpy.types.MetaSequence#bpy.types.MetaSequence.sequences"><literal classes="xref py py-class">MetaSequence.sequences</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MultiplySequence.input_1" refuri="bpy.types.MultiplySequence#bpy.types.MultiplySequence.input_1"><literal classes="xref py py-class">MultiplySequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MultiplySequence.input_2" refuri="bpy.types.MultiplySequence#bpy.types.MultiplySequence.input_2"><literal classes="xref py py-class">MultiplySequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.OverDropSequence.input_1" refuri="bpy.types.OverDropSequence#bpy.types.OverDropSequence.input_1"><literal classes="xref py py-class">OverDropSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.OverDropSequence.input_2" refuri="bpy.types.OverDropSequence#bpy.types.OverDropSequence.input_2"><literal classes="xref py py-class">OverDropSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.Sequence.swap" reftitle="bpy.types.Sequence.swap"><literal classes="xref py py-class">Sequence.swap</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceEditor.active_strip" refuri="bpy.types.SequenceEditor#bpy.types.SequenceEditor.active_strip"><literal classes="xref py py-class">SequenceEditor.active_strip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceEditor.meta_stack" refuri="bpy.types.SequenceEditor#bpy.types.SequenceEditor.meta_stack"><literal classes="xref py py-class">SequenceEditor.meta_stack</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceEditor.sequences" refuri="bpy.types.SequenceEditor#bpy.types.SequenceEditor.sequences"><literal classes="xref py py-class">SequenceEditor.sequences</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceEditor.sequences_all" refuri="bpy.types.SequenceEditor#bpy.types.SequenceEditor.sequences_all"><literal classes="xref py py-class">SequenceEditor.sequences_all</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SequenceModifier.input_mask_strip" refuri="bpy.types.SequenceModifier#bpy.types.SequenceModifier.input_mask_strip"><literal classes="xref py py-class">SequenceModifier.input_mask_strip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_clip" refuri="bpy.types.Sequences#bpy.types.Sequences.new_clip"><literal classes="xref py py-class">Sequences.new_clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_effect" refuri="bpy.types.Sequences#bpy.types.Sequences.new_effect"><literal classes="xref py py-class">Sequences.new_effect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_effect" refuri="bpy.types.Sequences#bpy.types.Sequences.new_effect"><literal classes="xref py py-class">Sequences.new_effect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_effect" refuri="bpy.types.Sequences#bpy.types.Sequences.new_effect"><literal classes="xref py py-class">Sequences.new_effect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_effect" refuri="bpy.types.Sequences#bpy.types.Sequences.new_effect"><literal classes="xref py py-class">Sequences.new_effect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_image" refuri="bpy.types.Sequences#bpy.types.Sequences.new_image"><literal classes="xref py py-class">Sequences.new_image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_mask" refuri="bpy.types.Sequences#bpy.types.Sequences.new_mask"><literal classes="xref py py-class">Sequences.new_mask</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_movie" refuri="bpy.types.Sequences#bpy.types.Sequences.new_movie"><literal classes="xref py py-class">Sequences.new_movie</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_scene" refuri="bpy.types.Sequences#bpy.types.Sequences.new_scene"><literal classes="xref py py-class">Sequences.new_scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_sound" refuri="bpy.types.Sequences#bpy.types.Sequences.new_sound"><literal classes="xref py py-class">Sequences.new_sound</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.remove" refuri="bpy.types.Sequences#bpy.types.Sequences.remove"><literal classes="xref py py-class">Sequences.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SpeedControlSequence.input_1" refuri="bpy.types.SpeedControlSequence#bpy.types.SpeedControlSequence.input_1"><literal classes="xref py py-class">SpeedControlSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SubtractSequence.input_1" refuri="bpy.types.SubtractSequence#bpy.types.SubtractSequence.input_1"><literal classes="xref py py-class">SubtractSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SubtractSequence.input_2" refuri="bpy.types.SubtractSequence#bpy.types.SubtractSequence.input_2"><literal classes="xref py py-class">SubtractSequence.input_2</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.TransformSequence.input_1" refuri="bpy.types.TransformSequence#bpy.types.TransformSequence.input_1"><literal classes="xref py py-class">TransformSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.WipeSequence.input_1" refuri="bpy.types.WipeSequence#bpy.types.WipeSequence.input_1"><literal classes="xref py py-class">WipeSequence.input_1</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.WipeSequence.input_2" refuri="bpy.types.WipeSequence#bpy.types.WipeSequence.input_2"><literal classes="xref py py-class">WipeSequence.input_2</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
