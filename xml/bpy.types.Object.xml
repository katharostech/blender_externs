<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Object.rst">
    <section ids="module-bpy.types object-id" names="object(id)">
        <title>Object(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <section ids="basic-object-operations-example" names="basic\ object\ operations\ example">
            <title>Basic Object Operations Example</title>
            <paragraph>This script demonstrates basic operations on object like creating new
                object, placing it into a view layer, selecting it and making it active.</paragraph>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.Object.py" xml:space="preserve">
import bpy
from mathutils import Matrix

view_layer = bpy.context.view_layer

# Create new light datablock.
light_data = bpy.data.lights.new(name="New Light", type='POINT')

# Create new object with our light datablock.
light_object = bpy.data.objects.new(name="New Light", object_data=light_data)

# Link light object to the active collection of current view layer,
# so that it'll appear in the current scene.
view_layer.active_layer_collection.collection.objects.link(light_object)

# Place light to a specified location.
light_object.location = (5.0, 5.0, 5.0)

# And finally select it and make it active.
light_object.select_set(True)
view_layer.objects.active = light_object
</literal_block>
            <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
            <index entries="['single',\ u'Object\ (class\ in\ bpy.types)',\ u'bpy.types.Object',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="Object" ids="bpy.types.Object" module="bpy.types" names="bpy.types.Object"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Object</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Object data-block defining an object in a scene</paragraph>
                    <index entries="['single',\ u'active_material\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.active_material',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.active_material" ids="bpy.types.Object.active_material" module="bpy.types" names="bpy.types.Object.active_material"><desc_name xml:space="preserve">active_material</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Active material being displayed</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Material" refuri="bpy.types.Material#bpy.types.Material"><literal classes="xref py py-class">Material</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'active_material_index\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.active_material_index',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.active_material_index" ids="bpy.types.Object.active_material_index" module="bpy.types" names="bpy.types.Object.active_material_index"><desc_name xml:space="preserve">active_material_index</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Index of active material slot</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.active_shape_key\ (in\ module\ bpy.types)',\ u'bpy.types.Object.active_shape_key',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.active_shape_key" ids="bpy.types.Object.active_shape_key" module="bpy.types" names="bpy.types.Object.active_shape_key"><desc_name xml:space="preserve">active_shape_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Current shape key</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ShapeKey" refuri="bpy.types.ShapeKey#bpy.types.ShapeKey"><literal classes="xref py py-class">ShapeKey</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'active_shape_key_index\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.active_shape_key_index',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.active_shape_key_index" ids="bpy.types.Object.active_shape_key_index" module="bpy.types" names="bpy.types.Object.active_shape_key_index"><desc_name xml:space="preserve">active_shape_key_index</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Current shape key index</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [-32768, 32767], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.Object.animation_data',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.animation_data" ids="bpy.types.Object.animation_data" module="bpy.types" names="bpy.types.Object.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Animation data for this data-block</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.animation_visualization\ (in\ module\ bpy.types)',\ u'bpy.types.Object.animation_visualization',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.animation_visualization" ids="bpy.types.Object.animation_visualization" module="bpy.types" names="bpy.types.Object.animation_visualization"><desc_name xml:space="preserve">animation_visualization</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Animation data for this data-block</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.AnimViz" refuri="bpy.types.AnimViz#bpy.types.AnimViz"><literal classes="xref py py-class">AnimViz</literal></reference>, (readonly, never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.bound_box\ (in\ module\ bpy.types)',\ u'bpy.types.Object.bound_box',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.bound_box" ids="bpy.types.Object.bound_box" module="bpy.types" names="bpy.types.Object.bound_box"><desc_name xml:space="preserve">bound_box</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object’s bounding box in object-space coordinates, all values are -1.0 when not available</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 8 * 3 items in [-inf, inf], default ((0.0, 0.0, 0.0), (0.0, 0.0, 0.0), (0.0, 0.0, 0.0), (0.0, 0.0, 0.0), (0.0, 0.0, 0.0), (0.0, 0.0, 0.0), (0.0, 0.0, 0.0), (0.0, 0.0, 0.0)), (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.collision\ (in\ module\ bpy.types)',\ u'bpy.types.Object.collision',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.collision" ids="bpy.types.Object.collision" module="bpy.types" names="bpy.types.Object.collision"><desc_name xml:space="preserve">collision</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Settings for using the object as a collider in physics simulation</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.CollisionSettings" refuri="bpy.types.CollisionSettings#bpy.types.CollisionSettings"><literal classes="xref py py-class">CollisionSettings</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'color\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.color',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.color" ids="bpy.types.Object.color" module="bpy.types" names="bpy.types.Object.color"><desc_name xml:space="preserve">color</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object color and alpha, used when faces have the ObColor mode enabled</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 4 items in [0, inf], default (0.0, 0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.constraints\ (in\ module\ bpy.types)',\ u'bpy.types.Object.constraints',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.constraints" ids="bpy.types.Object.constraints" module="bpy.types" names="bpy.types.Object.constraints"><desc_name xml:space="preserve">constraints</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Constraints affecting the transformation of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectConstraints" refuri="bpy.types.ObjectConstraints#bpy.types.ObjectConstraints"><literal classes="xref py py-class">ObjectConstraints</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Constraint" refuri="bpy.types.Constraint#bpy.types.Constraint"><literal classes="xref py py-class">Constraint</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.cycles\ (in\ module\ bpy.types)',\ u'bpy.types.Object.cycles',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.cycles" ids="bpy.types.Object.cycles" module="bpy.types" names="bpy.types.Object.cycles"><desc_name xml:space="preserve">cycles</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Cycles object settings</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.CyclesObjectSettings" refuri="bpy.types.CyclesObjectSettings#bpy.types.CyclesObjectSettings"><literal classes="xref py py-class">CyclesObjectSettings</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.cycles_visibility\ (in\ module\ bpy.types)',\ u'bpy.types.Object.cycles_visibility',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.cycles_visibility" ids="bpy.types.Object.cycles_visibility" module="bpy.types" names="bpy.types.Object.cycles_visibility"><desc_name xml:space="preserve">cycles_visibility</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Cycles visibility settings</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.CyclesVisibilitySettings" refuri="bpy.types.CyclesVisibilitySettings#bpy.types.CyclesVisibilitySettings"><literal classes="xref py py-class">CyclesVisibilitySettings</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'data\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.data',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.data" ids="bpy.types.Object.data" module="bpy.types" names="bpy.types.Object.data"><desc_name xml:space="preserve">data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object data</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'delta_location\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.delta_location',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.delta_location" ids="bpy.types.Object.delta_location" module="bpy.types" names="bpy.types.Object.delta_location"><desc_name xml:space="preserve">delta_location</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Extra translation added to the location of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'delta_rotation_euler\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.delta_rotation_euler',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.delta_rotation_euler" ids="bpy.types.Object.delta_rotation_euler" module="bpy.types" names="bpy.types.Object.delta_rotation_euler"><desc_name xml:space="preserve">delta_rotation_euler</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Extra rotation added to the rotation of the object (when using Euler rotations)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'delta_rotation_quaternion\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.delta_rotation_quaternion',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.delta_rotation_quaternion" ids="bpy.types.Object.delta_rotation_quaternion" module="bpy.types" names="bpy.types.Object.delta_rotation_quaternion"><desc_name xml:space="preserve">delta_rotation_quaternion</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Extra rotation added to the rotation of the object (when using Quaternion rotations)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 4 items in [-inf, inf], default (1.0, 0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'delta_scale\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.delta_scale',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.delta_scale" ids="bpy.types.Object.delta_scale" module="bpy.types" names="bpy.types.Object.delta_scale"><desc_name xml:space="preserve">delta_scale</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Extra scaling added to the scale of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (1.0, 1.0, 1.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'dimensions\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.dimensions',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.dimensions" ids="bpy.types.Object.dimensions" module="bpy.types" names="bpy.types.Object.dimensions"><desc_name xml:space="preserve">dimensions</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Absolute bounding box dimensions of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.display\ (in\ module\ bpy.types)',\ u'bpy.types.Object.display',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.display" ids="bpy.types.Object.display" module="bpy.types" names="bpy.types.Object.display"><desc_name xml:space="preserve">display</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object display settings for 3d viewport</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectDisplay" refuri="bpy.types.ObjectDisplay#bpy.types.ObjectDisplay"><literal classes="xref py py-class">ObjectDisplay</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'display_bounds_type\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.display_bounds_type',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.display_bounds_type" ids="bpy.types.Object.display_bounds_type" module="bpy.types" names="bpy.types.Object.display_bounds_type"><desc_name xml:space="preserve">display_bounds_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object boundary display type</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph><literal>BOX</literal> Box, Display bounds as box.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>SPHERE</literal> Sphere, Display bounds as sphere.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>CYLINDER</literal> Cylinder, Display bounds as cylinder.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>CONE</literal> Cone, Display bounds as cone.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>CAPSULE</literal> Capsule, Display bounds as capsule.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘BOX’, ‘SPHERE’, ‘CYLINDER’, ‘CONE’, ‘CAPSULE’], default ‘BOX’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'display_type\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.display_type',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.display_type" ids="bpy.types.Object.display_type" module="bpy.types" names="bpy.types.Object.display_type"><desc_name xml:space="preserve">display_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>How to display object in viewport</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph><literal>BOUNDS</literal> Bounds, Display the bounds of the object.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>WIRE</literal> Wire, Display the object as a wireframe.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>SOLID</literal> Solid, Display the object as a solid (if solid drawing is enabled in the viewport).</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>TEXTURED</literal> Textured, Display the object with textures (if textures are enabled in the viewport).</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘BOUNDS’, ‘WIRE’, ‘SOLID’, ‘TEXTURED’], default ‘BOUNDS’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'empty_display_size\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.empty_display_size',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.empty_display_size" ids="bpy.types.Object.empty_display_size" module="bpy.types" names="bpy.types.Object.empty_display_size"><desc_name xml:space="preserve">empty_display_size</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Size of display for empties in the viewport</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float in [0.0001, 1000], default 0.0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'empty_display_type\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.empty_display_type',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.empty_display_type" ids="bpy.types.Object.empty_display_type" module="bpy.types" names="bpy.types.Object.empty_display_type"><desc_name xml:space="preserve">empty_display_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Viewport display style for empties</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘PLAIN_AXES’, ‘ARROWS’, ‘SINGLE_ARROW’, ‘CIRCLE’, ‘CUBE’, ‘SPHERE’, ‘CONE’, ‘IMAGE’], default ‘PLAIN_AXES’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'empty_image_depth\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.empty_image_depth',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.empty_image_depth" ids="bpy.types.Object.empty_image_depth" module="bpy.types" names="bpy.types.Object.empty_image_depth"><desc_name xml:space="preserve">empty_image_depth</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Determine which other objects will occlude the image</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘DEFAULT’, ‘FRONT’, ‘BACK’], default ‘DEFAULT’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'empty_image_offset\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.empty_image_offset',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.empty_image_offset" ids="bpy.types.Object.empty_image_offset" module="bpy.types" names="bpy.types.Object.empty_image_offset"><desc_name xml:space="preserve">empty_image_offset</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Origin offset distance</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 2 items in [-inf, inf], default (0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.face_maps\ (in\ module\ bpy.types)',\ u'bpy.types.Object.face_maps',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.face_maps" ids="bpy.types.Object.face_maps" module="bpy.types" names="bpy.types.Object.face_maps"><desc_name xml:space="preserve">face_maps</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Maps of faces of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.FaceMaps" refuri="bpy.types.FaceMaps#bpy.types.FaceMaps"><literal classes="xref py py-class">FaceMaps</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.FaceMap" refuri="bpy.types.FaceMap#bpy.types.FaceMap"><literal classes="xref py py-class">FaceMap</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.field\ (in\ module\ bpy.types)',\ u'bpy.types.Object.field',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.field" ids="bpy.types.Object.field" module="bpy.types" names="bpy.types.Object.field"><desc_name xml:space="preserve">field</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Settings for using the object as a field in physics simulation</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.FieldSettings" refuri="bpy.types.FieldSettings#bpy.types.FieldSettings"><literal classes="xref py py-class">FieldSettings</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'grease_pencil\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.grease_pencil',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.grease_pencil" ids="bpy.types.Object.grease_pencil" module="bpy.types" names="bpy.types.Object.grease_pencil"><desc_name xml:space="preserve">grease_pencil</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Grease Pencil data-block (deprecated)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.GreasePencil" refuri="bpy.types.GreasePencil#bpy.types.GreasePencil"><literal classes="xref py py-class">GreasePencil</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.grease_pencil_modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.Object.grease_pencil_modifiers',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.grease_pencil_modifiers" ids="bpy.types.Object.grease_pencil_modifiers" module="bpy.types" names="bpy.types.Object.grease_pencil_modifiers"><desc_name xml:space="preserve">grease_pencil_modifiers</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Modifiers affecting the data of the grease pencil object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectGpencilModifiers" refuri="bpy.types.ObjectGpencilModifiers#bpy.types.ObjectGpencilModifiers"><literal classes="xref py py-class">ObjectGpencilModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.GpencilModifier" refuri="bpy.types.GpencilModifier#bpy.types.GpencilModifier"><literal classes="xref py py-class">GpencilModifier</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'hide_render\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.hide_render',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.hide_render" ids="bpy.types.Object.hide_render" module="bpy.types" names="bpy.types.Object.hide_render"><desc_name xml:space="preserve">hide_render</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Disable object in renders</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'hide_select\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.hide_select',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.hide_select" ids="bpy.types.Object.hide_select" module="bpy.types" names="bpy.types.Object.hide_select"><desc_name xml:space="preserve">hide_select</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Disable object selection in the viewport</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'hide_viewport\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.hide_viewport',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.hide_viewport" ids="bpy.types.Object.hide_viewport" module="bpy.types" names="bpy.types.Object.hide_viewport"><desc_name xml:space="preserve">hide_viewport</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Disable object in the viewport</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.image_user\ (in\ module\ bpy.types)',\ u'bpy.types.Object.image_user',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.image_user" ids="bpy.types.Object.image_user" module="bpy.types" names="bpy.types.Object.image_user"><desc_name xml:space="preserve">image_user</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Parameters defining which layer, pass and frame of the image is displayed</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ImageUser" refuri="bpy.types.ImageUser#bpy.types.ImageUser"><literal classes="xref py py-class">ImageUser</literal></reference>, (readonly, never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'instance_collection\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.instance_collection',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.instance_collection" ids="bpy.types.Object.instance_collection" module="bpy.types" names="bpy.types.Object.instance_collection"><desc_name xml:space="preserve">instance_collection</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Instance an existing collection</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Collection" refuri="bpy.types.Collection#bpy.types.Collection"><literal classes="xref py py-class">Collection</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'instance_faces_scale\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.instance_faces_scale',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.instance_faces_scale" ids="bpy.types.Object.instance_faces_scale" module="bpy.types" names="bpy.types.Object.instance_faces_scale"><desc_name xml:space="preserve">instance_faces_scale</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Scale the face instance objects</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float in [0.001, 10000], default 0.0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'instance_frames_end\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.instance_frames_end',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.instance_frames_end" ids="bpy.types.Object.instance_frames_end" module="bpy.types" names="bpy.types.Object.instance_frames_end"><desc_name xml:space="preserve">instance_frames_end</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>End frame for frame instances</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [-1048574, 1048574], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'instance_frames_off\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.instance_frames_off',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.instance_frames_off" ids="bpy.types.Object.instance_frames_off" module="bpy.types" names="bpy.types.Object.instance_frames_off"><desc_name xml:space="preserve">instance_frames_off</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Recurring frames to exclude from the frame instances</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, 1048574], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'instance_frames_on\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.instance_frames_on',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.instance_frames_on" ids="bpy.types.Object.instance_frames_on" module="bpy.types" names="bpy.types.Object.instance_frames_on"><desc_name xml:space="preserve">instance_frames_on</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Number of frames to use between DupOff frames</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [1, 1048574], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'instance_frames_start\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.instance_frames_start',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.instance_frames_start" ids="bpy.types.Object.instance_frames_start" module="bpy.types" names="bpy.types.Object.instance_frames_start"><desc_name xml:space="preserve">instance_frames_start</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Start frame for frame instances</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [-1048574, 1048574], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'instance_type\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.instance_type',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.instance_type" ids="bpy.types.Object.instance_type" module="bpy.types" names="bpy.types.Object.instance_type"><desc_name xml:space="preserve">instance_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>If not None, object instancing method to use</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph><literal>NONE</literal> None.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>FRAMES</literal> Frames, Make instance of object for every frame.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>VERTS</literal> Verts, Instantiate child objects on all vertices.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>FACES</literal> Faces, Instantiate child objects on all faces.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>COLLECTION</literal> Collection, Enable collection instancing.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘NONE’, ‘FRAMES’, ‘VERTS’, ‘FACES’, ‘COLLECTION’], default ‘NONE’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.is_from_instancer\ (in\ module\ bpy.types)',\ u'bpy.types.Object.is_from_instancer',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.is_from_instancer" ids="bpy.types.Object.is_from_instancer" module="bpy.types" names="bpy.types.Object.is_from_instancer"><desc_name xml:space="preserve">is_from_instancer</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object comes from a instancer</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.is_from_set\ (in\ module\ bpy.types)',\ u'bpy.types.Object.is_from_set',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.is_from_set" ids="bpy.types.Object.is_from_set" module="bpy.types" names="bpy.types.Object.is_from_set"><desc_name xml:space="preserve">is_from_set</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object comes from a background set</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.is_instancer\ (in\ module\ bpy.types)',\ u'bpy.types.Object.is_instancer',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.is_instancer" ids="bpy.types.Object.is_instancer" module="bpy.types" names="bpy.types.Object.is_instancer"><desc_name xml:space="preserve">is_instancer</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'location\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.location',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.location" ids="bpy.types.Object.location" module="bpy.types" names="bpy.types.Object.location"><desc_name xml:space="preserve">location</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Location of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'lock_location\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.lock_location',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.lock_location" ids="bpy.types.Object.lock_location" module="bpy.types" names="bpy.types.Object.lock_location"><desc_name xml:space="preserve">lock_location</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Lock editing of location in the interface</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean array of 3 items, default (False, False, False)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'lock_rotation\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.lock_rotation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.lock_rotation" ids="bpy.types.Object.lock_rotation" module="bpy.types" names="bpy.types.Object.lock_rotation"><desc_name xml:space="preserve">lock_rotation</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Lock editing of rotation in the interface</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean array of 3 items, default (False, False, False)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'lock_rotation_w\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.lock_rotation_w',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.lock_rotation_w" ids="bpy.types.Object.lock_rotation_w" module="bpy.types" names="bpy.types.Object.lock_rotation_w"><desc_name xml:space="preserve">lock_rotation_w</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Lock editing of ‘angle’ component of four-component rotations in the interface</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'lock_rotations_4d\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.lock_rotations_4d',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.lock_rotations_4d" ids="bpy.types.Object.lock_rotations_4d" module="bpy.types" names="bpy.types.Object.lock_rotations_4d"><desc_name xml:space="preserve">lock_rotations_4d</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Lock editing of four component rotations by components (instead of as Eulers)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'lock_scale\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.lock_scale',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.lock_scale" ids="bpy.types.Object.lock_scale" module="bpy.types" names="bpy.types.Object.lock_scale"><desc_name xml:space="preserve">lock_scale</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Lock editing of scale in the interface</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean array of 3 items, default (False, False, False)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.material_slots\ (in\ module\ bpy.types)',\ u'bpy.types.Object.material_slots',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.material_slots" ids="bpy.types.Object.material_slots" module="bpy.types" names="bpy.types.Object.material_slots"><desc_name xml:space="preserve">material_slots</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Material slots in the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.MaterialSlot" refuri="bpy.types.MaterialSlot#bpy.types.MaterialSlot"><literal classes="xref py py-class">MaterialSlot</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'matrix_basis\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.matrix_basis',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.matrix_basis" ids="bpy.types.Object.matrix_basis" module="bpy.types" names="bpy.types.Object.matrix_basis"><desc_name xml:space="preserve">matrix_basis</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Matrix access to location, rotation and scale (including deltas), before constraints and parenting are applied</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0))</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'matrix_local\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.matrix_local',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.matrix_local" ids="bpy.types.Object.matrix_local" module="bpy.types" names="bpy.types.Object.matrix_local"><desc_name xml:space="preserve">matrix_local</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Parent relative transformation matrix - WARNING: Only takes into account ‘Object’ parenting, so e.g. in case of bone parenting you get a matrix relative to the Armature object, not to the actual parent bone</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0))</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'matrix_parent_inverse\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.matrix_parent_inverse',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.matrix_parent_inverse" ids="bpy.types.Object.matrix_parent_inverse" module="bpy.types" names="bpy.types.Object.matrix_parent_inverse"><desc_name xml:space="preserve">matrix_parent_inverse</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Inverse of object’s parent matrix at time of parenting</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0))</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'matrix_world\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.matrix_world',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.matrix_world" ids="bpy.types.Object.matrix_world" module="bpy.types" names="bpy.types.Object.matrix_world"><desc_name xml:space="preserve">matrix_world</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Worldspace transformation matrix</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf], default ((0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0), (0.0, 0.0, 0.0, 0.0))</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.mode\ (in\ module\ bpy.types)',\ u'bpy.types.Object.mode',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.mode" ids="bpy.types.Object.mode" module="bpy.types" names="bpy.types.Object.mode"><desc_name xml:space="preserve">mode</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Object interaction mode</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph><literal>OBJECT</literal> Object Mode.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>EDIT</literal> Edit Mode.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>POSE</literal> Pose Mode.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>SCULPT</literal> Sculpt Mode.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>VERTEX_PAINT</literal> Vertex Paint.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>WEIGHT_PAINT</literal> Weight Paint.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>TEXTURE_PAINT</literal> Texture Paint.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>PARTICLE_EDIT</literal> Particle Edit.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>GPENCIL_EDIT</literal> Edit Mode, Edit Grease Pencil Strokes.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>GPENCIL_SCULPT</literal> Sculpt Mode, Sculpt Grease Pencil Strokes.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>GPENCIL_PAINT</literal> Draw, Paint Grease Pencil Strokes.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>GPENCIL_WEIGHT</literal> Weight Paint, Grease Pencil Weight Paint Strokes.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘OBJECT’, ‘EDIT’, ‘POSE’, ‘SCULPT’, ‘VERTEX_PAINT’, ‘WEIGHT_PAINT’, ‘TEXTURE_PAINT’, ‘PARTICLE_EDIT’, ‘GPENCIL_EDIT’, ‘GPENCIL_SCULPT’, ‘GPENCIL_PAINT’, ‘GPENCIL_WEIGHT’], default ‘OBJECT’, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.modifiers\ (in\ module\ bpy.types)',\ u'bpy.types.Object.modifiers',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.modifiers" ids="bpy.types.Object.modifiers" module="bpy.types" names="bpy.types.Object.modifiers"><desc_name xml:space="preserve">modifiers</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Modifiers affecting the geometric data of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectModifiers" refuri="bpy.types.ObjectModifiers#bpy.types.ObjectModifiers"><literal classes="xref py py-class">ObjectModifiers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Modifier" refuri="bpy.types.Modifier#bpy.types.Modifier"><literal classes="xref py py-class">Modifier</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.motion_path\ (in\ module\ bpy.types)',\ u'bpy.types.Object.motion_path',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.motion_path" ids="bpy.types.Object.motion_path" module="bpy.types" names="bpy.types.Object.motion_path"><desc_name xml:space="preserve">motion_path</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Motion Path for this element</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.MotionPath" refuri="bpy.types.MotionPath#bpy.types.MotionPath"><literal classes="xref py py-class">MotionPath</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'parent\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.parent',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.parent" ids="bpy.types.Object.parent" module="bpy.types" names="bpy.types.Object.parent"><desc_name xml:space="preserve">parent</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Parent Object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" refid="bpy.types.Object" reftitle="bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'parent_bone\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.parent_bone',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.parent_bone" ids="bpy.types.Object.parent_bone" module="bpy.types" names="bpy.types.Object.parent_bone"><desc_name xml:space="preserve">parent_bone</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Name of parent bone in case of a bone parenting relation</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>string, default “”, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'parent_type\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.parent_type',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.parent_type" ids="bpy.types.Object.parent_type" module="bpy.types" names="bpy.types.Object.parent_type"><desc_name xml:space="preserve">parent_type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Type of parent relation</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph><literal>OBJECT</literal> Object, The object is parented to an object.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>ARMATURE</literal> Armature.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>LATTICE</literal> Lattice, The object is parented to a lattice.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>VERTEX</literal> Vertex, The object is parented to a vertex.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>VERTEX_3</literal> 3 Vertices.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>BONE</literal> Bone, The object is parented to a bone.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘OBJECT’, ‘ARMATURE’, ‘LATTICE’, ‘VERTEX’, ‘VERTEX_3’, ‘BONE’], default ‘OBJECT’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'parent_vertices\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.parent_vertices',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.parent_vertices" ids="bpy.types.Object.parent_vertices" module="bpy.types" names="bpy.types.Object.parent_vertices"><desc_name xml:space="preserve">parent_vertices</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Indices of vertices in case of a vertex parenting relation</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int array of 3 items in [0, inf], default (0, 0, 0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.particle_systems\ (in\ module\ bpy.types)',\ u'bpy.types.Object.particle_systems',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.particle_systems" ids="bpy.types.Object.particle_systems" module="bpy.types" names="bpy.types.Object.particle_systems"><desc_name xml:space="preserve">particle_systems</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Particle systems emitted from the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ParticleSystems" refuri="bpy.types.ParticleSystems#bpy.types.ParticleSystems"><literal classes="xref py py-class">ParticleSystems</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.ParticleSystem" refuri="bpy.types.ParticleSystem#bpy.types.ParticleSystem"><literal classes="xref py py-class">ParticleSystem</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'pass_index\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.pass_index',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.pass_index" ids="bpy.types.Object.pass_index" module="bpy.types" names="bpy.types.Object.pass_index"><desc_name xml:space="preserve">pass_index</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Index number for the “Object Index” render pass</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, 32767], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.pose\ (in\ module\ bpy.types)',\ u'bpy.types.Object.pose',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.pose" ids="bpy.types.Object.pose" module="bpy.types" names="bpy.types.Object.pose"><desc_name xml:space="preserve">pose</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Current pose for armatures</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Pose" refuri="bpy.types.Pose#bpy.types.Pose"><literal classes="xref py py-class">Pose</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'pose_library\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.pose_library',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.pose_library" ids="bpy.types.Object.pose_library" module="bpy.types" names="bpy.types.Object.pose_library"><desc_name xml:space="preserve">pose_library</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Action used as a pose library for armatures</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Action" refuri="bpy.types.Action#bpy.types.Action"><literal classes="xref py py-class">Action</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.proxy\ (in\ module\ bpy.types)',\ u'bpy.types.Object.proxy',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.proxy" ids="bpy.types.Object.proxy" module="bpy.types" names="bpy.types.Object.proxy"><desc_name xml:space="preserve">proxy</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Library object this proxy object controls</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" refid="bpy.types.Object" reftitle="bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.proxy_collection\ (in\ module\ bpy.types)',\ u'bpy.types.Object.proxy_collection',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.proxy_collection" ids="bpy.types.Object.proxy_collection" module="bpy.types" names="bpy.types.Object.proxy_collection"><desc_name xml:space="preserve">proxy_collection</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Library collection duplicator object this proxy object controls</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" refid="bpy.types.Object" reftitle="bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.rigid_body\ (in\ module\ bpy.types)',\ u'bpy.types.Object.rigid_body',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.rigid_body" ids="bpy.types.Object.rigid_body" module="bpy.types" names="bpy.types.Object.rigid_body"><desc_name xml:space="preserve">rigid_body</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Settings for rigid body simulation</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.RigidBodyObject" refuri="bpy.types.RigidBodyObject#bpy.types.RigidBodyObject"><literal classes="xref py py-class">RigidBodyObject</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.rigid_body_constraint\ (in\ module\ bpy.types)',\ u'bpy.types.Object.rigid_body_constraint',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.rigid_body_constraint" ids="bpy.types.Object.rigid_body_constraint" module="bpy.types" names="bpy.types.Object.rigid_body_constraint"><desc_name xml:space="preserve">rigid_body_constraint</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Constraint constraining rigid bodies</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.RigidBodyConstraint" refuri="bpy.types.RigidBodyConstraint#bpy.types.RigidBodyConstraint"><literal classes="xref py py-class">RigidBodyConstraint</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'rotation_axis_angle\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.rotation_axis_angle',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.rotation_axis_angle" ids="bpy.types.Object.rotation_axis_angle" module="bpy.types" names="bpy.types.Object.rotation_axis_angle"><desc_name xml:space="preserve">rotation_axis_angle</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Angle of Rotation for Axis-Angle rotation representation</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 4 items in [-inf, inf], default (0.0, 0.0, 1.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'rotation_euler\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.rotation_euler',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.rotation_euler" ids="bpy.types.Object.rotation_euler" module="bpy.types" names="bpy.types.Object.rotation_euler"><desc_name xml:space="preserve">rotation_euler</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Rotation in Eulers</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'rotation_mode\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.rotation_mode',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.rotation_mode" ids="bpy.types.Object.rotation_mode" module="bpy.types" names="bpy.types.Object.rotation_mode"><desc_name xml:space="preserve">rotation_mode</desc_name></desc_signature>
                        <desc_content>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph><literal>QUATERNION</literal> Quaternion (WXYZ), No Gimbal Lock.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>XYZ</literal> XYZ Euler, XYZ Rotation Order - prone to Gimbal Lock (default).</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>XZY</literal> XZY Euler, XZY Rotation Order - prone to Gimbal Lock.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>YXZ</literal> YXZ Euler, YXZ Rotation Order - prone to Gimbal Lock.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>YZX</literal> YZX Euler, YZX Rotation Order - prone to Gimbal Lock.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>ZXY</literal> ZXY Euler, ZXY Rotation Order - prone to Gimbal Lock.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>ZYX</literal> ZYX Euler, ZYX Rotation Order - prone to Gimbal Lock.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>AXIS_ANGLE</literal> Axis Angle, Axis Angle (W+XYZ), defines a rotation around some axis defined by 3D-Vector.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘QUATERNION’, ‘XYZ’, ‘XZY’, ‘YXZ’, ‘YZX’, ‘ZXY’, ‘ZYX’, ‘AXIS_ANGLE’], default ‘QUATERNION’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'rotation_quaternion\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.rotation_quaternion',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.rotation_quaternion" ids="bpy.types.Object.rotation_quaternion" module="bpy.types" names="bpy.types.Object.rotation_quaternion"><desc_name xml:space="preserve">rotation_quaternion</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Rotation in Quaternions</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 4 items in [-inf, inf], default (1.0, 0.0, 0.0, 0.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'scale\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.scale',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.scale" ids="bpy.types.Object.scale" module="bpy.types" names="bpy.types.Object.scale"><desc_name xml:space="preserve">scale</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Scaling of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 3 items in [-inf, inf], default (1.0, 1.0, 1.0)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.shader_effects\ (in\ module\ bpy.types)',\ u'bpy.types.Object.shader_effects',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.shader_effects" ids="bpy.types.Object.shader_effects" module="bpy.types" names="bpy.types.Object.shader_effects"><desc_name xml:space="preserve">shader_effects</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Effects affecting display of object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectShaderFx" refuri="bpy.types.ObjectShaderFx#bpy.types.ObjectShaderFx"><literal classes="xref py py-class">ObjectShaderFx</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.ShaderFx" refuri="bpy.types.ShaderFx#bpy.types.ShaderFx"><literal classes="xref py py-class">ShaderFx</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_all_edges\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_all_edges',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_all_edges" ids="bpy.types.Object.show_all_edges" module="bpy.types" names="bpy.types.Object.show_all_edges"><desc_name xml:space="preserve">show_all_edges</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display all edges for mesh objects</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_axis\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_axis',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_axis" ids="bpy.types.Object.show_axis" module="bpy.types" names="bpy.types.Object.show_axis"><desc_name xml:space="preserve">show_axis</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display the object’s origin and axes</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_bounds\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_bounds',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_bounds" ids="bpy.types.Object.show_bounds" module="bpy.types" names="bpy.types.Object.show_bounds"><desc_name xml:space="preserve">show_bounds</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display the object’s bounds</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_empty_image_backside\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_empty_image_backside',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_empty_image_backside" ids="bpy.types.Object.show_empty_image_backside" module="bpy.types" names="bpy.types.Object.show_empty_image_backside"><desc_name xml:space="preserve">show_empty_image_backside</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display empty image even when viewed from the back</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_empty_image_orthographic\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_empty_image_orthographic',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_empty_image_orthographic" ids="bpy.types.Object.show_empty_image_orthographic" module="bpy.types" names="bpy.types.Object.show_empty_image_orthographic"><desc_name xml:space="preserve">show_empty_image_orthographic</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display image in orthographic mode</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_empty_image_perspective\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_empty_image_perspective',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_empty_image_perspective" ids="bpy.types.Object.show_empty_image_perspective" module="bpy.types" names="bpy.types.Object.show_empty_image_perspective"><desc_name xml:space="preserve">show_empty_image_perspective</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display image in perspective mode</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_in_front\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_in_front',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_in_front" ids="bpy.types.Object.show_in_front" module="bpy.types" names="bpy.types.Object.show_in_front"><desc_name xml:space="preserve">show_in_front</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Make the object draw in front of others</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_instancer_for_render\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_instancer_for_render',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_instancer_for_render" ids="bpy.types.Object.show_instancer_for_render" module="bpy.types" names="bpy.types.Object.show_instancer_for_render"><desc_name xml:space="preserve">show_instancer_for_render</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Make instancer visible when rendering</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_instancer_for_viewport\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_instancer_for_viewport',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_instancer_for_viewport" ids="bpy.types.Object.show_instancer_for_viewport" module="bpy.types" names="bpy.types.Object.show_instancer_for_viewport"><desc_name xml:space="preserve">show_instancer_for_viewport</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Make instancer visible in the viewport</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_name\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_name',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_name" ids="bpy.types.Object.show_name" module="bpy.types" names="bpy.types.Object.show_name"><desc_name xml:space="preserve">show_name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display the object’s name</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_only_shape_key\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_only_shape_key',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_only_shape_key" ids="bpy.types.Object.show_only_shape_key" module="bpy.types" names="bpy.types.Object.show_only_shape_key"><desc_name xml:space="preserve">show_only_shape_key</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Always show the current Shape for this Object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_texture_space\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_texture_space',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_texture_space" ids="bpy.types.Object.show_texture_space" module="bpy.types" names="bpy.types.Object.show_texture_space"><desc_name xml:space="preserve">show_texture_space</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display the object’s texture space</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_transparent\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_transparent',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_transparent" ids="bpy.types.Object.show_transparent" module="bpy.types" names="bpy.types.Object.show_transparent"><desc_name xml:space="preserve">show_transparent</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Display material transparency in the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'show_wire\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.show_wire',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.show_wire" ids="bpy.types.Object.show_wire" module="bpy.types" names="bpy.types.Object.show_wire"><desc_name xml:space="preserve">show_wire</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Add the object’s wireframe over solid drawing</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'slow_parent_offset\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.slow_parent_offset',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.slow_parent_offset" ids="bpy.types.Object.slow_parent_offset" module="bpy.types" names="bpy.types.Object.slow_parent_offset"><desc_name xml:space="preserve">slow_parent_offset</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Delay in the parent relationship</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float in [-1.04857e+06, 1.04857e+06], default 0.0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.soft_body\ (in\ module\ bpy.types)',\ u'bpy.types.Object.soft_body',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.soft_body" ids="bpy.types.Object.soft_body" module="bpy.types" names="bpy.types.Object.soft_body"><desc_name xml:space="preserve">soft_body</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Settings for soft body simulation</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.SoftBodySettings" refuri="bpy.types.SoftBodySettings#bpy.types.SoftBodySettings"><literal classes="xref py py-class">SoftBodySettings</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'track_axis\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.track_axis',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.track_axis" ids="bpy.types.Object.track_axis" module="bpy.types" names="bpy.types.Object.track_axis"><desc_name xml:space="preserve">track_axis</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Axis that points in ‘forward’ direction (applies to InstanceFrame when parent ‘Follow’ is enabled)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘POS_X’, ‘POS_Y’, ‘POS_Z’, ‘NEG_X’, ‘NEG_Y’, ‘NEG_Z’], default ‘POS_X’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.type\ (in\ module\ bpy.types)',\ u'bpy.types.Object.type',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.type" ids="bpy.types.Object.type" module="bpy.types" names="bpy.types.Object.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Type of Object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘MESH’, ‘CURVE’, ‘SURFACE’, ‘META’, ‘FONT’, ‘ARMATURE’, ‘LATTICE’, ‘EMPTY’, ‘GPENCIL’, ‘CAMERA’, ‘LIGHT’, ‘SPEAKER’, ‘LIGHT_PROBE’], default ‘EMPTY’, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'up_axis\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.up_axis',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.up_axis" ids="bpy.types.Object.up_axis" module="bpy.types" names="bpy.types.Object.up_axis"><desc_name xml:space="preserve">up_axis</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Axis that points in the upward direction (applies to InstanceFrame when parent ‘Follow’ is enabled)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘X’, ‘Y’, ‘Z’], default ‘X’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.use_dynamic_topology_sculpting\ (in\ module\ bpy.types)',\ u'bpy.types.Object.use_dynamic_topology_sculpting',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.use_dynamic_topology_sculpting" ids="bpy.types.Object.use_dynamic_topology_sculpting" module="bpy.types" names="bpy.types.Object.use_dynamic_topology_sculpting"><desc_name xml:space="preserve">use_dynamic_topology_sculpting</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_instance_faces_scale\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.use_instance_faces_scale',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.use_instance_faces_scale" ids="bpy.types.Object.use_instance_faces_scale" module="bpy.types" names="bpy.types.Object.use_instance_faces_scale"><desc_name xml:space="preserve">use_instance_faces_scale</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Scale instance based on face size</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_instance_frames_speed\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.use_instance_frames_speed',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.use_instance_frames_speed" ids="bpy.types.Object.use_instance_frames_speed" module="bpy.types" names="bpy.types.Object.use_instance_frames_speed"><desc_name xml:space="preserve">use_instance_frames_speed</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Set frames instancing to use the current frame instead of parent curve’s evaluation time</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_instance_vertices_rotation\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.use_instance_vertices_rotation',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.use_instance_vertices_rotation" ids="bpy.types.Object.use_instance_vertices_rotation" module="bpy.types" names="bpy.types.Object.use_instance_vertices_rotation"><desc_name xml:space="preserve">use_instance_vertices_rotation</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Rotate instance according to vertex normal</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_shape_key_edit_mode\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.use_shape_key_edit_mode',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.use_shape_key_edit_mode" ids="bpy.types.Object.use_shape_key_edit_mode" module="bpy.types" names="bpy.types.Object.use_shape_key_edit_mode"><desc_name xml:space="preserve">use_shape_key_edit_mode</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Apply shape keys in edit mode (for Meshes only)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'use_slow_parent\ (bpy.types.Object\ attribute)',\ u'bpy.types.Object.use_slow_parent',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="Object" first="False" fullname="Object.use_slow_parent" ids="bpy.types.Object.use_slow_parent" module="bpy.types" names="bpy.types.Object.use_slow_parent"><desc_name xml:space="preserve">use_slow_parent</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Create a delay in the parent relationship (beware: this isn’t renderfarm safe and may be invalid after jumping around the timeline)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>boolean, default False</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.vertex_groups\ (in\ module\ bpy.types)',\ u'bpy.types.Object.vertex_groups',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.vertex_groups" ids="bpy.types.Object.vertex_groups" module="bpy.types" names="bpy.types.Object.vertex_groups"><desc_name xml:space="preserve">vertex_groups</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Vertex groups of the object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.VertexGroups" refuri="bpy.types.VertexGroups#bpy.types.VertexGroups"><literal classes="xref py py-class">VertexGroups</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.VertexGroup" refuri="bpy.types.VertexGroup#bpy.types.VertexGroup"><literal classes="xref py py-class">VertexGroup</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.children\ (in\ module\ bpy.types)',\ u'bpy.types.Object.children',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.children" ids="bpy.types.Object.children" module="bpy.types" names="bpy.types.Object.children"><desc_name xml:space="preserve">children</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>All the children of this object. Warning: takes O(len(bpy.data.objects)) time.
                                (readonly)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.users_collection\ (in\ module\ bpy.types)',\ u'bpy.types.Object.users_collection',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.users_collection" ids="bpy.types.Object.users_collection" module="bpy.types" names="bpy.types.Object.users_collection"><desc_name xml:space="preserve">users_collection</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The collections this object is in. Warning: takes O(len(bpy.data.collections)) time.
                                (readonly)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'Object.users_scene\ (in\ module\ bpy.types)',\ u'bpy.types.Object.users_scene',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="Object" first="False" fullname="Object.users_scene" ids="bpy.types.Object.users_scene" module="bpy.types" names="bpy.types.Object.users_scene"><desc_name xml:space="preserve">users_scene</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The scenes this object is in. Warning: takes O(len(bpy.data.scenes) * len(bpy.data.objects)) time.
                                (readonly)</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'select_set()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.select_set',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.select_set" ids="bpy.types.Object.select_set" module="bpy.types" names="bpy.types.Object.select_set"><desc_name xml:space="preserve">select_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">state</desc_parameter><desc_parameter xml:space="preserve">view_layer=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Select the object (for the active view layer)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">state</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) – Selection state to define</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, (optional)) – Operate on this view layer instead of the context</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'select_get()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.select_get',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.select_get" ids="bpy.types.Object.select_get" module="bpy.types" names="bpy.types.Object.select_get"><desc_name xml:space="preserve">select_get</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get the object selection for the active view layer</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Object selected</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'visible_get()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.visible_get',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.visible_get" ids="bpy.types.Object.visible_get" module="bpy.types" names="bpy.types.Object.visible_get"><desc_name xml:space="preserve">visible_get</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get the object visibility for the active view layer and viewport</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Object visible</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'holdout_get()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.holdout_get',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.holdout_get" ids="bpy.types.Object.holdout_get" module="bpy.types" names="bpy.types.Object.holdout_get"><desc_name xml:space="preserve">holdout_get</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view_layer</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Test if object is masked in the view layer</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>) – View layer to check against</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Object holdout</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'indirect_only_get()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.indirect_only_get',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.indirect_only_get" ids="bpy.types.Object.indirect_only_get" module="bpy.types" names="bpy.types.Object.indirect_only_get"><desc_name xml:space="preserve">indirect_only_get</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view_layer</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Test if object is set to contribute only indirectly (through shadows and reflections) in the view layer</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>) – View layer to check against</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Object indirect only</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'convert_space()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.convert_space',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.convert_space" ids="bpy.types.Object.convert_space" module="bpy.types" names="bpy.types.Object.convert_space"><desc_name xml:space="preserve">convert_space</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">pose_bone=None</desc_parameter><desc_parameter xml:space="preserve">matrix=((0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0)</desc_parameter><desc_parameter xml:space="preserve">(0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0)</desc_parameter><desc_parameter xml:space="preserve">(0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0)</desc_parameter><desc_parameter xml:space="preserve">(0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0</desc_parameter><desc_parameter xml:space="preserve">0.0))</desc_parameter><desc_parameter xml:space="preserve">from_space='WORLD'</desc_parameter><desc_parameter xml:space="preserve">to_space='WORLD'</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Convert (transform) the given matrix from one space to another</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">pose_bone</literal_strong> (<reference internal="True" reftitle="bpy.types.PoseBone" refuri="bpy.types.PoseBone#bpy.types.PoseBone"><literal classes="xref py py-class">PoseBone</literal></reference>, (optional)) – Bone to use to define spaces (may be None, in which case only the two ‘WORLD’ and ‘LOCAL’ spaces are usable)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">matrix</literal_strong> (<literal_emphasis>float multi-dimensional array of 4 * 4 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – The matrix to transform</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">from_space</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'WORLD'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'POSE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LOCAL_WITH_PARENT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LOCAL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>The space in which ‘matrix’ is currently</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>WORLD</literal> World Space, The most global space in Blender.</paragraph></list_item><list_item><paragraph><literal>POSE</literal> Pose Space, The pose space of a bone (its armature’s object space).</paragraph></list_item><list_item><paragraph><literal>LOCAL_WITH_PARENT</literal> Local With Parent, The local space of a bone’s parent bone.</paragraph></list_item><list_item><paragraph><literal>LOCAL</literal> Local Space, The local space of an object/bone.</paragraph></list_item></bullet_list></paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">to_space</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'WORLD'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'POSE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LOCAL_WITH_PARENT'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'LOCAL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>The space to which you want to transform ‘matrix’</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>WORLD</literal> World Space, The most global space in Blender.</paragraph></list_item><list_item><paragraph><literal>POSE</literal> Pose Space, The pose space of a bone (its armature’s object space).</paragraph></list_item><list_item><paragraph><literal>LOCAL_WITH_PARENT</literal> Local With Parent, The local space of a bone’s parent bone.</paragraph></list_item><list_item><paragraph><literal>LOCAL</literal> Local Space, The local space of an object/bone.</paragraph></list_item></bullet_list></paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The transformed matrix</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'calc_matrix_camera()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.calc_matrix_camera',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.calc_matrix_camera" ids="bpy.types.Object.calc_matrix_camera" module="bpy.types" names="bpy.types.Object.calc_matrix_camera"><desc_name xml:space="preserve">calc_matrix_camera</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph</desc_parameter><desc_parameter xml:space="preserve">x=1</desc_parameter><desc_parameter xml:space="preserve">y=1</desc_parameter><desc_parameter xml:space="preserve">scale_x=1.0</desc_parameter><desc_parameter xml:space="preserve">scale_y=1.0</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Generate the camera projection matrix of this object (mostly useful for Camera and Light types)</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">depsgraph</literal_strong> (<reference internal="True" reftitle="bpy.types.Depsgraph" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph"><literal classes="xref py py-class">Depsgraph</literal></reference>) – Depsgraph to get evaluated data from</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">x</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Width of the render area</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">y</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Height of the render area</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">scale_x</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1e-06</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Width scaling factor</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">scale_y</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1e-06</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Height scaling factor</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The camera projection matrix</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>float multi-dimensional array of 4 * 4 items in [-inf, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'camera_fit_coords()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.camera_fit_coords',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.camera_fit_coords" ids="bpy.types.Object.camera_fit_coords" module="bpy.types" names="bpy.types.Object.camera_fit_coords"><desc_name xml:space="preserve">camera_fit_coords</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph</desc_parameter><desc_parameter xml:space="preserve">coordinates</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Compute the coordinate (and scale for ortho cameras) given object should be to ‘see’ all given coordinates</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">depsgraph</literal_strong> (<reference internal="True" reftitle="bpy.types.Depsgraph" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph"><literal classes="xref py py-class">Depsgraph</literal></reference>) – Depsgraph to get evaluated data from</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">coordinates</literal_strong> (<literal_emphasis>float array of 1 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Coordinates to fit in</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return (co_return, scale_return)</field_name>
                                    <field_body>
                                        <paragraph><title_reference>co_return</title_reference>, The location to aim to be able to see all given points, float array of 3 items in [-inf, inf]</paragraph>
                                        <paragraph><title_reference>scale_return</title_reference>, The ortho scale to aim to be able to see all given points (if relevant), float in [-inf, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'to_mesh()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.to_mesh',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.to_mesh" ids="bpy.types.Object.to_mesh" module="bpy.types" names="bpy.types.Object.to_mesh"><desc_name xml:space="preserve">to_mesh</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">depsgraph</desc_parameter><desc_parameter xml:space="preserve">apply_modifiers</desc_parameter><desc_parameter xml:space="preserve">calc_undeformed=False</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Create a Mesh data-block with modifiers applied</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">depsgraph</literal_strong> (<reference internal="True" reftitle="bpy.types.Depsgraph" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph"><literal classes="xref py py-class">Depsgraph</literal></reference>, (never None)) – Dependency Graph, Evaluated dependency graph within which to evaluate modifiers</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">apply_modifiers</literal_strong> (<literal_emphasis>boolean</literal_emphasis>) – Apply modifiers</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">calc_undeformed</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Calculate Undeformed, Calculate undeformed vertex coordinates</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Mesh created from object, remove it if it is only used for export</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Mesh" refuri="bpy.types.Mesh#bpy.types.Mesh"><literal classes="xref py py-class">Mesh</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'find_armature()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.find_armature',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.find_armature" ids="bpy.types.Object.find_armature" module="bpy.types" names="bpy.types.Object.find_armature"><desc_name xml:space="preserve">find_armature</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Find armature influencing this object as a parent or via a modifier</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Armature object influencing this object or NULL</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" refid="bpy.types.Object" reftitle="bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'shape_key_add()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.shape_key_add',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.shape_key_add" ids="bpy.types.Object.shape_key_add" module="bpy.types" names="bpy.types.Object.shape_key_add"><desc_name xml:space="preserve">shape_key_add</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name="Key"</desc_parameter><desc_parameter xml:space="preserve">from_mix=True</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Add shape key to this object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">name</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Unique name for the new keyblock</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">from_mix</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Create new shape from existing mix of shapes</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>New shape keyblock</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.ShapeKey" refuri="bpy.types.ShapeKey#bpy.types.ShapeKey"><literal classes="xref py py-class">ShapeKey</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'shape_key_remove()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.shape_key_remove',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.shape_key_remove" ids="bpy.types.Object.shape_key_remove" module="bpy.types" names="bpy.types.Object.shape_key_remove"><desc_name xml:space="preserve">shape_key_remove</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">key</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Remove a Shape Key from this object</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">key</literal_strong> (<reference internal="True" reftitle="bpy.types.ShapeKey" refuri="bpy.types.ShapeKey#bpy.types.ShapeKey"><literal classes="xref py py-class">ShapeKey</literal></reference>, (never None)) – Keyblock to be removed</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'ray_cast()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.ray_cast',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.ray_cast" ids="bpy.types.Object.ray_cast" module="bpy.types" names="bpy.types.Object.ray_cast"><desc_name xml:space="preserve">ray_cast</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">origin</desc_parameter><desc_parameter xml:space="preserve">direction</desc_parameter><desc_parameter xml:space="preserve">distance=1.70141e+38</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Cast a ray onto in object space</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">origin</literal_strong> (<literal_emphasis>float array of 3 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Origin of the ray, in object space</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">direction</literal_strong> (<literal_emphasis>float array of 3 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Direction of the ray, in object space</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">distance</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Maximum distance</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return (result, location, normal, index)</field_name>
                                    <field_body>
                                        <paragraph><title_reference>result</title_reference>, Wheter the ray successfully hit the geometry, boolean</paragraph>
                                        <paragraph><title_reference>location</title_reference>, The hit location of this ray cast, float array of 3 items in [-inf, inf]</paragraph>
                                        <paragraph><title_reference>normal</title_reference>, The face normal at the ray cast hit location, float array of 3 items in [-inf, inf]</paragraph>
                                        <paragraph><title_reference>index</title_reference>, The face index, -1 when original data isn’t available, int in [-inf, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'closest_point_on_mesh()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.closest_point_on_mesh',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.closest_point_on_mesh" ids="bpy.types.Object.closest_point_on_mesh" module="bpy.types" names="bpy.types.Object.closest_point_on_mesh"><desc_name xml:space="preserve">closest_point_on_mesh</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">origin</desc_parameter><desc_parameter xml:space="preserve">distance=1.84467e+19</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Find the nearest point in object space</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">origin</literal_strong> (<literal_emphasis>float array of 3 items in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Point to find closest geometry from (in object space)</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">distance</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Maximum distance</paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return (result, location, normal, index)</field_name>
                                    <field_body>
                                        <paragraph><title_reference>result</title_reference>, Wheter closest point on geometry was found, boolean</paragraph>
                                        <paragraph><title_reference>location</title_reference>, The location on the object closest to the point, float array of 3 items in [-inf, inf]</paragraph>
                                        <paragraph><title_reference>normal</title_reference>, The face normal at the closest point, float array of 3 items in [-inf, inf]</paragraph>
                                        <paragraph><title_reference>index</title_reference>, The face index, -1 when original data isn’t available, int in [-inf, inf]</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'is_modified()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.is_modified',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.is_modified" ids="bpy.types.Object.is_modified" module="bpy.types" names="bpy.types.Object.is_modified"><desc_name xml:space="preserve">is_modified</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene</desc_parameter><desc_parameter xml:space="preserve">settings</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Determine if this object is modified from the base mesh data</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">scene</literal_strong> (<reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference>, (never None)) – Scene in which to check the object</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">settings</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'PREVIEW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'RENDER'</literal_emphasis><literal_emphasis>]</literal_emphasis>) – <paragraph>Modifier settings to apply</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>PREVIEW</literal> Preview, Apply modifier preview settings.</paragraph></list_item><list_item><paragraph><literal>RENDER</literal> Render, Apply modifier render settings.</paragraph></list_item></bullet_list></paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Whether the object is modified</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'is_deform_modified()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.is_deform_modified',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.is_deform_modified" ids="bpy.types.Object.is_deform_modified" module="bpy.types" names="bpy.types.Object.is_deform_modified"><desc_name xml:space="preserve">is_deform_modified</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">scene</desc_parameter><desc_parameter xml:space="preserve">settings</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Determine if this object is modified by a deformation from the base mesh data</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">scene</literal_strong> (<reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference>, (never None)) – Scene in which to check the object</paragraph>
                                            </list_item>
                                            <list_item>
                                                <paragraph><literal_strong refspecific="True">settings</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'PREVIEW'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'RENDER'</literal_emphasis><literal_emphasis>]</literal_emphasis>) – <paragraph>Modifier settings to apply</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>PREVIEW</literal> Preview, Apply modifier preview settings.</paragraph></list_item><list_item><paragraph><literal>RENDER</literal> Render, Apply modifier render settings.</paragraph></list_item></bullet_list></paragraph>
                                            </list_item>
                                        </bullet_list>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Whether the object is deform-modified</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update_from_editmode()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.update_from_editmode',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.update_from_editmode" ids="bpy.types.Object.update_from_editmode" module="bpy.types" names="bpy.types.Object.update_from_editmode"><desc_name xml:space="preserve">update_from_editmode</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Load the objects edit-mode data into the object data</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>Success</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'cache_release()\ (bpy.types.Object\ method)',\ u'bpy.types.Object.cache_release',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="Object" first="False" fullname="Object.cache_release" ids="bpy.types.Object.cache_release" module="bpy.types" names="bpy.types.Object.cache_release"><desc_name xml:space="preserve">cache_release</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Release memory used by caches associated with this object. Intended to be used by render engines only</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Object\ class\ method)',\ u'bpy.types.Object.bl_rna_get_subclass',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="Object" first="False" fullname="Object.bl_rna_get_subclass" ids="bpy.types.Object.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Object.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The RNA type or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Object\ class\ method)',\ u'bpy.types.Object.bl_rna_get_subclass_py',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="Object" first="False" fullname="Object.bl_rna_get_subclass_py" ids="bpy.types.Object.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Object.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The class or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>type</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <rubric>Inherited Properties</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>Inherited Functions</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>References</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.active_object" refuri="bpy.context#bpy.context.active_object"><literal classes="xref py py-mod">bpy.context.active_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.edit_object" refuri="bpy.context#bpy.context.edit_object"><literal classes="xref py py-mod">bpy.context.edit_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.editable_objects" refuri="bpy.context#bpy.context.editable_objects"><literal classes="xref py py-mod">bpy.context.editable_objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.image_paint_object" refuri="bpy.context#bpy.context.image_paint_object"><literal classes="xref py py-mod">bpy.context.image_paint_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.object" refuri="bpy.context#bpy.context.object"><literal classes="xref py py-mod">bpy.context.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.particle_edit_object" refuri="bpy.context#bpy.context.particle_edit_object"><literal classes="xref py py-mod">bpy.context.particle_edit_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.sculpt_object" refuri="bpy.context#bpy.context.sculpt_object"><literal classes="xref py py-mod">bpy.context.sculpt_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.selectable_objects" refuri="bpy.context#bpy.context.selectable_objects"><literal classes="xref py py-mod">bpy.context.selectable_objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.selected_editable_objects" refuri="bpy.context#bpy.context.selected_editable_objects"><literal classes="xref py py-mod">bpy.context.selected_editable_objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.selected_objects" refuri="bpy.context#bpy.context.selected_objects"><literal classes="xref py py-mod">bpy.context.selected_objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.uv_sculpt_object" refuri="bpy.context#bpy.context.uv_sculpt_object"><literal classes="xref py py-mod">bpy.context.uv_sculpt_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.vertex_paint_object" refuri="bpy.context#bpy.context.vertex_paint_object"><literal classes="xref py py-mod">bpy.context.vertex_paint_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.visible_objects" refuri="bpy.context#bpy.context.visible_objects"><literal classes="xref py py-mod">bpy.context.visible_objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.context.weight_paint_object" refuri="bpy.context#bpy.context.weight_paint_object"><literal classes="xref py py-mod">bpy.context.weight_paint_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ActionConstraint.target" refuri="bpy.types.ActionConstraint#bpy.types.ActionConstraint.target"><literal classes="xref py py-class">ActionConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ArmatureGpencilModifier.object" refuri="bpy.types.ArmatureGpencilModifier#bpy.types.ArmatureGpencilModifier.object"><literal classes="xref py py-class">ArmatureGpencilModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ArmatureModifier.object" refuri="bpy.types.ArmatureModifier#bpy.types.ArmatureModifier.object"><literal classes="xref py py-class">ArmatureModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ArrayGpencilModifier.offset_object" refuri="bpy.types.ArrayGpencilModifier#bpy.types.ArrayGpencilModifier.offset_object"><literal classes="xref py py-class">ArrayGpencilModifier.offset_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ArrayModifier.curve" refuri="bpy.types.ArrayModifier#bpy.types.ArrayModifier.curve"><literal classes="xref py py-class">ArrayModifier.curve</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ArrayModifier.end_cap" refuri="bpy.types.ArrayModifier#bpy.types.ArrayModifier.end_cap"><literal classes="xref py py-class">ArrayModifier.end_cap</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ArrayModifier.offset_object" refuri="bpy.types.ArrayModifier#bpy.types.ArrayModifier.offset_object"><literal classes="xref py py-class">ArrayModifier.offset_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ArrayModifier.start_cap" refuri="bpy.types.ArrayModifier#bpy.types.ArrayModifier.start_cap"><literal classes="xref py py-class">ArrayModifier.start_cap</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendData.objects" refuri="bpy.types.BlendData#bpy.types.BlendData.objects"><literal classes="xref py py-class">BlendData.objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataMeshes.new_from_object" refuri="bpy.types.BlendDataMeshes#bpy.types.BlendDataMeshes.new_from_object"><literal classes="xref py py-class">BlendDataMeshes.new_from_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataObjects.new" refuri="bpy.types.BlendDataObjects#bpy.types.BlendDataObjects.new"><literal classes="xref py py-class">BlendDataObjects.new</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataObjects.remove" refuri="bpy.types.BlendDataObjects#bpy.types.BlendDataObjects.remove"><literal classes="xref py py-class">BlendDataObjects.remove</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BoidRuleAvoid.object" refuri="bpy.types.BoidRuleAvoid#bpy.types.BoidRuleAvoid.object"><literal classes="xref py py-class">BoidRuleAvoid.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BoidRuleFollowLeader.object" refuri="bpy.types.BoidRuleFollowLeader#bpy.types.BoidRuleFollowLeader.object"><literal classes="xref py py-class">BoidRuleFollowLeader.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BoidRuleGoal.object" refuri="bpy.types.BoidRuleGoal#bpy.types.BoidRuleGoal.object"><literal classes="xref py py-class">BoidRuleGoal.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BooleanModifier.object" refuri="bpy.types.BooleanModifier#bpy.types.BooleanModifier.object"><literal classes="xref py py-class">BooleanModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Camera.dof_object" refuri="bpy.types.Camera#bpy.types.Camera.dof_object"><literal classes="xref py py-class">Camera.dof_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CastModifier.object" refuri="bpy.types.CastModifier#bpy.types.CastModifier.object"><literal classes="xref py py-class">CastModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ChildOfConstraint.target" refuri="bpy.types.ChildOfConstraint#bpy.types.ChildOfConstraint.target"><literal classes="xref py py-class">ChildOfConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ClampToConstraint.target" refuri="bpy.types.ClampToConstraint#bpy.types.ClampToConstraint.target"><literal classes="xref py py-class">ClampToConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Collection.all_objects" refuri="bpy.types.Collection#bpy.types.Collection.all_objects"><literal classes="xref py py-class">Collection.all_objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Collection.objects" refuri="bpy.types.Collection#bpy.types.Collection.objects"><literal classes="xref py py-class">Collection.objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CollectionObjects.link" refuri="bpy.types.CollectionObjects#bpy.types.CollectionObjects.link"><literal classes="xref py py-class">CollectionObjects.link</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CollectionObjects.unlink" refuri="bpy.types.CollectionObjects#bpy.types.CollectionObjects.unlink"><literal classes="xref py py-class">CollectionObjects.unlink</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ConstraintTarget.target" refuri="bpy.types.ConstraintTarget#bpy.types.ConstraintTarget.target"><literal classes="xref py py-class">ConstraintTarget.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ConstraintTargetBone.target" refuri="bpy.types.ConstraintTargetBone#bpy.types.ConstraintTargetBone.target"><literal classes="xref py py-class">ConstraintTargetBone.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CopyLocationConstraint.target" refuri="bpy.types.CopyLocationConstraint#bpy.types.CopyLocationConstraint.target"><literal classes="xref py py-class">CopyLocationConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CopyRotationConstraint.target" refuri="bpy.types.CopyRotationConstraint#bpy.types.CopyRotationConstraint.target"><literal classes="xref py py-class">CopyRotationConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CopyScaleConstraint.target" refuri="bpy.types.CopyScaleConstraint#bpy.types.CopyScaleConstraint.target"><literal classes="xref py py-class">CopyScaleConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CopyTransformsConstraint.target" refuri="bpy.types.CopyTransformsConstraint#bpy.types.CopyTransformsConstraint.target"><literal classes="xref py py-class">CopyTransformsConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Curve.bevel_object" refuri="bpy.types.Curve#bpy.types.Curve.bevel_object"><literal classes="xref py py-class">Curve.bevel_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Curve.taper_object" refuri="bpy.types.Curve#bpy.types.Curve.taper_object"><literal classes="xref py py-class">Curve.taper_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CurveModifier.object" refuri="bpy.types.CurveModifier#bpy.types.CurveModifier.object"><literal classes="xref py py-class">CurveModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.DampedTrackConstraint.target" refuri="bpy.types.DampedTrackConstraint#bpy.types.DampedTrackConstraint.target"><literal classes="xref py py-class">DampedTrackConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.DataTransferModifier.object" refuri="bpy.types.DataTransferModifier#bpy.types.DataTransferModifier.object"><literal classes="xref py py-class">DataTransferModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Depsgraph.objects" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph.objects"><literal classes="xref py py-class">Depsgraph.objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.DepsgraphObjectInstance.instance_object" refuri="bpy.types.DepsgraphObjectInstance#bpy.types.DepsgraphObjectInstance.instance_object"><literal classes="xref py py-class">DepsgraphObjectInstance.instance_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.DepsgraphObjectInstance.object" refuri="bpy.types.DepsgraphObjectInstance#bpy.types.DepsgraphObjectInstance.object"><literal classes="xref py py-class">DepsgraphObjectInstance.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.DepsgraphObjectInstance.parent" refuri="bpy.types.DepsgraphObjectInstance#bpy.types.DepsgraphObjectInstance.parent"><literal classes="xref py py-class">DepsgraphObjectInstance.parent</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.DisplaceModifier.texture_coords_object" refuri="bpy.types.DisplaceModifier#bpy.types.DisplaceModifier.texture_coords_object"><literal classes="xref py py-class">DisplaceModifier.texture_coords_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.DynamicPaintSurface.output_exists" refuri="bpy.types.DynamicPaintSurface#bpy.types.DynamicPaintSurface.output_exists"><literal classes="xref py py-class">DynamicPaintSurface.output_exists</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.FieldSettings.source_object" refuri="bpy.types.FieldSettings#bpy.types.FieldSettings.source_object"><literal classes="xref py py-class">FieldSettings.source_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.FloorConstraint.target" refuri="bpy.types.FloorConstraint#bpy.types.FloorConstraint.target"><literal classes="xref py py-class">FloorConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.FollowPathConstraint.target" refuri="bpy.types.FollowPathConstraint#bpy.types.FollowPathConstraint.target"><literal classes="xref py py-class">FollowPathConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.FollowTrackConstraint.camera" refuri="bpy.types.FollowTrackConstraint#bpy.types.FollowTrackConstraint.camera"><literal classes="xref py py-class">FollowTrackConstraint.camera</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.FollowTrackConstraint.depth_object" refuri="bpy.types.FollowTrackConstraint#bpy.types.FollowTrackConstraint.depth_object"><literal classes="xref py py-class">FollowTrackConstraint.depth_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.GPencilLayer.parent" refuri="bpy.types.GPencilLayer#bpy.types.GPencilLayer.parent"><literal classes="xref py py-class">GPencilLayer.parent</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.draw_preset_facemap" refuri="bpy.types.Gizmo#bpy.types.Gizmo.draw_preset_facemap"><literal classes="xref py py-class">Gizmo.draw_preset_facemap</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.HookGpencilModifier.object" refuri="bpy.types.HookGpencilModifier#bpy.types.HookGpencilModifier.object"><literal classes="xref py py-class">HookGpencilModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.HookModifier.object" refuri="bpy.types.HookModifier#bpy.types.HookModifier.object"><literal classes="xref py py-class">HookModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.KinematicConstraint.pole_target" refuri="bpy.types.KinematicConstraint#bpy.types.KinematicConstraint.pole_target"><literal classes="xref py py-class">KinematicConstraint.pole_target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.KinematicConstraint.target" refuri="bpy.types.KinematicConstraint#bpy.types.KinematicConstraint.target"><literal classes="xref py py-class">KinematicConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LatticeGpencilModifier.object" refuri="bpy.types.LatticeGpencilModifier#bpy.types.LatticeGpencilModifier.object"><literal classes="xref py py-class">LatticeGpencilModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LatticeModifier.object" refuri="bpy.types.LatticeModifier#bpy.types.LatticeModifier.object"><literal classes="xref py py-class">LatticeModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LayerObjects.active" refuri="bpy.types.LayerObjects#bpy.types.LayerObjects.active"><literal classes="xref py py-class">LayerObjects.active</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LayerObjects.selected" refuri="bpy.types.LayerObjects#bpy.types.LayerObjects.selected"><literal classes="xref py py-class">LayerObjects.selected</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LimitDistanceConstraint.target" refuri="bpy.types.LimitDistanceConstraint#bpy.types.LimitDistanceConstraint.target"><literal classes="xref py py-class">LimitDistanceConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LineStyleAlphaModifier_DistanceFromObject.target" refuri="bpy.types.LineStyleAlphaModifier_DistanceFromObject#bpy.types.LineStyleAlphaModifier_DistanceFromObject.target"><literal classes="xref py py-class">LineStyleAlphaModifier_DistanceFromObject.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LineStyleColorModifier_DistanceFromObject.target" refuri="bpy.types.LineStyleColorModifier_DistanceFromObject#bpy.types.LineStyleColorModifier_DistanceFromObject.target"><literal classes="xref py py-class">LineStyleColorModifier_DistanceFromObject.target</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LineStyleThicknessModifier_DistanceFromObject.target" refuri="bpy.types.LineStyleThicknessModifier_DistanceFromObject#bpy.types.LineStyleThicknessModifier_DistanceFromObject.target"><literal classes="xref py py-class">LineStyleThicknessModifier_DistanceFromObject.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.LockedTrackConstraint.target" refuri="bpy.types.LockedTrackConstraint#bpy.types.LockedTrackConstraint.target"><literal classes="xref py py-class">LockedTrackConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.MaskModifier.armature" refuri="bpy.types.MaskModifier#bpy.types.MaskModifier.armature"><literal classes="xref py py-class">MaskModifier.armature</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.MeshDeformModifier.object" refuri="bpy.types.MeshDeformModifier#bpy.types.MeshDeformModifier.object"><literal classes="xref py py-class">MeshDeformModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.MirrorGpencilModifier.object" refuri="bpy.types.MirrorGpencilModifier#bpy.types.MirrorGpencilModifier.object"><literal classes="xref py py-class">MirrorGpencilModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.MirrorModifier.mirror_object" refuri="bpy.types.MirrorModifier#bpy.types.MirrorModifier.mirror_object"><literal classes="xref py py-class">MirrorModifier.mirror_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NormalEditModifier.target" refuri="bpy.types.NormalEditModifier#bpy.types.NormalEditModifier.target"><literal classes="xref py py-class">NormalEditModifier.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.Object.find_armature" reftitle="bpy.types.Object.find_armature"><literal classes="xref py py-class">Object.find_armature</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.Object.parent" reftitle="bpy.types.Object.parent"><literal classes="xref py py-class">Object.parent</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.Object.proxy" reftitle="bpy.types.Object.proxy"><literal classes="xref py py-class">Object.proxy</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.Object.proxy_collection" reftitle="bpy.types.Object.proxy_collection"><literal classes="xref py py-class">Object.proxy_collection</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ObjectBase.object" refuri="bpy.types.ObjectBase#bpy.types.ObjectBase.object"><literal classes="xref py py-class">ObjectBase.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ObjectSolverConstraint.camera" refuri="bpy.types.ObjectSolverConstraint#bpy.types.ObjectSolverConstraint.camera"><literal classes="xref py py-class">ObjectSolverConstraint.camera</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleEdit.object" refuri="bpy.types.ParticleEdit#bpy.types.ParticleEdit.object"><literal classes="xref py py-class">ParticleEdit.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleEdit.shape_object" refuri="bpy.types.ParticleEdit#bpy.types.ParticleEdit.shape_object"><literal classes="xref py py-class">ParticleEdit.shape_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleHairKey.co_object" refuri="bpy.types.ParticleHairKey#bpy.types.ParticleHairKey.co_object"><literal classes="xref py py-class">ParticleHairKey.co_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleInstanceModifier.object" refuri="bpy.types.ParticleInstanceModifier#bpy.types.ParticleInstanceModifier.object"><literal classes="xref py py-class">ParticleInstanceModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleSettings.billboard_object" refuri="bpy.types.ParticleSettings#bpy.types.ParticleSettings.billboard_object"><literal classes="xref py py-class">ParticleSettings.billboard_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleSettings.instance_object" refuri="bpy.types.ParticleSettings#bpy.types.ParticleSettings.instance_object"><literal classes="xref py py-class">ParticleSettings.instance_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleSettingsTextureSlot.object" refuri="bpy.types.ParticleSettingsTextureSlot#bpy.types.ParticleSettingsTextureSlot.object"><literal classes="xref py py-class">ParticleSettingsTextureSlot.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleSystem.co_hair" refuri="bpy.types.ParticleSystem#bpy.types.ParticleSystem.co_hair"><literal classes="xref py py-class">ParticleSystem.co_hair</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleSystem.parent" refuri="bpy.types.ParticleSystem#bpy.types.ParticleSystem.parent"><literal classes="xref py py-class">ParticleSystem.parent</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleSystem.reactor_target_object" refuri="bpy.types.ParticleSystem#bpy.types.ParticleSystem.reactor_target_object"><literal classes="xref py py-class">ParticleSystem.reactor_target_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ParticleTarget.object" refuri="bpy.types.ParticleTarget#bpy.types.ParticleTarget.object"><literal classes="xref py py-class">ParticleTarget.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.PivotConstraint.target" refuri="bpy.types.PivotConstraint#bpy.types.PivotConstraint.target"><literal classes="xref py py-class">PivotConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.PoseBone.custom_shape" refuri="bpy.types.PoseBone#bpy.types.PoseBone.custom_shape"><literal classes="xref py py-class">PoseBone.custom_shape</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.bake" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.bake"><literal classes="xref py py-class">RenderEngine.bake</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.camera_model_matrix" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.camera_model_matrix"><literal classes="xref py py-class">RenderEngine.camera_model_matrix</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.camera_override" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.camera_override"><literal classes="xref py py-class">RenderEngine.camera_override</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.camera_shift_x" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.camera_shift_x"><literal classes="xref py py-class">RenderEngine.camera_shift_x</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.use_spherical_stereo" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.use_spherical_stereo"><literal classes="xref py py-class">RenderEngine.use_spherical_stereo</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RigidBodyConstraint.object1" refuri="bpy.types.RigidBodyConstraint#bpy.types.RigidBodyConstraint.object1"><literal classes="xref py py-class">RigidBodyConstraint.object1</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RigidBodyConstraint.object2" refuri="bpy.types.RigidBodyConstraint#bpy.types.RigidBodyConstraint.object2"><literal classes="xref py py-class">RigidBodyConstraint.object2</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.RigidBodyWorld.convex_sweep_test" refuri="bpy.types.RigidBodyWorld#bpy.types.RigidBodyWorld.convex_sweep_test"><literal classes="xref py py-class">RigidBodyWorld.convex_sweep_test</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Scene.camera" refuri="bpy.types.Scene#bpy.types.Scene.camera"><literal classes="xref py py-class">Scene.camera</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Scene.objects" refuri="bpy.types.Scene#bpy.types.Scene.objects"><literal classes="xref py py-class">Scene.objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Scene.ray_cast" refuri="bpy.types.Scene#bpy.types.Scene.ray_cast"><literal classes="xref py py-class">Scene.ray_cast</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Scene.uvedit_aspect" refuri="bpy.types.Scene#bpy.types.Scene.uvedit_aspect"><literal classes="xref py py-class">Scene.uvedit_aspect</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SceneSequence.scene_camera" refuri="bpy.types.SceneSequence#bpy.types.SceneSequence.scene_camera"><literal classes="xref py py-class">SceneSequence.scene_camera</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ScrewModifier.object" refuri="bpy.types.ScrewModifier#bpy.types.ScrewModifier.object"><literal classes="xref py py-class">ScrewModifier.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Sculpt.gravity_object" refuri="bpy.types.Sculpt#bpy.types.Sculpt.gravity_object"><literal classes="xref py py-class">Sculpt.gravity_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShaderFxLight.object" refuri="bpy.types.ShaderFxLight#bpy.types.ShaderFxLight.object"><literal classes="xref py py-class">ShaderFxLight.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShaderFxShadow.object" refuri="bpy.types.ShaderFxShadow#bpy.types.ShaderFxShadow.object"><literal classes="xref py py-class">ShaderFxShadow.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShaderFxSwirl.object" refuri="bpy.types.ShaderFxSwirl#bpy.types.ShaderFxSwirl.object"><literal classes="xref py py-class">ShaderFxSwirl.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexCoord.object" refuri="bpy.types.ShaderNodeTexCoord#bpy.types.ShaderNodeTexCoord.object"><literal classes="xref py py-class">ShaderNodeTexCoord.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexPointDensity.object" refuri="bpy.types.ShaderNodeTexPointDensity#bpy.types.ShaderNodeTexPointDensity.object"><literal classes="xref py py-class">ShaderNodeTexPointDensity.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShrinkwrapConstraint.target" refuri="bpy.types.ShrinkwrapConstraint#bpy.types.ShrinkwrapConstraint.target"><literal classes="xref py py-class">ShrinkwrapConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShrinkwrapModifier.auxiliary_target" refuri="bpy.types.ShrinkwrapModifier#bpy.types.ShrinkwrapModifier.auxiliary_target"><literal classes="xref py py-class">ShrinkwrapModifier.auxiliary_target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShrinkwrapModifier.target" refuri="bpy.types.ShrinkwrapModifier#bpy.types.ShrinkwrapModifier.target"><literal classes="xref py py-class">ShrinkwrapModifier.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SimpleDeformModifier.origin" refuri="bpy.types.SimpleDeformModifier#bpy.types.SimpleDeformModifier.origin"><literal classes="xref py py-class">SimpleDeformModifier.origin</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SpaceView3D.camera" refuri="bpy.types.SpaceView3D#bpy.types.SpaceView3D.camera"><literal classes="xref py py-class">SpaceView3D.camera</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SpaceView3D.lock_object" refuri="bpy.types.SpaceView3D#bpy.types.SpaceView3D.lock_object"><literal classes="xref py py-class">SpaceView3D.lock_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SplineIKConstraint.target" refuri="bpy.types.SplineIKConstraint#bpy.types.SplineIKConstraint.target"><literal classes="xref py py-class">SplineIKConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.StretchToConstraint.target" refuri="bpy.types.StretchToConstraint#bpy.types.StretchToConstraint.target"><literal classes="xref py py-class">StretchToConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SurfaceDeformModifier.target" refuri="bpy.types.SurfaceDeformModifier#bpy.types.SurfaceDeformModifier.target"><literal classes="xref py py-class">SurfaceDeformModifier.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.TextCurve.follow_curve" refuri="bpy.types.TextCurve#bpy.types.TextCurve.follow_curve"><literal classes="xref py py-class">TextCurve.follow_curve</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.TimelineMarker.camera" refuri="bpy.types.TimelineMarker#bpy.types.TimelineMarker.camera"><literal classes="xref py py-class">TimelineMarker.camera</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.TrackToConstraint.target" refuri="bpy.types.TrackToConstraint#bpy.types.TrackToConstraint.target"><literal classes="xref py py-class">TrackToConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.TransformConstraint.target" refuri="bpy.types.TransformConstraint#bpy.types.TransformConstraint.target"><literal classes="xref py py-class">TransformConstraint.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.UVProjector.object" refuri="bpy.types.UVProjector#bpy.types.UVProjector.object"><literal classes="xref py py-class">UVProjector.object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.UVWarpModifier.object_from" refuri="bpy.types.UVWarpModifier#bpy.types.UVWarpModifier.object_from"><literal classes="xref py py-class">UVWarpModifier.object_from</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.UVWarpModifier.object_to" refuri="bpy.types.UVWarpModifier#bpy.types.UVWarpModifier.object_to"><literal classes="xref py py-class">UVWarpModifier.object_to</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.VertexWeightEditModifier.mask_tex_map_object" refuri="bpy.types.VertexWeightEditModifier#bpy.types.VertexWeightEditModifier.mask_tex_map_object"><literal classes="xref py py-class">VertexWeightEditModifier.mask_tex_map_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.VertexWeightMixModifier.mask_tex_map_object" refuri="bpy.types.VertexWeightMixModifier#bpy.types.VertexWeightMixModifier.mask_tex_map_object"><literal classes="xref py py-class">VertexWeightMixModifier.mask_tex_map_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.VertexWeightProximityModifier.mask_tex_map_object" refuri="bpy.types.VertexWeightProximityModifier#bpy.types.VertexWeightProximityModifier.mask_tex_map_object"><literal classes="xref py py-class">VertexWeightProximityModifier.mask_tex_map_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.VertexWeightProximityModifier.target" refuri="bpy.types.VertexWeightProximityModifier#bpy.types.VertexWeightProximityModifier.target"><literal classes="xref py py-class">VertexWeightProximityModifier.target</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ViewLayer.objects" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer.objects"><literal classes="xref py py-class">ViewLayer.objects</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.WarpModifier.object_from" refuri="bpy.types.WarpModifier#bpy.types.WarpModifier.object_from"><literal classes="xref py py-class">WarpModifier.object_from</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.WarpModifier.object_to" refuri="bpy.types.WarpModifier#bpy.types.WarpModifier.object_to"><literal classes="xref py py-class">WarpModifier.object_to</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.WarpModifier.texture_coords_object" refuri="bpy.types.WarpModifier#bpy.types.WarpModifier.texture_coords_object"><literal classes="xref py py-class">WarpModifier.texture_coords_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.WaveModifier.start_position_object" refuri="bpy.types.WaveModifier#bpy.types.WaveModifier.start_position_object"><literal classes="xref py py-class">WaveModifier.start_position_object</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.WaveModifier.texture_coords_object" refuri="bpy.types.WaveModifier#bpy.types.WaveModifier.texture_coords_object"><literal classes="xref py py-class">WaveModifier.texture_coords_object</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
        </section>
    </section>
</document>
