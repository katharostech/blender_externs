<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.CyclesWorldSettings.rst">
    <section ids="module-bpy.types cyclesworldsettings-bpy-struct" names="cyclesworldsettings(bpy_struct)">
        <title>CyclesWorldSettings(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'CyclesWorldSettings\ (class\ in\ bpy.types)',\ u'bpy.types.CyclesWorldSettings',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="CyclesWorldSettings" ids="bpy.types.CyclesWorldSettings" module="bpy.types" names="bpy.types.CyclesWorldSettings"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">CyclesWorldSettings</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <index entries="['single',\ u'homogeneous_volume\ (bpy.types.CyclesWorldSettings\ attribute)',\ u'bpy.types.CyclesWorldSettings.homogeneous_volume',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.homogeneous_volume" ids="bpy.types.CyclesWorldSettings.homogeneous_volume" module="bpy.types" names="bpy.types.CyclesWorldSettings.homogeneous_volume"><desc_name xml:space="preserve">homogeneous_volume</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>When using volume rendering, assume volume has the same density everywhere(not using any textures), for faster rendering</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'max_bounces\ (bpy.types.CyclesWorldSettings\ attribute)',\ u'bpy.types.CyclesWorldSettings.max_bounces',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.max_bounces" ids="bpy.types.CyclesWorldSettings.max_bounces" module="bpy.types" names="bpy.types.CyclesWorldSettings.max_bounces"><desc_name xml:space="preserve">max_bounces</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Maximum number of bounces the background light will contribute to the render</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1024], default 1024</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'sample_map_resolution\ (bpy.types.CyclesWorldSettings\ attribute)',\ u'bpy.types.CyclesWorldSettings.sample_map_resolution',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.sample_map_resolution" ids="bpy.types.CyclesWorldSettings.sample_map_resolution" module="bpy.types" names="bpy.types.CyclesWorldSettings.sample_map_resolution"><desc_name xml:space="preserve">sample_map_resolution</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Importance map size is resolution x resolution/2; higher values potentially produce less noise, at the cost of memory and speed</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [4, 8192], default 1024</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'samples\ (bpy.types.CyclesWorldSettings\ attribute)',\ u'bpy.types.CyclesWorldSettings.samples',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.samples" ids="bpy.types.CyclesWorldSettings.samples" module="bpy.types" names="bpy.types.CyclesWorldSettings.samples"><desc_name xml:space="preserve">samples</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of light samples to render for each AA sample</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 10000], default 1</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'sampling_method\ (bpy.types.CyclesWorldSettings\ attribute)',\ u'bpy.types.CyclesWorldSettings.sampling_method',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.sampling_method" ids="bpy.types.CyclesWorldSettings.sampling_method" module="bpy.types" names="bpy.types.CyclesWorldSettings.sampling_method"><desc_name xml:space="preserve">sampling_method</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>How to sample the background light</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NONE</literal> None, Don’t sample the background, faster but might cause noise for non-solid backgrounds.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUTOMATIC</literal> Auto, Automatically try to determine the best setting.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MANUAL</literal> Manual, Manually set the resolution of the sampling map, higher values are slower and require more memory but reduce noise.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘AUTOMATIC’, ‘MANUAL’], default ‘AUTOMATIC’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'volume_interpolation\ (bpy.types.CyclesWorldSettings\ attribute)',\ u'bpy.types.CyclesWorldSettings.volume_interpolation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.volume_interpolation" ids="bpy.types.CyclesWorldSettings.volume_interpolation" module="bpy.types" names="bpy.types.CyclesWorldSettings.volume_interpolation"><desc_name xml:space="preserve">volume_interpolation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Interpolation method to use for volumes</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>LINEAR</literal> Linear, Good smoothness and speed.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CUBIC</literal> Cubic, Smoothed high quality interpolation, but slower.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘LINEAR’, ‘CUBIC’], default ‘LINEAR’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'volume_sampling\ (bpy.types.CyclesWorldSettings\ attribute)',\ u'bpy.types.CyclesWorldSettings.volume_sampling',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.volume_sampling" ids="bpy.types.CyclesWorldSettings.volume_sampling" module="bpy.types" names="bpy.types.CyclesWorldSettings.volume_sampling"><desc_name xml:space="preserve">volume_sampling</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Sampling method to use for volumes</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>DISTANCE</literal> Distance, Use distance sampling, best for dense volumes with lights far away.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EQUIANGULAR</literal> Equiangular, Use equiangular sampling, best for volumes with low density with light inside or near the volume.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MULTIPLE_IMPORTANCE</literal> Multiple Importance, Combine distance and equi-angular sampling for volumes where neither method is ideal.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘DISTANCE’, ‘EQUIANGULAR’, ‘MULTIPLE_IMPORTANCE’], default ‘EQUIANGULAR’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.CyclesWorldSettings\ class\ method)',\ u'bpy.types.CyclesWorldSettings.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.bl_rna_get_subclass" ids="bpy.types.CyclesWorldSettings.bl_rna_get_subclass" module="bpy.types" names="bpy.types.CyclesWorldSettings.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.CyclesWorldSettings\ class\ method)',\ u'bpy.types.CyclesWorldSettings.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="CyclesWorldSettings" first="False" fullname="CyclesWorldSettings.bl_rna_get_subclass_py" ids="bpy.types.CyclesWorldSettings.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.CyclesWorldSettings.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
