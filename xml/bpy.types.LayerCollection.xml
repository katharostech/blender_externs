<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.LayerCollection.rst">
    <section ids="module-bpy.types layercollection-bpy-struct" names="layercollection(bpy_struct)">
        <title>LayerCollection(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'LayerCollection\ (class\ in\ bpy.types)',\ u'bpy.types.LayerCollection',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="LayerCollection" ids="bpy.types.LayerCollection" module="bpy.types" names="bpy.types.LayerCollection"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">LayerCollection</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Layer collection</paragraph>
                <index entries="['single',\ u'LayerCollection.children\ (in\ module\ bpy.types)',\ u'bpy.types.LayerCollection.children',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.children" ids="bpy.types.LayerCollection.children" module="bpy.types" names="bpy.types.LayerCollection.children"><desc_name xml:space="preserve">children</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Child layer collections</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" refid="bpy.types.LayerCollection" reftitle="bpy.types.LayerCollection"><literal classes="xref py py-class">LayerCollection</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'LayerCollection.collection\ (in\ module\ bpy.types)',\ u'bpy.types.LayerCollection.collection',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.collection" ids="bpy.types.LayerCollection.collection" module="bpy.types" names="bpy.types.LayerCollection.collection"><desc_name xml:space="preserve">collection</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Collection this layer collection is wrapping</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Collection" refuri="bpy.types.Collection#bpy.types.Collection"><literal classes="xref py py-class">Collection</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'exclude\ (bpy.types.LayerCollection\ attribute)',\ u'bpy.types.LayerCollection.exclude',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.exclude" ids="bpy.types.LayerCollection.exclude" module="bpy.types" names="bpy.types.LayerCollection.exclude"><desc_name xml:space="preserve">exclude</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Exclude collection from view layer</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'holdout\ (bpy.types.LayerCollection\ attribute)',\ u'bpy.types.LayerCollection.holdout',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.holdout" ids="bpy.types.LayerCollection.holdout" module="bpy.types" names="bpy.types.LayerCollection.holdout"><desc_name xml:space="preserve">holdout</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Mask out objects in collection from view layer</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'indirect_only\ (bpy.types.LayerCollection\ attribute)',\ u'bpy.types.LayerCollection.indirect_only',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.indirect_only" ids="bpy.types.LayerCollection.indirect_only" module="bpy.types" names="bpy.types.LayerCollection.indirect_only"><desc_name xml:space="preserve">indirect_only</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Objects in collection only contribute indirectly (through shadows and reflections) in the view layer</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'LayerCollection.name\ (in\ module\ bpy.types)',\ u'bpy.types.LayerCollection.name',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.name" ids="bpy.types.LayerCollection.name" module="bpy.types" names="bpy.types.LayerCollection.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Name of this view layer (same as its collection one)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'has_objects()\ (bpy.types.LayerCollection\ method)',\ u'bpy.types.LayerCollection.has_objects',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.has_objects" ids="bpy.types.LayerCollection.has_objects" module="bpy.types" names="bpy.types.LayerCollection.has_objects"><desc_name xml:space="preserve">has_objects</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'has_visible_objects()\ (bpy.types.LayerCollection\ method)',\ u'bpy.types.LayerCollection.has_visible_objects',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.has_visible_objects" ids="bpy.types.LayerCollection.has_visible_objects" module="bpy.types" names="bpy.types.LayerCollection.has_visible_objects"><desc_name xml:space="preserve">has_visible_objects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view_layer</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>) – ViewLayer the layer collection belongs to</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'has_hidden_objects()\ (bpy.types.LayerCollection\ method)',\ u'bpy.types.LayerCollection.has_hidden_objects',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.has_hidden_objects" ids="bpy.types.LayerCollection.has_hidden_objects" module="bpy.types" names="bpy.types.LayerCollection.has_hidden_objects"><desc_name xml:space="preserve">has_hidden_objects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view_layer</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>) – ViewLayer the layer collection belongs to</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'has_selected_objects()\ (bpy.types.LayerCollection\ method)',\ u'bpy.types.LayerCollection.has_selected_objects',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.has_selected_objects" ids="bpy.types.LayerCollection.has_selected_objects" module="bpy.types" names="bpy.types.LayerCollection.has_selected_objects"><desc_name xml:space="preserve">has_selected_objects</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view_layer</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>) – ViewLayer the layer collection belongs to</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>boolean</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.LayerCollection\ class\ method)',\ u'bpy.types.LayerCollection.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.bl_rna_get_subclass" ids="bpy.types.LayerCollection.bl_rna_get_subclass" module="bpy.types" names="bpy.types.LayerCollection.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.LayerCollection\ class\ method)',\ u'bpy.types.LayerCollection.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="LayerCollection" first="False" fullname="LayerCollection.bl_rna_get_subclass_py" ids="bpy.types.LayerCollection.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.LayerCollection.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.collection" refuri="bpy.context#bpy.context.collection"><literal classes="xref py py-mod">bpy.context.collection</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Context.layer_collection" refuri="bpy.types.Context#bpy.types.Context.layer_collection"><literal classes="xref py py-class">Context.layer_collection</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.LayerCollection.children" reftitle="bpy.types.LayerCollection.children"><literal classes="xref py py-class">LayerCollection.children</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ViewLayer.active_layer_collection" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer.active_layer_collection"><literal classes="xref py py-class">ViewLayer.active_layer_collection</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ViewLayer.layer_collection" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer.layer_collection"><literal classes="xref py py-class">ViewLayer.layer_collection</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
