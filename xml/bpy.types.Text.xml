<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Text.rst">
    <section ids="module-bpy.types text-id" names="text(id)">
        <title>Text(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <index entries="['single',\ u'Text\ (class\ in\ bpy.types)',\ u'bpy.types.Text',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Text" ids="bpy.types.Text" module="bpy.types" names="bpy.types.Text"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Text</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Text data-block referencing an external or packed text file</paragraph>
                <index entries="['single',\ u'Text.current_character\ (in\ module\ bpy.types)',\ u'bpy.types.Text.current_character',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.current_character" ids="bpy.types.Text.current_character" module="bpy.types" names="bpy.types.Text.current_character"><desc_name xml:space="preserve">current_character</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Index of current character in current line, and also start index of character in selection if one exists</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Text.current_line\ (in\ module\ bpy.types)',\ u'bpy.types.Text.current_line',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.current_line" ids="bpy.types.Text.current_line" module="bpy.types" names="bpy.types.Text.current_line"><desc_name xml:space="preserve">current_line</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Current line, and start line of selection if one exists</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.TextLine" refuri="bpy.types.TextLine#bpy.types.TextLine"><literal classes="xref py py-class">TextLine</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'current_line_index\ (bpy.types.Text\ attribute)',\ u'bpy.types.Text.current_line_index',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Text" first="False" fullname="Text.current_line_index" ids="bpy.types.Text.current_line_index" module="bpy.types" names="bpy.types.Text.current_line_index"><desc_name xml:space="preserve">current_line_index</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Index of current TextLine in TextLine collection</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filepath\ (bpy.types.Text\ attribute)',\ u'bpy.types.Text.filepath',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Text" first="False" fullname="Text.filepath" ids="bpy.types.Text.filepath" module="bpy.types" names="bpy.types.Text.filepath"><desc_name xml:space="preserve">filepath</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Filename of the text file</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Text.is_dirty\ (in\ module\ bpy.types)',\ u'bpy.types.Text.is_dirty',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.is_dirty" ids="bpy.types.Text.is_dirty" module="bpy.types" names="bpy.types.Text.is_dirty"><desc_name xml:space="preserve">is_dirty</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Text file has been edited since last save</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Text.is_in_memory\ (in\ module\ bpy.types)',\ u'bpy.types.Text.is_in_memory',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.is_in_memory" ids="bpy.types.Text.is_in_memory" module="bpy.types" names="bpy.types.Text.is_in_memory"><desc_name xml:space="preserve">is_in_memory</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Text file is in memory, without a corresponding file on disk</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Text.is_modified\ (in\ module\ bpy.types)',\ u'bpy.types.Text.is_modified',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.is_modified" ids="bpy.types.Text.is_modified" module="bpy.types" names="bpy.types.Text.is_modified"><desc_name xml:space="preserve">is_modified</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Text file on disk is different than the one in memory</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Text.lines\ (in\ module\ bpy.types)',\ u'bpy.types.Text.lines',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.lines" ids="bpy.types.Text.lines" module="bpy.types" names="bpy.types.Text.lines"><desc_name xml:space="preserve">lines</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Lines of text</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.TextLine" refuri="bpy.types.TextLine#bpy.types.TextLine"><literal classes="xref py py-class">TextLine</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Text.select_end_character\ (in\ module\ bpy.types)',\ u'bpy.types.Text.select_end_character',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.select_end_character" ids="bpy.types.Text.select_end_character" module="bpy.types" names="bpy.types.Text.select_end_character"><desc_name xml:space="preserve">select_end_character</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Index of character after end of selection in the selection end line</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Text.select_end_line\ (in\ module\ bpy.types)',\ u'bpy.types.Text.select_end_line',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Text" first="False" fullname="Text.select_end_line" ids="bpy.types.Text.select_end_line" module="bpy.types" names="bpy.types.Text.select_end_line"><desc_name xml:space="preserve">select_end_line</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>End line of selection</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.TextLine" refuri="bpy.types.TextLine#bpy.types.TextLine"><literal classes="xref py py-class">TextLine</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_module\ (bpy.types.Text\ attribute)',\ u'bpy.types.Text.use_module',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Text" first="False" fullname="Text.use_module" ids="bpy.types.Text.use_module" module="bpy.types" names="bpy.types.Text.use_module"><desc_name xml:space="preserve">use_module</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Register this text as a module on loading, Text name must end with “.py”</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_tabs_as_spaces\ (bpy.types.Text\ attribute)',\ u'bpy.types.Text.use_tabs_as_spaces',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Text" first="False" fullname="Text.use_tabs_as_spaces" ids="bpy.types.Text.use_tabs_as_spaces" module="bpy.types" names="bpy.types.Text.use_tabs_as_spaces"><desc_name xml:space="preserve">use_tabs_as_spaces</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Automatically converts all new tabs into spaces</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'clear()\ (bpy.types.Text\ method)',\ u'bpy.types.Text.clear',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Text" first="False" fullname="Text.clear" ids="bpy.types.Text.clear" module="bpy.types" names="bpy.types.Text.clear"><desc_name xml:space="preserve">clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>clear the text block</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'write()\ (bpy.types.Text\ method)',\ u'bpy.types.Text.write',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Text" first="False" fullname="Text.write" ids="bpy.types.Text.write" module="bpy.types" names="bpy.types.Text.write"><desc_name xml:space="preserve">write</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">text</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>write text at the cursor location and advance to the end of the text block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">text</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – New text for this data-block</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'as_string()\ (bpy.types.Text\ method)',\ u'bpy.types.Text.as_string',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Text" first="False" fullname="Text.as_string" ids="bpy.types.Text.as_string" module="bpy.types" names="bpy.types.Text.as_string"><desc_name xml:space="preserve">as_string</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the text as a string.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'from_string()\ (bpy.types.Text\ method)',\ u'bpy.types.Text.from_string',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Text" first="False" fullname="Text.from_string" ids="bpy.types.Text.from_string" module="bpy.types" names="bpy.types.Text.from_string"><desc_name xml:space="preserve">from_string</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">string</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Replace text with this string.</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Text\ class\ method)',\ u'bpy.types.Text.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Text" first="False" fullname="Text.bl_rna_get_subclass" ids="bpy.types.Text.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Text.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Text\ class\ method)',\ u'bpy.types.Text.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Text" first="False" fullname="Text.bl_rna_get_subclass_py" ids="bpy.types.Text.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Text.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.edit_text" refuri="bpy.context#bpy.context.edit_text"><literal classes="xref py py-mod">bpy.context.edit_text</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.texts" refuri="bpy.types.BlendData#bpy.types.BlendData.texts"><literal classes="xref py py-class">BlendData.texts</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataTexts.load" refuri="bpy.types.BlendDataTexts#bpy.types.BlendDataTexts.load"><literal classes="xref py py-class">BlendDataTexts.load</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataTexts.new" refuri="bpy.types.BlendDataTexts#bpy.types.BlendDataTexts.new"><literal classes="xref py py-class">BlendDataTexts.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataTexts.remove" refuri="bpy.types.BlendDataTexts#bpy.types.BlendDataTexts.remove"><literal classes="xref py py-class">BlendDataTexts.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FreestyleModuleSettings.script" refuri="bpy.types.FreestyleModuleSettings#bpy.types.FreestyleModuleSettings.script"><literal classes="xref py py-class">FreestyleModuleSettings.script</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.NodeFrame.text" refuri="bpy.types.NodeFrame#bpy.types.NodeFrame.text"><literal classes="xref py py-class">NodeFrame.text</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.PythonConstraint.text" refuri="bpy.types.PythonConstraint#bpy.types.PythonConstraint.text"><literal classes="xref py py-class">PythonConstraint.text</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeScript.script" refuri="bpy.types.ShaderNodeScript#bpy.types.ShaderNodeScript.script"><literal classes="xref py py-class">ShaderNodeScript.script</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexIES.ies" refuri="bpy.types.ShaderNodeTexIES#bpy.types.ShaderNodeTexIES.ies"><literal classes="xref py py-class">ShaderNodeTexIES.ies</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SpaceTextEditor.text" refuri="bpy.types.SpaceTextEditor#bpy.types.SpaceTextEditor.text"><literal classes="xref py py-class">SpaceTextEditor.text</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
