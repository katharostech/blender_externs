<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.path.rst">
    <section ids="module-bpy.path path-utilities-bpy-path" names="path\ utilities\ (bpy.path)">
        <title>Path Utilities (bpy.path)</title>
        <index entries="['single',\ u'bpy.path\ (module)',\ u'module-bpy.path',\ '',\ None]"></index>
        <paragraph>This module has a similar scope to os.path, containing utility
            functions for dealing with paths in Blender.</paragraph>
        <index entries="['single',\ u'abspath()\ (in\ module\ bpy.path)',\ u'bpy.path.abspath',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="abspath" ids="bpy.path.abspath" module="bpy.path" names="bpy.path.abspath"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">abspath</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">start=None</desc_parameter><desc_parameter xml:space="preserve">library=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the absolute path relative to the current blend file
                    using the “//” prefix.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">start</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>bytes</literal_emphasis>) – Relative to this path,
                                        when not set the current filename is used.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">library</literal_strong> (<reference internal="True" reftitle="bpy.types.Library" refuri="bpy.types.Library#bpy.types.Library"><literal classes="xref py py-class">bpy.types.Library</literal></reference>) – The library this path is from. This is only included for
                                        convenience, when the library is not None its path replaces <emphasis>start</emphasis>.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'basename()\ (in\ module\ bpy.path)',\ u'bpy.path.basename',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="basename" ids="bpy.path.basename" module="bpy.path" names="bpy.path.basename"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">basename</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Equivalent to os.path.basename, but skips a “//” prefix.</paragraph>
                <paragraph>Use for Windows compatibility.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'clean_name()\ (in\ module\ bpy.path)',\ u'bpy.path.clean_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="clean_name" ids="bpy.path.clean_name" module="bpy.path" names="bpy.path.clean_name"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">clean_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter><desc_parameter xml:space="preserve">replace='_'</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns a name with characters replaced that
                    may cause problems under various circumstances,
                    such as writing to a file.
                    All characters besides A-Z/a-z, 0-9 are replaced with “_”
                    or the <emphasis>replace</emphasis> argument if defined.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'display_name()\ (in\ module\ bpy.path)',\ u'bpy.path.display_name',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="display_name" ids="bpy.path.display_name" module="bpy.path" names="bpy.path.display_name"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">display_name</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Creates a display string from name to be used menus and the user interface.
                    Capitalize the first letter in all lowercase names,
                    mixed case names are kept as is. Intended for use with
                    filenames and module names.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'display_name_to_filepath()\ (in\ module\ bpy.path)',\ u'bpy.path.display_name_to_filepath',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="display_name_to_filepath" ids="bpy.path.display_name_to_filepath" module="bpy.path" names="bpy.path.display_name_to_filepath"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">display_name_to_filepath</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Performs the reverse of display_name using literal versions of characters
                    which aren’t supported in a filepath.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'display_name_from_filepath()\ (in\ module\ bpy.path)',\ u'bpy.path.display_name_from_filepath',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="display_name_from_filepath" ids="bpy.path.display_name_from_filepath" module="bpy.path" names="bpy.path.display_name_from_filepath"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">display_name_from_filepath</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">name</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the path stripped of directory and extension,
                    ensured to be utf8 compatible.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'ensure_ext()\ (in\ module\ bpy.path)',\ u'bpy.path.ensure_ext',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="ensure_ext" ids="bpy.path.ensure_ext" module="bpy.path" names="bpy.path.ensure_ext"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">ensure_ext</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filepath</desc_parameter><desc_parameter xml:space="preserve">ext</desc_parameter><desc_parameter xml:space="preserve">case_sensitive=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return the path with the extension added if it is not already set.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">ext</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The extension to check for, can be a compound extension. Should
                                        start with a dot, such as ‘.blend’ or ‘.tar.gz’.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">case_sensitive</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Check for matching case when comparing extensions.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'is_subdir()\ (in\ module\ bpy.path)',\ u'bpy.path.is_subdir',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="is_subdir" ids="bpy.path.is_subdir" module="bpy.path" names="bpy.path.is_subdir"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">is_subdir</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">directory</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns true if <emphasis>path</emphasis> in a subdirectory of <emphasis>directory</emphasis>.
                    Both paths must be absolute.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">path</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>bytes</literal_emphasis>) – An absolute path.</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'module_names()\ (in\ module\ bpy.path)',\ u'bpy.path.module_names',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="module_names" ids="bpy.path.module_names" module="bpy.path" names="bpy.path.module_names"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">module_names</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">recursive=False</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Return a list of modules which can be imported from <emphasis>path</emphasis>.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">path</literal_strong> (<literal_emphasis>string</literal_emphasis>) – a directory to scan.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">recursive</literal_strong> (<literal_emphasis>bool</literal_emphasis>) – Also return submodule names for packages.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>a list of string pairs (module_name, module_file).</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'native_pathsep()\ (in\ module\ bpy.path)',\ u'bpy.path.native_pathsep',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="native_pathsep" ids="bpy.path.native_pathsep" module="bpy.path" names="bpy.path.native_pathsep"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">native_pathsep</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Replace the path separator with the systems native <literal>os.sep</literal>.</paragraph>
            </desc_content>
        </desc>
        <index entries="['single',\ u'reduce_dirs()\ (in\ module\ bpy.path)',\ u'bpy.path.reduce_dirs',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="reduce_dirs" ids="bpy.path.reduce_dirs" module="bpy.path" names="bpy.path.reduce_dirs"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">reduce_dirs</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">dirs</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Given a sequence of directories, remove duplicates and
                    any directories nested in one of the other paths.
                    (Useful for recursive path searching).</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <paragraph><literal_strong refspecific="True">dirs</literal_strong> (<literal_emphasis>sequence</literal_emphasis>) – Sequence of directory paths.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Returns</field_name>
                        <field_body>
                            <paragraph>A unique list of paths.</paragraph>
                        </field_body>
                    </field>
                    <field>
                        <field_name>Return type</field_name>
                        <field_body>
                            <paragraph>list</paragraph>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'relpath()\ (in\ module\ bpy.path)',\ u'bpy.path.relpath',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="relpath" ids="bpy.path.relpath" module="bpy.path" names="bpy.path.relpath"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">relpath</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter><desc_parameter xml:space="preserve">start=None</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Returns the path relative to the current blend file using the “//” prefix.</paragraph>
                <field_list>
                    <field>
                        <field_name>Parameters</field_name>
                        <field_body>
                            <bullet_list>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">path</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>bytes</literal_emphasis>) – An absolute path.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal_strong refspecific="True">start</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis> or </literal_emphasis><literal_emphasis>bytes</literal_emphasis>) – Relative to this path,
                                        when not set the current filename is used.</paragraph>
                                </list_item>
                            </bullet_list>
                        </field_body>
                    </field>
                </field_list>
            </desc_content>
        </desc>
        <index entries="['single',\ u'resolve_ncase()\ (in\ module\ bpy.path)',\ u'bpy.path.resolve_ncase',\ '',\ None]"></index>
        <desc desctype="function" domain="py" noindex="False" objtype="function">
            <desc_signature class="" first="False" fullname="resolve_ncase" ids="bpy.path.resolve_ncase" module="bpy.path" names="bpy.path.resolve_ncase"><desc_addname xml:space="preserve">bpy.path.</desc_addname><desc_name xml:space="preserve">resolve_ncase</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">path</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Resolve a case insensitive path on a case sensitive system,
                    returning a string with the path if found else return the original path.</paragraph>
            </desc_content>
        </desc>
    </section>
</document>
