<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.PropertyGroup.rst">
    <section ids="module-bpy.types propertygroup-bpy-struct" names="propertygroup(bpy_struct)">
        <title>PropertyGroup(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <section ids="custom-properties" names="custom\ properties">
            <title>Custom Properties</title>
            <paragraph>PropertyGroups are the base class for dynamically defined sets of properties.</paragraph>
            <paragraph>They can be used to extend existing blender data with your own types which can
                be animated, accessed from the user interface and from python.</paragraph>
            <note>
                <paragraph>The values assigned to blender data are saved to disk but the class
                    definitions are not, this means whenever you load blender the class needs
                    to be registered too.</paragraph>
                <paragraph>This is best done by creating an add-on which loads on startup and registers
                    your properties.</paragraph>
            </note>
            <note>
                <paragraph>PropertyGroups must be registered before assigning them to blender data.</paragraph>
            </note>
            <seealso>
                <paragraph>Property types used in class declarations are all in <reference internal="True" reftitle="bpy.props" refuri="bpy.props#module-bpy.props"><literal classes="xref py py-mod">bpy.props</literal></reference></paragraph>
            </seealso>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.PropertyGroup.py" xml:space="preserve">import bpy


class MyPropertyGroup(bpy.types.PropertyGroup):
    custom_1 = bpy.props.FloatProperty(name="My Float")
    custom_2 = bpy.props.IntProperty(name="My Int")


bpy.utils.register_class(MyPropertyGroup)

bpy.types.Object.my_prop_grp = bpy.props.PointerProperty(type=MyPropertyGroup)


# test this worked
bpy.data.objects[0].my_prop_grp.custom_1 = 22.0
</literal_block>
            <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
            <paragraph>subclasses —
                <reference internal="True" reftitle="bpy.types.OperatorFileListElement" refuri="bpy.types.OperatorFileListElement#bpy.types.OperatorFileListElement"><literal classes="xref py py-class">OperatorFileListElement</literal></reference>, <reference internal="True" reftitle="bpy.types.OperatorMousePath" refuri="bpy.types.OperatorMousePath#bpy.types.OperatorMousePath"><literal classes="xref py py-class">OperatorMousePath</literal></reference>, <reference internal="True" reftitle="bpy.types.OperatorStrokeElement" refuri="bpy.types.OperatorStrokeElement#bpy.types.OperatorStrokeElement"><literal classes="xref py py-class">OperatorStrokeElement</literal></reference>, <reference internal="True" reftitle="bpy.types.SelectedUvElement" refuri="bpy.types.SelectedUvElement#bpy.types.SelectedUvElement"><literal classes="xref py py-class">SelectedUvElement</literal></reference></paragraph>
            <index entries="['single',\ u'PropertyGroup\ (class\ in\ bpy.types)',\ u'bpy.types.PropertyGroup',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="PropertyGroup" ids="bpy.types.PropertyGroup" module="bpy.types" names="bpy.types.PropertyGroup"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">PropertyGroup</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Group of ID properties</paragraph>
                    <index entries="['single',\ u'name\ (bpy.types.PropertyGroup\ attribute)',\ u'bpy.types.PropertyGroup.name',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="PropertyGroup" first="False" fullname="PropertyGroup.name" ids="bpy.types.PropertyGroup.name" module="bpy.types" names="bpy.types.PropertyGroup.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Unique name used in the code and scripting</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>string, default “”, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.PropertyGroup\ class\ method)',\ u'bpy.types.PropertyGroup.bl_rna_get_subclass',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="PropertyGroup" first="False" fullname="PropertyGroup.bl_rna_get_subclass" ids="bpy.types.PropertyGroup.bl_rna_get_subclass" module="bpy.types" names="bpy.types.PropertyGroup.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The RNA type or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.PropertyGroup\ class\ method)',\ u'bpy.types.PropertyGroup.bl_rna_get_subclass_py',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="PropertyGroup" first="False" fullname="PropertyGroup.bl_rna_get_subclass_py" ids="bpy.types.PropertyGroup.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.PropertyGroup.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The class or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>type</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <rubric>Inherited Properties</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>Inherited Functions</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>References</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeGroup.interface" refuri="bpy.types.CompositorNodeGroup#bpy.types.CompositorNodeGroup.interface"><literal classes="xref py py-class">CompositorNodeGroup.interface</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeCustomGroup.interface" refuri="bpy.types.NodeCustomGroup#bpy.types.NodeCustomGroup.interface"><literal classes="xref py py-class">NodeCustomGroup.interface</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeGroup.interface" refuri="bpy.types.NodeGroup#bpy.types.NodeGroup.interface"><literal classes="xref py py-class">NodeGroup.interface</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeGroupInput.interface" refuri="bpy.types.NodeGroupInput#bpy.types.NodeGroupInput.interface"><literal classes="xref py py-class">NodeGroupInput.interface</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeGroupOutput.interface" refuri="bpy.types.NodeGroupOutput#bpy.types.NodeGroupOutput.interface"><literal classes="xref py py-class">NodeGroupOutput.interface</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.PropertyGroupItem.collection" refuri="bpy.types.PropertyGroupItem#bpy.types.PropertyGroupItem.collection"><literal classes="xref py py-class">PropertyGroupItem.collection</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.PropertyGroupItem.group" refuri="bpy.types.PropertyGroupItem#bpy.types.PropertyGroupItem.group"><literal classes="xref py py-class">PropertyGroupItem.group</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.PropertyGroupItem.idp_array" refuri="bpy.types.PropertyGroupItem#bpy.types.PropertyGroupItem.idp_array"><literal classes="xref py py-class">PropertyGroupItem.idp_array</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeGroup.interface" refuri="bpy.types.ShaderNodeGroup#bpy.types.ShaderNodeGroup.interface"><literal classes="xref py py-class">ShaderNodeGroup.interface</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.TextureNodeGroup.interface" refuri="bpy.types.TextureNodeGroup#bpy.types.TextureNodeGroup.interface"><literal classes="xref py py-class">TextureNodeGroup.interface</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
        </section>
    </section>
</document>
