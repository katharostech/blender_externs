<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.MovieClip.rst">
    <section ids="module-bpy.types movieclip-id" names="movieclip(id)">
        <title>MovieClip(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <index entries="['single',\ u'MovieClip\ (class\ in\ bpy.types)',\ u'bpy.types.MovieClip',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="MovieClip" ids="bpy.types.MovieClip" module="bpy.types" names="bpy.types.MovieClip"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">MovieClip</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>MovieClip data-block referencing an external movie file</paragraph>
                <index entries="['single',\ u'MovieClip.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.animation_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.animation_data" ids="bpy.types.MovieClip.animation_data" module="bpy.types" names="bpy.types.MovieClip.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation data for this data-block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'MovieClip.colorspace_settings\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.colorspace_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.colorspace_settings" ids="bpy.types.MovieClip.colorspace_settings" module="bpy.types" names="bpy.types.MovieClip.colorspace_settings"><desc_name xml:space="preserve">colorspace_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Input color space settings</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorManagedInputColorspaceSettings" refuri="bpy.types.ColorManagedInputColorspaceSettings#bpy.types.ColorManagedInputColorspaceSettings"><literal classes="xref py py-class">ColorManagedInputColorspaceSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'display_aspect\ (bpy.types.MovieClip\ attribute)',\ u'bpy.types.MovieClip.display_aspect',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.display_aspect" ids="bpy.types.MovieClip.display_aspect" module="bpy.types" names="bpy.types.MovieClip.display_aspect"><desc_name xml:space="preserve">display_aspect</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display Aspect for this clip, does not affect rendering</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [0.1, inf], default (0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filepath\ (bpy.types.MovieClip\ attribute)',\ u'bpy.types.MovieClip.filepath',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.filepath" ids="bpy.types.MovieClip.filepath" module="bpy.types" names="bpy.types.MovieClip.filepath"><desc_name xml:space="preserve">filepath</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Filename of the movie or sequence file</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'MovieClip.fps\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.fps',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.fps" ids="bpy.types.MovieClip.fps" module="bpy.types" names="bpy.types.MovieClip.fps"><desc_name xml:space="preserve">fps</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Detected frame rate of the movie clip in frames per second</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf], default 0.0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'MovieClip.frame_duration\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.frame_duration',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.frame_duration" ids="bpy.types.MovieClip.frame_duration" module="bpy.types" names="bpy.types.MovieClip.frame_duration"><desc_name xml:space="preserve">frame_duration</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Detected duration of movie clip in frames</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_offset\ (bpy.types.MovieClip\ attribute)',\ u'bpy.types.MovieClip.frame_offset',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.frame_offset" ids="bpy.types.MovieClip.frame_offset" module="bpy.types" names="bpy.types.MovieClip.frame_offset"><desc_name xml:space="preserve">frame_offset</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Offset of footage first frame relative to it’s file name (affects only how footage is loading, does not change data associated with a clip)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_start\ (bpy.types.MovieClip\ attribute)',\ u'bpy.types.MovieClip.frame_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.frame_start" ids="bpy.types.MovieClip.frame_start" module="bpy.types" names="bpy.types.MovieClip.frame_start"><desc_name xml:space="preserve">frame_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Global scene frame number at which this movie starts playing (affects all data associated with a clip)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'grease_pencil\ (bpy.types.MovieClip\ attribute)',\ u'bpy.types.MovieClip.grease_pencil',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.grease_pencil" ids="bpy.types.MovieClip.grease_pencil" module="bpy.types" names="bpy.types.MovieClip.grease_pencil"><desc_name xml:space="preserve">grease_pencil</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Grease pencil data for this movie clip</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.GreasePencil" refuri="bpy.types.GreasePencil#bpy.types.GreasePencil"><literal classes="xref py py-class">GreasePencil</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'MovieClip.proxy\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.proxy',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.proxy" ids="bpy.types.MovieClip.proxy" module="bpy.types" names="bpy.types.MovieClip.proxy"><desc_name xml:space="preserve">proxy</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.MovieClipProxy" refuri="bpy.types.MovieClipProxy#bpy.types.MovieClipProxy"><literal classes="xref py py-class">MovieClipProxy</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'MovieClip.size\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.size',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.size" ids="bpy.types.MovieClip.size" module="bpy.types" names="bpy.types.MovieClip.size"><desc_name xml:space="preserve">size</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Width and height in pixels, zero when image data cant be loaded</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int array of 2 items in [-inf, inf], default (0, 0), (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'MovieClip.source\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.source',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.source" ids="bpy.types.MovieClip.source" module="bpy.types" names="bpy.types.MovieClip.source"><desc_name xml:space="preserve">source</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Where the clip comes from</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>SEQUENCE</literal> Image Sequence, Multiple image files, as a sequence.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MOVIE</literal> Movie File, Movie file.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘SEQUENCE’, ‘MOVIE’], default ‘SEQUENCE’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'MovieClip.tracking\ (in\ module\ bpy.types)',\ u'bpy.types.MovieClip.tracking',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.tracking" ids="bpy.types.MovieClip.tracking" module="bpy.types" names="bpy.types.MovieClip.tracking"><desc_name xml:space="preserve">tracking</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.MovieTracking" refuri="bpy.types.MovieTracking#bpy.types.MovieTracking"><literal classes="xref py py-class">MovieTracking</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_proxy\ (bpy.types.MovieClip\ attribute)',\ u'bpy.types.MovieClip.use_proxy',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.use_proxy" ids="bpy.types.MovieClip.use_proxy" module="bpy.types" names="bpy.types.MovieClip.use_proxy"><desc_name xml:space="preserve">use_proxy</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use a preview proxy and/or timecode index for this clip</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_proxy_custom_directory\ (bpy.types.MovieClip\ attribute)',\ u'bpy.types.MovieClip.use_proxy_custom_directory',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.use_proxy_custom_directory" ids="bpy.types.MovieClip.use_proxy_custom_directory" module="bpy.types" names="bpy.types.MovieClip.use_proxy_custom_directory"><desc_name xml:space="preserve">use_proxy_custom_directory</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Create proxy images in a custom directory (default is movie location)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'metadata()\ (bpy.types.MovieClip\ method)',\ u'bpy.types.MovieClip.metadata',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.metadata" ids="bpy.types.MovieClip.metadata" module="bpy.types" names="bpy.types.MovieClip.metadata"><desc_name xml:space="preserve">metadata</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Retrieve metadata of the movie file</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Dict-like object containing the metadata</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.IDPropertyWrapPtr" refuri="bpy.types.IDPropertyWrapPtr#bpy.types.IDPropertyWrapPtr"><literal classes="xref py py-class">IDPropertyWrapPtr</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.MovieClip\ class\ method)',\ u'bpy.types.MovieClip.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.bl_rna_get_subclass" ids="bpy.types.MovieClip.bl_rna_get_subclass" module="bpy.types" names="bpy.types.MovieClip.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.MovieClip\ class\ method)',\ u'bpy.types.MovieClip.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="MovieClip" first="False" fullname="MovieClip.bl_rna_get_subclass_py" ids="bpy.types.MovieClip.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.MovieClip.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.edit_movieclip" refuri="bpy.context#bpy.context.edit_movieclip"><literal classes="xref py py-mod">bpy.context.edit_movieclip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.movieclips" refuri="bpy.types.BlendData#bpy.types.BlendData.movieclips"><literal classes="xref py py-class">BlendData.movieclips</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataMovieClips.load" refuri="bpy.types.BlendDataMovieClips#bpy.types.BlendDataMovieClips.load"><literal classes="xref py py-class">BlendDataMovieClips.load</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataMovieClips.remove" refuri="bpy.types.BlendDataMovieClips#bpy.types.BlendDataMovieClips.remove"><literal classes="xref py py-class">BlendDataMovieClips.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CameraBackgroundImage.clip" refuri="bpy.types.CameraBackgroundImage#bpy.types.CameraBackgroundImage.clip"><literal classes="xref py py-class">CameraBackgroundImage.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CameraSolverConstraint.clip" refuri="bpy.types.CameraSolverConstraint#bpy.types.CameraSolverConstraint.clip"><literal classes="xref py py-class">CameraSolverConstraint.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeKeyingScreen.clip" refuri="bpy.types.CompositorNodeKeyingScreen#bpy.types.CompositorNodeKeyingScreen.clip"><literal classes="xref py py-class">CompositorNodeKeyingScreen.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeMovieClip.clip" refuri="bpy.types.CompositorNodeMovieClip#bpy.types.CompositorNodeMovieClip.clip"><literal classes="xref py py-class">CompositorNodeMovieClip.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeMovieDistortion.clip" refuri="bpy.types.CompositorNodeMovieDistortion#bpy.types.CompositorNodeMovieDistortion.clip"><literal classes="xref py py-class">CompositorNodeMovieDistortion.clip</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodePlaneTrackDeform.clip" refuri="bpy.types.CompositorNodePlaneTrackDeform#bpy.types.CompositorNodePlaneTrackDeform.clip"><literal classes="xref py py-class">CompositorNodePlaneTrackDeform.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeStabilize.clip" refuri="bpy.types.CompositorNodeStabilize#bpy.types.CompositorNodeStabilize.clip"><literal classes="xref py py-class">CompositorNodeStabilize.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeTrackPos.clip" refuri="bpy.types.CompositorNodeTrackPos#bpy.types.CompositorNodeTrackPos.clip"><literal classes="xref py py-class">CompositorNodeTrackPos.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FollowTrackConstraint.clip" refuri="bpy.types.FollowTrackConstraint#bpy.types.FollowTrackConstraint.clip"><literal classes="xref py py-class">FollowTrackConstraint.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectSolverConstraint.clip" refuri="bpy.types.ObjectSolverConstraint#bpy.types.ObjectSolverConstraint.clip"><literal classes="xref py py-class">ObjectSolverConstraint.clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Scene.active_clip" refuri="bpy.types.Scene#bpy.types.Scene.active_clip"><literal classes="xref py py-class">Scene.active_clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_clip" refuri="bpy.types.Sequences#bpy.types.Sequences.new_clip"><literal classes="xref py py-class">Sequences.new_clip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SpaceClipEditor.clip" refuri="bpy.types.SpaceClipEditor#bpy.types.SpaceClipEditor.clip"><literal classes="xref py py-class">SpaceClipEditor.clip</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
