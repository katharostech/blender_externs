<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.NodeTree.rst">
    <section ids="module-bpy.types nodetree-id" names="nodetree(id)">
        <title>NodeTree(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <section ids="poll-function" names="poll\ function">
            <title>Poll Function</title>
            <paragraph>The <reference internal="True" refid="bpy.types.NodeTree.poll" reftitle="bpy.types.NodeTree.poll"><literal classes="xref py py-class">NodeTree.poll</literal></reference> function determines if a node tree is visible
                in the given context (similar to how <reference internal="True" reftitle="bpy.types.Panel.poll" refuri="bpy.types.Panel#bpy.types.Panel.poll"><literal classes="xref py py-class">Panel.poll</literal></reference>
                and <reference internal="True" reftitle="bpy.types.Menu.poll" refuri="bpy.types.Menu#bpy.types.Menu.poll"><literal classes="xref py py-class">Menu.poll</literal></reference> define visibility). If it returns False,
                the node tree type will not be selectable in the node editor.</paragraph>
            <paragraph>A typical condition for shader nodes would be to check the active render engine
                of the scene and only show nodes of the renderer they are designed for.</paragraph>
            <literal_block force_highlighting="False" highlight_args="{'linenostart': 1}" language="default" linenos="False" source="/home/zicklag/git/other/blender/doc/python_api/examples/bpy.types.NodeTree.py" xml:space="preserve">import bpy


class CyclesNodeTree(bpy.types.NodeTree):
    """ This operator is only visible when Cycles is the selected render engine"""
    bl_label = "Cycles Node Tree"

    @classmethod
    def poll(cls, context):
        return context.scene.render.engine == 'CYCLES'


bpy.utils.register_class(CyclesNodeTree)
</literal_block>
            <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
            <paragraph>subclasses —
                <reference internal="True" reftitle="bpy.types.CompositorNodeTree" refuri="bpy.types.CompositorNodeTree#bpy.types.CompositorNodeTree"><literal classes="xref py py-class">CompositorNodeTree</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderNodeTree" refuri="bpy.types.ShaderNodeTree#bpy.types.ShaderNodeTree"><literal classes="xref py py-class">ShaderNodeTree</literal></reference>, <reference internal="True" reftitle="bpy.types.TextureNodeTree" refuri="bpy.types.TextureNodeTree#bpy.types.TextureNodeTree"><literal classes="xref py py-class">TextureNodeTree</literal></reference></paragraph>
            <index entries="['single',\ u'NodeTree\ (class\ in\ bpy.types)',\ u'bpy.types.NodeTree',\ '',\ None]"></index>
            <desc desctype="class" domain="py" noindex="False" objtype="class">
                <desc_signature class="" first="False" fullname="NodeTree" ids="bpy.types.NodeTree" module="bpy.types" names="bpy.types.NodeTree"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">NodeTree</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
                <desc_content>
                    <paragraph>Node tree consisting of linked nodes used for shading, textures and compositing</paragraph>
                    <index entries="['single',\ u'active_input\ (bpy.types.NodeTree\ attribute)',\ u'bpy.types.NodeTree.active_input',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.active_input" ids="bpy.types.NodeTree.active_input" module="bpy.types" names="bpy.types.NodeTree.active_input"><desc_name xml:space="preserve">active_input</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Index of the active input</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'active_output\ (bpy.types.NodeTree\ attribute)',\ u'bpy.types.NodeTree.active_output',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.active_output" ids="bpy.types.NodeTree.active_output" module="bpy.types" names="bpy.types.NodeTree.active_output"><desc_name xml:space="preserve">active_output</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Index of the active output</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>int in [0, inf], default 0</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'NodeTree.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.NodeTree.animation_data',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.animation_data" ids="bpy.types.NodeTree.animation_data" module="bpy.types" names="bpy.types.NodeTree.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Animation data for this data-block</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_description\ (bpy.types.NodeTree\ attribute)',\ u'bpy.types.NodeTree.bl_description',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.bl_description" ids="bpy.types.NodeTree.bl_description" module="bpy.types" names="bpy.types.NodeTree.bl_description"><desc_name xml:space="preserve">bl_description</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>string, default “”, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_icon\ (bpy.types.NodeTree\ attribute)',\ u'bpy.types.NodeTree.bl_icon',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.bl_icon" ids="bpy.types.NodeTree.bl_icon" module="bpy.types" names="bpy.types.NodeTree.bl_icon"><desc_name xml:space="preserve">bl_icon</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The node tree icon</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘NONE’, ‘QUESTION’, ‘ERROR’, ‘CANCEL’, ‘TRIA_RIGHT’, ‘TRIA_DOWN’, ‘TRIA_LEFT’, ‘TRIA_UP’, ‘ARROW_LEFTRIGHT’, ‘PLUS’, ‘DISCLOSURE_TRI_RIGHT’, ‘DISCLOSURE_TRI_DOWN’, ‘RADIOBUT_OFF’, ‘RADIOBUT_ON’, ‘MENU_PANEL’, ‘BLENDER’, ‘GRIP’, ‘DOT’, ‘COLLAPSEMENU’, ‘X’, ‘DUPLICATE’, ‘NODE’, ‘NODE_SEL’, ‘WINDOW’, ‘WORKSPACE’, ‘RIGHTARROW_THIN’, ‘BORDERMOVE’, ‘VIEWZOOM’, ‘ADD’, ‘REMOVE’, ‘PANEL_CLOSE’, ‘COPY_ID’, ‘EYEDROPPER’, ‘AUTO’, ‘CHECKBOX_DEHLT’, ‘CHECKBOX_HLT’, ‘UNLOCKED’, ‘LOCKED’, ‘UNPINNED’, ‘PINNED’, ‘SCREEN_BACK’, ‘RIGHTARROW’, ‘DOWNARROW_HLT’, ‘PLUGIN’, ‘HELP’, ‘GHOST_ENABLED’, ‘COLOR’, ‘UNLINKED’, ‘LINKED’, ‘HAND’, ‘ZOOM_ALL’, ‘ZOOM_SELECTED’, ‘ZOOM_PREVIOUS’, ‘ZOOM_IN’, ‘ZOOM_OUT’, ‘DRIVER_DISTANCE’, ‘DRIVER_ROTATIONAL_DIFFERENCE’, ‘DRIVER_TRANSFORM’, ‘FREEZE’, ‘STYLUS_PRESSURE’, ‘GHOST_DISABLED’, ‘FILE_NEW’, ‘FILE_TICK’, ‘QUIT’, ‘URL’, ‘RECOVER_LAST’, ‘THREE_DOTS’, ‘FULLSCREEN_ENTER’, ‘FULLSCREEN_EXIT’, ‘LIGHT’, ‘MATERIAL’, ‘TEXTURE’, ‘ANIM’, ‘WORLD’, ‘SCENE’, ‘OUTPUT’, ‘SCRIPT’, ‘PARTICLES’, ‘PHYSICS’, ‘SPEAKER’, ‘TOOL_SETTINGS’, ‘SHADERFX’, ‘BLANK1’, ‘FAKE_USER_OFF’, ‘FAKE_USER_ON’, ‘VIEW3D’, ‘GRAPH’, ‘OUTLINER’, ‘PROPERTIES’, ‘FILEBROWSER’, ‘IMAGE’, ‘INFO’, ‘SEQUENCE’, ‘TEXT’, ‘SOUND’, ‘ACTION’, ‘NLA’, ‘PREFERENCES’, ‘TIME’, ‘NODETREE’, ‘CONSOLE’, ‘CLIP’, ‘ASSET_MANAGER’, ‘NODE_COMPOSITING’, ‘NODE_TEXTURE’, ‘NODE_MATERIAL’, ‘OBJECT_DATAMODE’, ‘EDITMODE_HLT’, ‘UV’, ‘VPAINT_HLT’, ‘TPAINT_HLT’, ‘WPAINT_HLT’, ‘SCULPTMODE_HLT’, ‘POSE_HLT’, ‘PARTICLEMODE’, ‘TRACKING’, ‘TRACKING_BACKWARDS’, ‘TRACKING_FORWARDS’, ‘TRACKING_BACKWARDS_SINGLE’, ‘TRACKING_FORWARDS_SINGLE’, ‘TRACKING_CLEAR_BACKWARDS’, ‘TRACKING_CLEAR_FORWARDS’, ‘TRACKING_REFINE_BACKWARDS’, ‘TRACKING_REFINE_FORWARDS’, ‘SCENE_DATA’, ‘RENDERLAYERS’, ‘WORLD_DATA’, ‘OBJECT_DATA’, ‘MESH_DATA’, ‘CURVE_DATA’, ‘META_DATA’, ‘LATTICE_DATA’, ‘LIGHT_DATA’, ‘MATERIAL_DATA’, ‘TEXTURE_DATA’, ‘ANIM_DATA’, ‘CAMERA_DATA’, ‘PARTICLE_DATA’, ‘LIBRARY_DATA_DIRECT’, ‘GROUP’, ‘ARMATURE_DATA’, ‘COMMUNITY’, ‘BONE_DATA’, ‘CONSTRAINT’, ‘SHAPEKEY_DATA’, ‘CONSTRAINT_BONE’, ‘CAMERA_STEREO’, ‘PACKAGE’, ‘UGLYPACKAGE’, ‘EXPERIMENTAL’, ‘BRUSH_DATA’, ‘IMAGE_DATA’, ‘FILE’, ‘FCURVE’, ‘FONT_DATA’, ‘RENDER_RESULT’, ‘SURFACE_DATA’, ‘EMPTY_DATA’, ‘PRESET’, ‘RENDER_ANIMATION’, ‘RENDER_STILL’, ‘LIBRARY_DATA_BROKEN’, ‘BOIDS’, ‘STRANDS’, ‘LIBRARY_DATA_INDIRECT’, ‘GREASEPENCIL’, ‘LINE_DATA’, ‘LIBRARY_DATA_OVERRIDE’, ‘GROUP_BONE’, ‘GROUP_VERTEX’, ‘GROUP_VCOL’, ‘GROUP_UVS’, ‘FACE_MAPS’, ‘RNA’, ‘RNA_ADD’, ‘MOUSE_LMB’, ‘MOUSE_MMB’, ‘MOUSE_RMB’, ‘MOUSE_MOVE’, ‘MOUSE_LMB_DRAG’, ‘MOUSE_MMB_DRAG’, ‘MOUSE_RMB_DRAG’, ‘PRESET_NEW’, ‘DECORATE’, ‘DECORATE_KEYFRAME’, ‘DECORATE_ANIMATE’, ‘DECORATE_DRIVER’, ‘DECORATE_LINKED’, ‘DECORATE_LIBRARY_OVERRIDE’, ‘DECORATE_UNLOCKED’, ‘DECORATE_LOCKED’, ‘DECORATE_OVERRIDE’, ‘SEALED’, ‘HEART’, ‘ORPHAN_DATA’, ‘USER’, ‘SYSTEM’, ‘SETTINGS’, ‘OUTLINER_OB_EMPTY’, ‘OUTLINER_OB_MESH’, ‘OUTLINER_OB_CURVE’, ‘OUTLINER_OB_LATTICE’, ‘OUTLINER_OB_META’, ‘OUTLINER_OB_LIGHT’, ‘OUTLINER_OB_CAMERA’, ‘OUTLINER_OB_ARMATURE’, ‘OUTLINER_OB_FONT’, ‘OUTLINER_OB_SURFACE’, ‘OUTLINER_OB_SPEAKER’, ‘OUTLINER_OB_FORCE_FIELD’, ‘OUTLINER_OB_GROUP_INSTANCE’, ‘OUTLINER_OB_GREASEPENCIL’, ‘OUTLINER_OB_LIGHTPROBE’, ‘OUTLINER_OB_IMAGE’, ‘RESTRICT_COLOR_OFF’, ‘RESTRICT_COLOR_ON’, ‘HIDE_ON’, ‘HIDE_OFF’, ‘RESTRICT_SELECT_ON’, ‘RESTRICT_SELECT_OFF’, ‘RESTRICT_RENDER_ON’, ‘RESTRICT_RENDER_OFF’, ‘OUTLINER_DATA_EMPTY’, ‘OUTLINER_DATA_MESH’, ‘OUTLINER_DATA_CURVE’, ‘OUTLINER_DATA_LATTICE’, ‘OUTLINER_DATA_META’, ‘OUTLINER_DATA_LIGHT’, ‘OUTLINER_DATA_CAMERA’, ‘OUTLINER_DATA_ARMATURE’, ‘OUTLINER_DATA_FONT’, ‘OUTLINER_DATA_SURFACE’, ‘OUTLINER_DATA_SPEAKER’, ‘OUTLINER_DATA_GREASEPENCIL’, ‘GP_SELECT_POINTS’, ‘GP_SELECT_STROKES’, ‘GP_MULTIFRAME_EDITING’, ‘GP_ONLY_SELECTED’, ‘MODIFIER_OFF’, ‘MODIFIER_ON’, ‘ONIONSKIN_OFF’, ‘ONIONSKIN_ON’, ‘RESTRICT_VIEW_ON’, ‘RESTRICT_VIEW_OFF’, ‘MESH_PLANE’, ‘MESH_CUBE’, ‘MESH_CIRCLE’, ‘MESH_UVSPHERE’, ‘MESH_ICOSPHERE’, ‘MESH_GRID’, ‘MESH_MONKEY’, ‘MESH_CYLINDER’, ‘MESH_TORUS’, ‘MESH_CONE’, ‘MESH_CAPSULE’, ‘EMPTY_SINGLE_ARROW’, ‘LIGHT_POINT’, ‘LIGHT_SUN’, ‘LIGHT_SPOT’, ‘LIGHT_HEMI’, ‘LIGHT_AREA’, ‘CUBE’, ‘SPHERE’, ‘CONE’, ‘META_PLANE’, ‘META_CUBE’, ‘META_BALL’, ‘META_ELLIPSOID’, ‘META_CAPSULE’, ‘SURFACE_NCURVE’, ‘SURFACE_NCIRCLE’, ‘SURFACE_NSURFACE’, ‘SURFACE_NCYLINDER’, ‘SURFACE_NSPHERE’, ‘SURFACE_NTORUS’, ‘EMPTY_AXIS’, ‘STROKE’, ‘EMPTY_ARROWS’, ‘CURVE_BEZCURVE’, ‘CURVE_BEZCIRCLE’, ‘CURVE_NCURVE’, ‘CURVE_NCIRCLE’, ‘CURVE_PATH’, ‘LIGHTPROBE_CUBEMAP’, ‘LIGHTPROBE_PLANAR’, ‘LIGHTPROBE_GRID’, ‘COLOR_RED’, ‘COLOR_GREEN’, ‘COLOR_BLUE’, ‘TRIA_RIGHT_BAR’, ‘TRIA_DOWN_BAR’, ‘TRIA_LEFT_BAR’, ‘TRIA_UP_BAR’, ‘FORCE_FORCE’, ‘FORCE_WIND’, ‘FORCE_VORTEX’, ‘FORCE_MAGNETIC’, ‘FORCE_HARMONIC’, ‘FORCE_CHARGE’, ‘FORCE_LENNARDJONES’, ‘FORCE_TEXTURE’, ‘FORCE_CURVE’, ‘FORCE_BOID’, ‘FORCE_TURBULENCE’, ‘FORCE_DRAG’, ‘FORCE_SMOKEFLOW’, ‘IMAGE_PLANE’, ‘IMAGE_BACKGROUND’, ‘IMAGE_REFERENCE’, ‘NODE_INSERT_ON’, ‘NODE_INSERT_OFF’, ‘NODE_TOP’, ‘NODE_SIDE’, ‘NODE_CORNER’, ‘ALIGN_LEFT’, ‘ALIGN_CENTER’, ‘ALIGN_RIGHT’, ‘ALIGN_JUSTIFY’, ‘ALIGN_FLUSH’, ‘ALIGN_TOP’, ‘ALIGN_MIDDLE’, ‘ALIGN_BOTTOM’, ‘BOLD’, ‘ITALIC’, ‘UNDERLINE’, ‘SMALL_CAPS’, ‘MODIFIER’, ‘MOD_WAVE’, ‘MOD_BUILD’, ‘MOD_DECIM’, ‘MOD_MIRROR’, ‘MOD_SOFT’, ‘MOD_SUBSURF’, ‘HOOK’, ‘MOD_PHYSICS’, ‘MOD_PARTICLES’, ‘MOD_BOOLEAN’, ‘MOD_EDGESPLIT’, ‘MOD_ARRAY’, ‘MOD_UVPROJECT’, ‘MOD_DISPLACE’, ‘MOD_CURVE’, ‘MOD_LATTICE’, ‘MOD_TINT’, ‘MOD_ARMATURE’, ‘MOD_SHRINKWRAP’, ‘MOD_CAST’, ‘MOD_MESHDEFORM’, ‘MOD_BEVEL’, ‘MOD_SMOOTH’, ‘MOD_SIMPLEDEFORM’, ‘MOD_MASK’, ‘MOD_CLOTH’, ‘MOD_EXPLODE’, ‘MOD_FLUIDSIM’, ‘MOD_MULTIRES’, ‘MOD_SMOKE’, ‘MOD_SOLIDIFY’, ‘MOD_SCREW’, ‘MOD_VERTEX_WEIGHT’, ‘MOD_DYNAMICPAINT’, ‘MOD_REMESH’, ‘MOD_OCEAN’, ‘MOD_WARP’, ‘MOD_SKIN’, ‘MOD_TRIANGULATE’, ‘MOD_WIREFRAME’, ‘MOD_DATA_TRANSFER’, ‘MOD_NORMALEDIT’, ‘MOD_PARTICLE_INSTANCE’, ‘MOD_HUE_SATURATION’, ‘MOD_NOISE’, ‘MOD_OFFSET’, ‘MOD_SIMPLIFY’, ‘MOD_THICKNESS’, ‘MOD_INSTANCE’, ‘MOD_TIME’, ‘MOD_OPACITY’, ‘REC’, ‘PLAY’, ‘FF’, ‘REW’, ‘PAUSE’, ‘PREV_KEYFRAME’, ‘NEXT_KEYFRAME’, ‘PLAY_REVERSE’, ‘PREVIEW_RANGE’, ‘ACTION_TWEAK’, ‘PMARKER_ACT’, ‘PMARKER_SEL’, ‘PMARKER’, ‘MARKER_HLT’, ‘MARKER’, ‘KEYFRAME_HLT’, ‘KEYFRAME’, ‘KEYINGSET’, ‘KEY_DEHLT’, ‘KEY_HLT’, ‘MUTE_IPO_OFF’, ‘MUTE_IPO_ON’, ‘VISIBLE_IPO_OFF’, ‘VISIBLE_IPO_ON’, ‘DRIVER’, ‘SOLO_OFF’, ‘SOLO_ON’, ‘FRAME_PREV’, ‘FRAME_NEXT’, ‘NLA_PUSHDOWN’, ‘IPO_CONSTANT’, ‘IPO_LINEAR’, ‘IPO_BEZIER’, ‘IPO_SINE’, ‘IPO_QUAD’, ‘IPO_CUBIC’, ‘IPO_QUART’, ‘IPO_QUINT’, ‘IPO_EXPO’, ‘IPO_CIRC’, ‘IPO_BOUNCE’, ‘IPO_ELASTIC’, ‘IPO_BACK’, ‘IPO_EASE_IN’, ‘IPO_EASE_OUT’, ‘IPO_EASE_IN_OUT’, ‘NORMALIZE_FCURVES’, ‘VERTEXSEL’, ‘EDGESEL’, ‘FACESEL’, ‘PIVOT_BOUNDBOX’, ‘PIVOT_CURSOR’, ‘PIVOT_INDIVIDUAL’, ‘PIVOT_MEDIAN’, ‘PIVOT_ACTIVE’, ‘CENTER_ONLY’, ‘SMOOTHCURVE’, ‘SPHERECURVE’, ‘ROOTCURVE’, ‘SHARPCURVE’, ‘LINCURVE’, ‘NOCURVE’, ‘RNDCURVE’, ‘PROP_OFF’, ‘PROP_ON’, ‘PROP_CON’, ‘SCULPT_DYNTOPO’, ‘PARTICLE_POINT’, ‘PARTICLE_TIP’, ‘PARTICLE_PATH’, ‘SNAP_OFF’, ‘SNAP_ON’, ‘SNAP_NORMAL’, ‘SNAP_GRID’, ‘SNAP_VERTEX’, ‘SNAP_EDGE’, ‘SNAP_FACE’, ‘SNAP_VOLUME’, ‘SNAP_INCREMENT’, ‘STICKY_UVS_LOC’, ‘STICKY_UVS_DISABLE’, ‘STICKY_UVS_VERT’, ‘CLIPUV_DEHLT’, ‘CLIPUV_HLT’, ‘SNAP_PEEL_OBJECT’, ‘GRID’, ‘OBJECT_ORIGIN’, ‘ORIENTATION_GLOBAL’, ‘ORIENTATION_GIMBAL’, ‘ORIENTATION_LOCAL’, ‘ORIENTATION_NORMAL’, ‘ORIENTATION_VIEW’, ‘COPYDOWN’, ‘PASTEDOWN’, ‘PASTEFLIPUP’, ‘PASTEFLIPDOWN’, ‘VIS_SEL_11’, ‘VIS_SEL_10’, ‘VIS_SEL_01’, ‘VIS_SEL_00’, ‘AUTOMERGE_ON’, ‘AUTOMERGE_OFF’, ‘UV_VERTEXSEL’, ‘UV_EDGESEL’, ‘UV_FACESEL’, ‘UV_ISLANDSEL’, ‘UV_SYNC_SELECT’, ‘NORMALS_VERTEX’, ‘NORMALS_FACE’, ‘NORMALS_VERTEX_FACE’, ‘SHADING_BBOX’, ‘SHADING_WIRE’, ‘SHADING_SOLID’, ‘SHADING_RENDERED’, ‘SHADING_TEXTURE’, ‘OVERLAY’, ‘XRAY’, ‘LOCKVIEW_OFF’, ‘LOCKVIEW_ON’, ‘AXIS_SIDE’, ‘AXIS_FRONT’, ‘AXIS_TOP’, ‘NDOF_DOM’, ‘NDOF_TURN’, ‘NDOF_FLY’, ‘NDOF_TRANS’, ‘LAYER_USED’, ‘LAYER_ACTIVE’, ‘SORTALPHA’, ‘SORTBYEXT’, ‘SORTTIME’, ‘SORTSIZE’, ‘SHORTDISPLAY’, ‘LONGDISPLAY’, ‘IMGDISPLAY’, ‘BOOKMARKS’, ‘FONTPREVIEW’, ‘FILTER’, ‘NEWFOLDER’, ‘FILE_PARENT’, ‘FILE_REFRESH’, ‘FILE_FOLDER’, ‘FILE_BLANK’, ‘FILE_BLEND’, ‘FILE_IMAGE’, ‘FILE_MOVIE’, ‘FILE_SCRIPT’, ‘FILE_SOUND’, ‘FILE_FONT’, ‘FILE_TEXT’, ‘SORT_DESC’, ‘SORT_ASC’, ‘LINK_BLEND’, ‘APPEND_BLEND’, ‘IMPORT’, ‘EXPORT’, ‘LOOP_BACK’, ‘LOOP_FORWARDS’, ‘BACK’, ‘FORWARD’, ‘FILE_VOLUME’, ‘ALEMBIC’, ‘VOLUME’, ‘FILE_HIDDEN’, ‘FILE_BACKUP’, ‘DISK_DRIVE’, ‘MATPLANE’, ‘MATSPHERE’, ‘MATCUBE’, ‘MONKEY’, ‘HAIR’, ‘ALIASED’, ‘ANTIALIASED’, ‘MAT_SPHERE_SKY’, ‘MATSHADERBALL’, ‘MATCLOTH’, ‘MATFLUID’, ‘WORDWRAP_OFF’, ‘WORDWRAP_ON’, ‘SYNTAX_OFF’, ‘SYNTAX_ON’, ‘LINENUMBERS_OFF’, ‘LINENUMBERS_ON’, ‘SCRIPTPLUGINS’, ‘SEQ_SEQUENCER’, ‘SEQ_PREVIEW’, ‘SEQ_LUMA_WAVEFORM’, ‘SEQ_CHROMA_SCOPE’, ‘SEQ_HISTOGRAM’, ‘SEQ_SPLITVIEW’, ‘IMAGE_RGB’, ‘IMAGE_RGB_ALPHA’, ‘IMAGE_ALPHA’, ‘IMAGE_ZDEPTH’, ‘VIEW_PERSPECTIVE’, ‘VIEW_ORTHO’, ‘VIEW_CAMERA’, ‘VIEW_PAN’, ‘VIEW_ZOOM’, ‘BRUSH_ADD’, ‘BRUSH_BLOB’, ‘BRUSH_BLUR’, ‘BRUSH_CLAY’, ‘BRUSH_CLAY_STRIPS’, ‘BRUSH_CLONE’, ‘BRUSH_CREASE’, ‘BRUSH_DARKEN’, ‘BRUSH_FILL’, ‘BRUSH_FLATTEN’, ‘BRUSH_GRAB’, ‘BRUSH_INFLATE’, ‘BRUSH_LAYER’, ‘BRUSH_LIGHTEN’, ‘BRUSH_MASK’, ‘BRUSH_MIX’, ‘BRUSH_MULTIPLY’, ‘BRUSH_NUDGE’, ‘BRUSH_PINCH’, ‘BRUSH_SCRAPE’, ‘BRUSH_SCULPT_DRAW’, ‘BRUSH_SMEAR’, ‘BRUSH_SMOOTH’, ‘BRUSH_SNAKE_HOOK’, ‘BRUSH_SOFTEN’, ‘BRUSH_SUBTRACT’, ‘BRUSH_TEXDRAW’, ‘BRUSH_TEXFILL’, ‘BRUSH_TEXMASK’, ‘BRUSH_THUMB’, ‘BRUSH_ROTATE’, ‘BRUSH_VERTEXDRAW’, ‘MATCAP_01’, ‘MATCAP_02’, ‘MATCAP_03’, ‘MATCAP_04’, ‘MATCAP_05’, ‘MATCAP_06’, ‘MATCAP_07’, ‘MATCAP_08’, ‘MATCAP_09’, ‘MATCAP_10’, ‘MATCAP_11’, ‘MATCAP_12’, ‘MATCAP_13’, ‘MATCAP_14’, ‘MATCAP_15’, ‘MATCAP_16’, ‘MATCAP_17’, ‘MATCAP_18’, ‘MATCAP_19’, ‘MATCAP_20’, ‘MATCAP_21’, ‘MATCAP_22’, ‘MATCAP_23’, ‘MATCAP_24’, ‘GPBRUSH_SMOOTH’, ‘GPBRUSH_THICKNESS’, ‘GPBRUSH_STRENGTH’, ‘GPBRUSH_GRAB’, ‘GPBRUSH_PUSH’, ‘GPBRUSH_TWIST’, ‘GPBRUSH_PINCH’, ‘GPBRUSH_RANDOMIZE’, ‘GPBRUSH_CLONE’, ‘GPBRUSH_WEIGHT’, ‘GPBRUSH_PENCIL’, ‘GPBRUSH_PEN’, ‘GPBRUSH_INK’, ‘GPBRUSH_INKNOISE’, ‘GPBRUSH_BLOCK’, ‘GPBRUSH_MARKER’, ‘GPBRUSH_CUSTOM’, ‘GPBRUSH_FILL’, ‘GPBRUSH_ERASE_SOFT’, ‘GPBRUSH_ERASE_HARD’, ‘GPBRUSH_ERASE_STROKE’, ‘SMALL_TRI_RIGHT_VEC’, ‘KEYTYPE_KEYFRAME_VEC’, ‘KEYTYPE_BREAKDOWN_VEC’, ‘KEYTYPE_EXTREME_VEC’, ‘KEYTYPE_JITTER_VEC’, ‘KEYTYPE_MOVING_HOLD_VEC’, ‘HANDLETYPE_FREE_VEC’, ‘HANDLETYPE_ALIGNED_VEC’, ‘HANDLETYPE_VECTOR_VEC’, ‘HANDLETYPE_AUTO_VEC’, ‘HANDLETYPE_AUTO_CLAMP_VEC’, ‘COLORSET_01_VEC’, ‘COLORSET_02_VEC’, ‘COLORSET_03_VEC’, ‘COLORSET_04_VEC’, ‘COLORSET_05_VEC’, ‘COLORSET_06_VEC’, ‘COLORSET_07_VEC’, ‘COLORSET_08_VEC’, ‘COLORSET_09_VEC’, ‘COLORSET_10_VEC’, ‘COLORSET_11_VEC’, ‘COLORSET_12_VEC’, ‘COLORSET_13_VEC’, ‘COLORSET_14_VEC’, ‘COLORSET_15_VEC’, ‘COLORSET_16_VEC’, ‘COLORSET_17_VEC’, ‘COLORSET_18_VEC’, ‘COLORSET_19_VEC’, ‘COLORSET_20_VEC’, ‘EVENT_A’, ‘EVENT_B’, ‘EVENT_C’, ‘EVENT_D’, ‘EVENT_E’, ‘EVENT_F’, ‘EVENT_G’, ‘EVENT_H’, ‘EVENT_I’, ‘EVENT_J’, ‘EVENT_K’, ‘EVENT_L’, ‘EVENT_M’, ‘EVENT_N’, ‘EVENT_O’, ‘EVENT_P’, ‘EVENT_Q’, ‘EVENT_R’, ‘EVENT_S’, ‘EVENT_T’, ‘EVENT_U’, ‘EVENT_V’, ‘EVENT_W’, ‘EVENT_X’, ‘EVENT_Y’, ‘EVENT_Z’, ‘EVENT_SHIFT’, ‘EVENT_CTRL’, ‘EVENT_ALT’, ‘EVENT_OS’, ‘EVENT_F1’, ‘EVENT_F2’, ‘EVENT_F3’, ‘EVENT_F4’, ‘EVENT_F5’, ‘EVENT_F6’, ‘EVENT_F7’, ‘EVENT_F8’, ‘EVENT_F9’, ‘EVENT_F10’, ‘EVENT_F11’, ‘EVENT_F12’, ‘EVENT_ESC’, ‘EVENT_TAB’, ‘EVENT_PAGEUP’, ‘EVENT_PAGEDOWN’, ‘EVENT_HOME’, ‘EVENT_END’, ‘EVENT_RETURN’], default ‘NODETREE’</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_idname\ (bpy.types.NodeTree\ attribute)',\ u'bpy.types.NodeTree.bl_idname',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.bl_idname" ids="bpy.types.NodeTree.bl_idname" module="bpy.types" names="bpy.types.NodeTree.bl_idname"><desc_name xml:space="preserve">bl_idname</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>string, default “”, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_label\ (bpy.types.NodeTree\ attribute)',\ u'bpy.types.NodeTree.bl_label',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.bl_label" ids="bpy.types.NodeTree.bl_label" module="bpy.types" names="bpy.types.NodeTree.bl_label"><desc_name xml:space="preserve">bl_label</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>The node tree label</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>string, default “”, (never None)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'grease_pencil\ (bpy.types.NodeTree\ attribute)',\ u'bpy.types.NodeTree.grease_pencil',\ '',\ None]"></index>
                    <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.grease_pencil" ids="bpy.types.NodeTree.grease_pencil" module="bpy.types" names="bpy.types.NodeTree.grease_pencil"><desc_name xml:space="preserve">grease_pencil</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Grease Pencil data-block</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.GreasePencil" refuri="bpy.types.GreasePencil#bpy.types.GreasePencil"><literal classes="xref py py-class">GreasePencil</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'NodeTree.inputs\ (in\ module\ bpy.types)',\ u'bpy.types.NodeTree.inputs',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.inputs" ids="bpy.types.NodeTree.inputs" module="bpy.types" names="bpy.types.NodeTree.inputs"><desc_name xml:space="preserve">inputs</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Node tree inputs</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTreeInputs" refuri="bpy.types.NodeTreeInputs#bpy.types.NodeTreeInputs"><literal classes="xref py py-class">NodeTreeInputs</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.NodeSocketInterface" refuri="bpy.types.NodeSocketInterface#bpy.types.NodeSocketInterface"><literal classes="xref py py-class">NodeSocketInterface</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'NodeTree.links\ (in\ module\ bpy.types)',\ u'bpy.types.NodeTree.links',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.links" ids="bpy.types.NodeTree.links" module="bpy.types" names="bpy.types.NodeTree.links"><desc_name xml:space="preserve">links</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.NodeLinks" refuri="bpy.types.NodeLinks#bpy.types.NodeLinks"><literal classes="xref py py-class">NodeLinks</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.NodeLink" refuri="bpy.types.NodeLink#bpy.types.NodeLink"><literal classes="xref py py-class">NodeLink</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'NodeTree.nodes\ (in\ module\ bpy.types)',\ u'bpy.types.NodeTree.nodes',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.nodes" ids="bpy.types.NodeTree.nodes" module="bpy.types" names="bpy.types.NodeTree.nodes"><desc_name xml:space="preserve">nodes</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Nodes" refuri="bpy.types.Nodes#bpy.types.Nodes"><literal classes="xref py py-class">Nodes</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Node" refuri="bpy.types.Node#bpy.types.Node"><literal classes="xref py py-class">Node</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'NodeTree.outputs\ (in\ module\ bpy.types)',\ u'bpy.types.NodeTree.outputs',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.outputs" ids="bpy.types.NodeTree.outputs" module="bpy.types" names="bpy.types.NodeTree.outputs"><desc_name xml:space="preserve">outputs</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Node tree outputs</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.NodeTreeOutputs" refuri="bpy.types.NodeTreeOutputs#bpy.types.NodeTreeOutputs"><literal classes="xref py py-class">NodeTreeOutputs</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.NodeSocketInterface" refuri="bpy.types.NodeSocketInterface#bpy.types.NodeSocketInterface"><literal classes="xref py py-class">NodeSocketInterface</literal></reference>, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'NodeTree.type\ (in\ module\ bpy.types)',\ u'bpy.types.NodeTree.type',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.type" ids="bpy.types.NodeTree.type" module="bpy.types" names="bpy.types.NodeTree.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                        <desc_content>
                            <paragraph>Node Tree type (deprecated, bl_idname is the actual node tree type identifier)</paragraph>
                            <bullet_list bullet="*">
                                <list_item>
                                    <paragraph><literal>SHADER</literal> Shader, Shader nodes.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>TEXTURE</literal> Texture, Texture nodes.</paragraph>
                                </list_item>
                                <list_item>
                                    <paragraph><literal>COMPOSITING</literal> Compositing, Compositing nodes.</paragraph>
                                </list_item>
                            </bullet_list>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>enum in [‘SHADER’, ‘TEXTURE’, ‘COMPOSITING’], default ‘SHADER’, (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'NodeTree.view_center\ (in\ module\ bpy.types)',\ u'bpy.types.NodeTree.view_center',\ '',\ None]"></index>
                    <desc desctype="data" domain="py" noindex="False" objtype="data">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.view_center" ids="bpy.types.NodeTree.view_center" module="bpy.types" names="bpy.types.NodeTree.view_center"><desc_name xml:space="preserve">view_center</desc_name></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Type</field_name>
                                    <field_body>
                                        <paragraph>float array of 2 items in [-inf, inf], default (0.0, 0.0), (readonly)</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'interface_update()\ (bpy.types.NodeTree\ method)',\ u'bpy.types.NodeTree.interface_update',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.interface_update" ids="bpy.types.NodeTree.interface_update" module="bpy.types" names="bpy.types.NodeTree.interface_update"><desc_name xml:space="preserve">interface_update</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Updated node group interface</paragraph>
                            <field_list>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'poll()\ (bpy.types.NodeTree\ class\ method)',\ u'bpy.types.NodeTree.poll',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.poll" ids="bpy.types.NodeTree.poll" module="bpy.types" names="bpy.types.NodeTree.poll"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">poll</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Check visibility in the editor</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>boolean</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'update()\ (bpy.types.NodeTree\ method)',\ u'bpy.types.NodeTree.update',\ '',\ None]"></index>
                    <desc desctype="method" domain="py" noindex="False" objtype="method">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.update" ids="bpy.types.NodeTree.update" module="bpy.types" names="bpy.types.NodeTree.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Update on editor changes</paragraph>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'get_from_context()\ (bpy.types.NodeTree\ class\ method)',\ u'bpy.types.NodeTree.get_from_context',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.get_from_context" ids="bpy.types.NodeTree.get_from_context" module="bpy.types" names="bpy.types.NodeTree.get_from_context"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">get_from_context</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">context</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <paragraph>Get a node tree from the context</paragraph>
                            <field_list>
                                <field>
                                    <field_name>Return (result_1, result_2, result_3)</field_name>
                                    <field_body>
                                        <paragraph><title_reference>result_1</title_reference>, Active node tree from context, <reference internal="True" refid="bpy.types.NodeTree" reftitle="bpy.types.NodeTree"><literal classes="xref py py-class">NodeTree</literal></reference></paragraph>
                                        <paragraph><title_reference>result_2</title_reference>, ID data-block that owns the node tree, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
                                        <paragraph><title_reference>result_3</title_reference>, Original ID data-block selected from the context, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.NodeTree\ class\ method)',\ u'bpy.types.NodeTree.bl_rna_get_subclass',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.bl_rna_get_subclass" ids="bpy.types.NodeTree.bl_rna_get_subclass" module="bpy.types" names="bpy.types.NodeTree.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The RNA type or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                    <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.NodeTree\ class\ method)',\ u'bpy.types.NodeTree.bl_rna_get_subclass_py',\ '',\ None]"></index>
                    <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                        <desc_signature class="NodeTree" first="False" fullname="NodeTree.bl_rna_get_subclass_py" ids="bpy.types.NodeTree.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.NodeTree.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>Parameters</field_name>
                                    <field_body>
                                        <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Returns</field_name>
                                    <field_body>
                                        <paragraph>The class or default when not found.</paragraph>
                                    </field_body>
                                </field>
                                <field>
                                    <field_name>Return type</field_name>
                                    <field_body>
                                        <paragraph>type</paragraph>
                                    </field_body>
                                </field>
                            </field_list>
                        </desc_content>
                    </desc>
                </desc_content>
            </desc>
            <rubric>Inherited Properties</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>Inherited Functions</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
            <rubric>References</rubric>
            <hlist>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendData.node_groups" refuri="bpy.types.BlendData#bpy.types.BlendData.node_groups"><literal classes="xref py py-class">BlendData.node_groups</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataNodeTrees.new" refuri="bpy.types.BlendDataNodeTrees#bpy.types.BlendDataNodeTrees.new"><literal classes="xref py py-class">BlendDataNodeTrees.new</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.BlendDataNodeTrees.remove" refuri="bpy.types.BlendDataNodeTrees#bpy.types.BlendDataNodeTrees.remove"><literal classes="xref py py-class">BlendDataNodeTrees.remove</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeGroup.node_tree" refuri="bpy.types.CompositorNodeGroup#bpy.types.CompositorNodeGroup.node_tree"><literal classes="xref py py-class">CompositorNodeGroup.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.FreestyleLineStyle.node_tree" refuri="bpy.types.FreestyleLineStyle#bpy.types.FreestyleLineStyle.node_tree"><literal classes="xref py py-class">FreestyleLineStyle.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Light.node_tree" refuri="bpy.types.Light#bpy.types.Light.node_tree"><literal classes="xref py py-class">Light.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Material.node_tree" refuri="bpy.types.Material#bpy.types.Material.node_tree"><literal classes="xref py py-class">Material.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Node.poll" refuri="bpy.types.Node#bpy.types.Node.poll"><literal classes="xref py py-class">Node.poll</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Node.poll_instance" refuri="bpy.types.Node#bpy.types.Node.poll_instance"><literal classes="xref py py-class">Node.poll_instance</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeCustomGroup.node_tree" refuri="bpy.types.NodeCustomGroup#bpy.types.NodeCustomGroup.node_tree"><literal classes="xref py py-class">NodeCustomGroup.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeGroup.node_tree" refuri="bpy.types.NodeGroup#bpy.types.NodeGroup.node_tree"><literal classes="xref py py-class">NodeGroup.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll"><literal classes="xref py py-class">NodeInternal.poll</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeInternal.poll_instance" refuri="bpy.types.NodeInternal#bpy.types.NodeInternal.poll_instance"><literal classes="xref py py-class">NodeInternal.poll_instance</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
                <hlistcol>
                    <bullet_list>
                        <list_item>
                            <paragraph><reference internal="True" refid="bpy.types.NodeTree.get_from_context" reftitle="bpy.types.NodeTree.get_from_context"><literal classes="xref py py-class">NodeTree.get_from_context</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.NodeTreePath.node_tree" refuri="bpy.types.NodeTreePath#bpy.types.NodeTreePath.node_tree"><literal classes="xref py py-class">NodeTreePath.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Scene.node_tree" refuri="bpy.types.Scene#bpy.types.Scene.node_tree"><literal classes="xref py py-class">Scene.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeGroup.node_tree" refuri="bpy.types.ShaderNodeGroup#bpy.types.ShaderNodeGroup.node_tree"><literal classes="xref py py-class">ShaderNodeGroup.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SpaceNodeEditor.edit_tree" refuri="bpy.types.SpaceNodeEditor#bpy.types.SpaceNodeEditor.edit_tree"><literal classes="xref py py-class">SpaceNodeEditor.edit_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SpaceNodeEditor.node_tree" refuri="bpy.types.SpaceNodeEditor#bpy.types.SpaceNodeEditor.node_tree"><literal classes="xref py py-class">SpaceNodeEditor.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SpaceNodeEditorPath.append" refuri="bpy.types.SpaceNodeEditorPath#bpy.types.SpaceNodeEditorPath.append"><literal classes="xref py py-class">SpaceNodeEditorPath.append</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.SpaceNodeEditorPath.start" refuri="bpy.types.SpaceNodeEditorPath#bpy.types.SpaceNodeEditorPath.start"><literal classes="xref py py-class">SpaceNodeEditorPath.start</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.Texture.node_tree" refuri="bpy.types.Texture#bpy.types.Texture.node_tree"><literal classes="xref py py-class">Texture.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.TextureNodeGroup.node_tree" refuri="bpy.types.TextureNodeGroup#bpy.types.TextureNodeGroup.node_tree"><literal classes="xref py py-class">TextureNodeGroup.node_tree</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_node_link" refuri="bpy.types.UILayout#bpy.types.UILayout.template_node_link"><literal classes="xref py py-class">UILayout.template_node_link</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_node_view" refuri="bpy.types.UILayout#bpy.types.UILayout.template_node_view"><literal classes="xref py py-class">UILayout.template_node_view</literal></reference></paragraph>
                        </list_item>
                        <list_item>
                            <paragraph><reference internal="True" reftitle="bpy.types.World.node_tree" refuri="bpy.types.World#bpy.types.World.node_tree"><literal classes="xref py py-class">World.node_tree</literal></reference></paragraph>
                        </list_item>
                    </bullet_list>
                </hlistcol>
            </hlist>
        </section>
    </section>
</document>
