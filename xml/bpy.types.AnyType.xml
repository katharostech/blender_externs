<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.AnyType.rst">
    <section ids="module-bpy.types anytype-bpy-struct" names="anytype(bpy_struct)">
        <title>AnyType(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'AnyType\ (class\ in\ bpy.types)',\ u'bpy.types.AnyType',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="AnyType" ids="bpy.types.AnyType" module="bpy.types" names="bpy.types.AnyType"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">AnyType</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>RNA type used for pointers to any possible data</paragraph>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.AnyType\ class\ method)',\ u'bpy.types.AnyType.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AnyType" first="False" fullname="AnyType.bl_rna_get_subclass" ids="bpy.types.AnyType.bl_rna_get_subclass" module="bpy.types" names="bpy.types.AnyType.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.AnyType\ class\ method)',\ u'bpy.types.AnyType.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="AnyType" first="False" fullname="AnyType.bl_rna_get_subclass_py" ids="bpy.types.AnyType.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.AnyType.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.FCurve.update_autoflags" refuri="bpy.types.FCurve#bpy.types.FCurve.update_autoflags"><literal classes="xref py py-class">FCurve.update_autoflags</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Gizmo.target_set_prop" refuri="bpy.types.Gizmo#bpy.types.Gizmo.target_set_prop"><literal classes="xref py py-class">Gizmo.target_set_prop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetInfo.generate" refuri="bpy.types.KeyingSetInfo#bpy.types.KeyingSetInfo.generate"><literal classes="xref py py-class">KeyingSetInfo.generate</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.bake" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.bake"><literal classes="xref py py-class">RenderEngine.bake</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.context_pointer_set" refuri="bpy.types.UILayout#bpy.types.UILayout.context_pointer_set"><literal classes="xref py py-class">UILayout.context_pointer_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.enum_item_description" refuri="bpy.types.UILayout#bpy.types.UILayout.enum_item_description"><literal classes="xref py py-class">UILayout.enum_item_description</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.enum_item_icon" refuri="bpy.types.UILayout#bpy.types.UILayout.enum_item_icon"><literal classes="xref py py-class">UILayout.enum_item_icon</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.enum_item_name" refuri="bpy.types.UILayout#bpy.types.UILayout.enum_item_name"><literal classes="xref py py-class">UILayout.enum_item_name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.icon" refuri="bpy.types.UILayout#bpy.types.UILayout.icon"><literal classes="xref py py-class">UILayout.icon</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.prop" refuri="bpy.types.UILayout#bpy.types.UILayout.prop"><literal classes="xref py py-class">UILayout.prop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.prop_enum" refuri="bpy.types.UILayout#bpy.types.UILayout.prop_enum"><literal classes="xref py py-class">UILayout.prop_enum</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.prop_menu_enum" refuri="bpy.types.UILayout#bpy.types.UILayout.prop_menu_enum"><literal classes="xref py py-class">UILayout.prop_menu_enum</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.prop_search" refuri="bpy.types.UILayout#bpy.types.UILayout.prop_search"><literal classes="xref py py-class">UILayout.prop_search</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.prop_search" refuri="bpy.types.UILayout#bpy.types.UILayout.prop_search"><literal classes="xref py py-class">UILayout.prop_search</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.prop_tabs_enum" refuri="bpy.types.UILayout#bpy.types.UILayout.prop_tabs_enum"><literal classes="xref py py-class">UILayout.prop_tabs_enum</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.props_enum" refuri="bpy.types.UILayout#bpy.types.UILayout.props_enum"><literal classes="xref py py-class">UILayout.props_enum</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_ID" refuri="bpy.types.UILayout#bpy.types.UILayout.template_ID"><literal classes="xref py py-class">UILayout.template_ID</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_ID_preview" refuri="bpy.types.UILayout#bpy.types.UILayout.template_ID_preview"><literal classes="xref py py-class">UILayout.template_ID_preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_ID_tabs" refuri="bpy.types.UILayout#bpy.types.UILayout.template_ID_tabs"><literal classes="xref py py-class">UILayout.template_ID_tabs</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_any_ID" refuri="bpy.types.UILayout#bpy.types.UILayout.template_any_ID"><literal classes="xref py py-class">UILayout.template_any_ID</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_cache_file" refuri="bpy.types.UILayout#bpy.types.UILayout.template_cache_file"><literal classes="xref py py-class">UILayout.template_cache_file</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_color_picker" refuri="bpy.types.UILayout#bpy.types.UILayout.template_color_picker"><literal classes="xref py py-class">UILayout.template_color_picker</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_color_ramp" refuri="bpy.types.UILayout#bpy.types.UILayout.template_color_ramp"><literal classes="xref py py-class">UILayout.template_color_ramp</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_colormanaged_view_settings" refuri="bpy.types.UILayout#bpy.types.UILayout.template_colormanaged_view_settings"><literal classes="xref py py-class">UILayout.template_colormanaged_view_settings</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_colorspace_settings" refuri="bpy.types.UILayout#bpy.types.UILayout.template_colorspace_settings"><literal classes="xref py py-class">UILayout.template_colorspace_settings</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_component_menu" refuri="bpy.types.UILayout#bpy.types.UILayout.template_component_menu"><literal classes="xref py py-class">UILayout.template_component_menu</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_curve_mapping" refuri="bpy.types.UILayout#bpy.types.UILayout.template_curve_mapping"><literal classes="xref py py-class">UILayout.template_curve_mapping</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_greasepencil_color" refuri="bpy.types.UILayout#bpy.types.UILayout.template_greasepencil_color"><literal classes="xref py py-class">UILayout.template_greasepencil_color</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_histogram" refuri="bpy.types.UILayout#bpy.types.UILayout.template_histogram"><literal classes="xref py py-class">UILayout.template_histogram</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_icon_view" refuri="bpy.types.UILayout#bpy.types.UILayout.template_icon_view"><literal classes="xref py py-class">UILayout.template_icon_view</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_image" refuri="bpy.types.UILayout#bpy.types.UILayout.template_image"><literal classes="xref py py-class">UILayout.template_image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_layers" refuri="bpy.types.UILayout#bpy.types.UILayout.template_layers"><literal classes="xref py py-class">UILayout.template_layers</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_layers" refuri="bpy.types.UILayout#bpy.types.UILayout.template_layers"><literal classes="xref py py-class">UILayout.template_layers</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_list" refuri="bpy.types.UILayout#bpy.types.UILayout.template_list"><literal classes="xref py py-class">UILayout.template_list</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_list" refuri="bpy.types.UILayout#bpy.types.UILayout.template_list"><literal classes="xref py py-class">UILayout.template_list</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_marker" refuri="bpy.types.UILayout#bpy.types.UILayout.template_marker"><literal classes="xref py py-class">UILayout.template_marker</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_movieclip" refuri="bpy.types.UILayout#bpy.types.UILayout.template_movieclip"><literal classes="xref py py-class">UILayout.template_movieclip</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_movieclip_information" refuri="bpy.types.UILayout#bpy.types.UILayout.template_movieclip_information"><literal classes="xref py py-class">UILayout.template_movieclip_information</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_palette" refuri="bpy.types.UILayout#bpy.types.UILayout.template_palette"><literal classes="xref py py-class">UILayout.template_palette</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_path_builder" refuri="bpy.types.UILayout#bpy.types.UILayout.template_path_builder"><literal classes="xref py py-class">UILayout.template_path_builder</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_search" refuri="bpy.types.UILayout#bpy.types.UILayout.template_search"><literal classes="xref py py-class">UILayout.template_search</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_search" refuri="bpy.types.UILayout#bpy.types.UILayout.template_search"><literal classes="xref py py-class">UILayout.template_search</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_search_preview" refuri="bpy.types.UILayout#bpy.types.UILayout.template_search_preview"><literal classes="xref py py-class">UILayout.template_search_preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_search_preview" refuri="bpy.types.UILayout#bpy.types.UILayout.template_search_preview"><literal classes="xref py py-class">UILayout.template_search_preview</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_track" refuri="bpy.types.UILayout#bpy.types.UILayout.template_track"><literal classes="xref py py-class">UILayout.template_track</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_vectorscope" refuri="bpy.types.UILayout#bpy.types.UILayout.template_vectorscope"><literal classes="xref py py-class">UILayout.template_vectorscope</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_waveform" refuri="bpy.types.UILayout#bpy.types.UILayout.template_waveform"><literal classes="xref py py-class">UILayout.template_waveform</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UIList.draw_item" refuri="bpy.types.UIList#bpy.types.UIList.draw_item"><literal classes="xref py py-class">UIList.draw_item</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UIList.draw_item" refuri="bpy.types.UIList#bpy.types.UIList.draw_item"><literal classes="xref py py-class">UIList.draw_item</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UIList.draw_item" refuri="bpy.types.UIList#bpy.types.UIList.draw_item"><literal classes="xref py py-class">UIList.draw_item</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UIList.filter_items" refuri="bpy.types.UIList#bpy.types.UIList.filter_items"><literal classes="xref py py-class">UIList.filter_items</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
