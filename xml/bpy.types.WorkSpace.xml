<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.WorkSpace.rst">
    <section ids="module-bpy.types workspace-id" names="workspace(id)">
        <title>WorkSpace(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <index entries="['single',\ u'WorkSpace\ (class\ in\ bpy.types)',\ u'bpy.types.WorkSpace',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="WorkSpace" ids="bpy.types.WorkSpace" module="bpy.types" names="bpy.types.WorkSpace"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">WorkSpace</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Workspace data-block, defining the working environment for the user</paragraph>
                <index entries="['single',\ u'object_mode\ (bpy.types.WorkSpace\ attribute)',\ u'bpy.types.WorkSpace.object_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.object_mode" ids="bpy.types.WorkSpace.object_mode" module="bpy.types" names="bpy.types.WorkSpace.object_mode"><desc_name xml:space="preserve">object_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Switch to this object mode when activating the workspace</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>OBJECT</literal> Object Mode.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EDIT</literal> Edit Mode.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>POSE</literal> Pose Mode.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SCULPT</literal> Sculpt Mode.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VERTEX_PAINT</literal> Vertex Paint.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>WEIGHT_PAINT</literal> Weight Paint.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TEXTURE_PAINT</literal> Texture Paint.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PARTICLE_EDIT</literal> Particle Edit.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GPENCIL_EDIT</literal> Grease Pencil Edit Mode, Edit Grease Pencil Strokes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GPENCIL_SCULPT</literal> Grease Pencil Sculpt Mode, Sculpt Grease Pencil Strokes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GPENCIL_PAINT</literal> Grease Pencil Draw, Paint Grease Pencil Strokes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GPENCIL_WEIGHT</literal> Grease Pencil Weight Paint, Grease Pencil Weight Paint Strokes.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘OBJECT’, ‘EDIT’, ‘POSE’, ‘SCULPT’, ‘VERTEX_PAINT’, ‘WEIGHT_PAINT’, ‘TEXTURE_PAINT’, ‘PARTICLE_EDIT’, ‘GPENCIL_EDIT’, ‘GPENCIL_SCULPT’, ‘GPENCIL_PAINT’, ‘GPENCIL_WEIGHT’], default ‘OBJECT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'WorkSpace.owner_ids\ (in\ module\ bpy.types)',\ u'bpy.types.WorkSpace.owner_ids',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.owner_ids" ids="bpy.types.WorkSpace.owner_ids" module="bpy.types" names="bpy.types.WorkSpace.owner_ids"><desc_name xml:space="preserve">owner_ids</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.wmOwnerIDs" refuri="bpy.types.wmOwnerIDs#bpy.types.wmOwnerIDs"><literal classes="xref py py-class">wmOwnerIDs</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.wmOwnerID" refuri="bpy.types.wmOwnerID#bpy.types.wmOwnerID"><literal classes="xref py py-class">wmOwnerID</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'WorkSpace.screens\ (in\ module\ bpy.types)',\ u'bpy.types.WorkSpace.screens',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.screens" ids="bpy.types.WorkSpace.screens" module="bpy.types" names="bpy.types.WorkSpace.screens"><desc_name xml:space="preserve">screens</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Screen layouts of a workspace</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Screen" refuri="bpy.types.Screen#bpy.types.Screen"><literal classes="xref py py-class">Screen</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'WorkSpace.tools\ (in\ module\ bpy.types)',\ u'bpy.types.WorkSpace.tools',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.tools" ids="bpy.types.WorkSpace.tools" module="bpy.types" names="bpy.types.WorkSpace.tools"><desc_name xml:space="preserve">tools</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.wmTools" refuri="bpy.types.wmTools#bpy.types.wmTools"><literal classes="xref py py-class">wmTools</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.WorkspaceTool" refuri="bpy.types.WorkspaceTool#bpy.types.WorkspaceTool"><literal classes="xref py py-class">WorkspaceTool</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'WorkSpace.tools_mode\ (in\ module\ bpy.types)',\ u'bpy.types.WorkSpace.tools_mode',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.tools_mode" ids="bpy.types.WorkSpace.tools_mode" module="bpy.types" names="bpy.types.WorkSpace.tools_mode"><desc_name xml:space="preserve">tools_mode</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘DEFAULT’], default ‘DEFAULT’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'WorkSpace.tools_space_type\ (in\ module\ bpy.types)',\ u'bpy.types.WorkSpace.tools_space_type',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.tools_space_type" ids="bpy.types.WorkSpace.tools_space_type" module="bpy.types" names="bpy.types.WorkSpace.tools_space_type"><desc_name xml:space="preserve">tools_space_type</desc_name></desc_signature>
                    <desc_content>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>EMPTY</literal> Empty.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VIEW_3D</literal> 3D Viewport, Manipulate objects in a 3D environment.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>IMAGE_EDITOR</literal> UV/Image Editor, View and edit images and UV Maps.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NODE_EDITOR</literal> Node Editor, Editor for node-based shading and compositing tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SEQUENCE_EDITOR</literal> Video Sequencer, Video editing tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CLIP_EDITOR</literal> Movie Clip Editor, Motion tracking tools.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DOPESHEET_EDITOR</literal> Dope Sheet, Adjust timing of keyframes.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GRAPH_EDITOR</literal> Graph Editor, Edit drivers and keyframe interpolation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NLA_EDITOR</literal> Nonlinear Animation, Combine and layer Actions.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TEXT_EDITOR</literal> Text Editor, Edit scripts and in-file documentation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CONSOLE</literal> Python Console, Interactive programmatic console for advanced editing and script development.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INFO</literal> Info, Main menu bar and list of error messages (drag down to expand and display).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TOPBAR</literal> Top Bar, Global bar at the top of the screen for global per-window settings.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>STATUSBAR</literal> Status Bar, Global bar at the bottom of the screen for general status information.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OUTLINER</literal> Outliner, Overview of scene graph and all available data-blocks.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PROPERTIES</literal> Properties, Edit properties of active object and related data-blocks.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FILE_BROWSER</literal> File Browser, Browse for files and assets.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>USER_PREFERENCES</literal> User Preferences, Edit persistent configuration settings.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘EMPTY’, ‘VIEW_3D’, ‘IMAGE_EDITOR’, ‘NODE_EDITOR’, ‘SEQUENCE_EDITOR’, ‘CLIP_EDITOR’, ‘DOPESHEET_EDITOR’, ‘GRAPH_EDITOR’, ‘NLA_EDITOR’, ‘TEXT_EDITOR’, ‘CONSOLE’, ‘INFO’, ‘TOPBAR’, ‘STATUSBAR’, ‘OUTLINER’, ‘PROPERTIES’, ‘FILE_BROWSER’, ‘USER_PREFERENCES’], default ‘EMPTY’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_filter_by_owner\ (bpy.types.WorkSpace\ attribute)',\ u'bpy.types.WorkSpace.use_filter_by_owner',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.use_filter_by_owner" ids="bpy.types.WorkSpace.use_filter_by_owner" module="bpy.types" names="bpy.types.WorkSpace.use_filter_by_owner"><desc_name xml:space="preserve">use_filter_by_owner</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Filter the UI by tags</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'status_text_set()\ (bpy.types.WorkSpace\ class\ method)',\ u'bpy.types.WorkSpace.status_text_set',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.status_text_set" ids="bpy.types.WorkSpace.status_text_set" module="bpy.types" names="bpy.types.WorkSpace.status_text_set"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">status_text_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">text</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Set the status bar text, typically key shortcuts for modal operators</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">text</literal_strong> (<literal_emphasis>string</literal_emphasis>) – Text, New string for the status bar, None clears the text</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.WorkSpace\ class\ method)',\ u'bpy.types.WorkSpace.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.bl_rna_get_subclass" ids="bpy.types.WorkSpace.bl_rna_get_subclass" module="bpy.types" names="bpy.types.WorkSpace.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.WorkSpace\ class\ method)',\ u'bpy.types.WorkSpace.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="WorkSpace" first="False" fullname="WorkSpace.bl_rna_get_subclass_py" ids="bpy.types.WorkSpace.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.WorkSpace.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.workspaces" refuri="bpy.types.BlendData#bpy.types.BlendData.workspaces"><literal classes="xref py py-class">BlendData.workspaces</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Context.workspace" refuri="bpy.types.Context#bpy.types.Context.workspace"><literal classes="xref py py-class">Context.workspace</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Window.workspace" refuri="bpy.types.Window#bpy.types.Window.workspace"><literal classes="xref py py-class">Window.workspace</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
