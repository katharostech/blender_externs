<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Image.rst">
    <section ids="module-bpy.types image-id" names="image(id)">
        <title>Image(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <index entries="['single',\ u'Image\ (class\ in\ bpy.types)',\ u'bpy.types.Image',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Image" ids="bpy.types.Image" module="bpy.types" names="bpy.types.Image"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Image</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Image data-block referencing an external or packed image</paragraph>
                <index entries="['single',\ u'alpha_mode\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.alpha_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.alpha_mode" ids="bpy.types.Image.alpha_mode" module="bpy.types" names="bpy.types.Image.alpha_mode"><desc_name xml:space="preserve">alpha_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Representation of alpha information in the RGBA pixels</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>STRAIGHT</literal> Straight, Transparent RGB and alpha pixels are unmodified.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PREMUL</literal> Premultiplied, Transparent RGB pixels are multiplied by the alpha channel.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘STRAIGHT’, ‘PREMUL’], default ‘STRAIGHT’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.bindcode\ (in\ module\ bpy.types)',\ u'bpy.types.Image.bindcode',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.bindcode" ids="bpy.types.Image.bindcode" module="bpy.types" names="bpy.types.Image.bindcode"><desc_name xml:space="preserve">bindcode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>OpenGL bindcode</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.channels\ (in\ module\ bpy.types)',\ u'bpy.types.Image.channels',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.channels" ids="bpy.types.Image.channels" module="bpy.types" names="bpy.types.Image.channels"><desc_name xml:space="preserve">channels</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of channels in pixels buffer</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.colorspace_settings\ (in\ module\ bpy.types)',\ u'bpy.types.Image.colorspace_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.colorspace_settings" ids="bpy.types.Image.colorspace_settings" module="bpy.types" names="bpy.types.Image.colorspace_settings"><desc_name xml:space="preserve">colorspace_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Input color space settings</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorManagedInputColorspaceSettings" refuri="bpy.types.ColorManagedInputColorspaceSettings#bpy.types.ColorManagedInputColorspaceSettings"><literal classes="xref py py-class">ColorManagedInputColorspaceSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.depth\ (in\ module\ bpy.types)',\ u'bpy.types.Image.depth',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.depth" ids="bpy.types.Image.depth" module="bpy.types" names="bpy.types.Image.depth"><desc_name xml:space="preserve">depth</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Image bit depth</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'display_aspect\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.display_aspect',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.display_aspect" ids="bpy.types.Image.display_aspect" module="bpy.types" names="bpy.types.Image.display_aspect"><desc_name xml:space="preserve">display_aspect</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display Aspect for this image, does not affect rendering</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [0.1, inf], default (0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'file_format\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.file_format',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.file_format" ids="bpy.types.Image.file_format" module="bpy.types" names="bpy.types.Image.file_format"><desc_name xml:space="preserve">file_format</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Format used for re-saving this file</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>BMP</literal> BMP, Output image in bitmap format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>IRIS</literal> Iris, Output image in (old!) SGI IRIS format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>PNG</literal> PNG, Output image in PNG format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>JPEG</literal> JPEG, Output image in JPEG format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>JPEG2000</literal> JPEG 2000, Output image in JPEG 2000 format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TARGA</literal> Targa, Output image in Targa format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TARGA_RAW</literal> Targa Raw, Output image in uncompressed Targa format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CINEON</literal> Cineon, Output image in Cineon format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>DPX</literal> DPX, Output image in DPX format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OPEN_EXR_MULTILAYER</literal> OpenEXR MultiLayer, Output image in multilayer OpenEXR format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>OPEN_EXR</literal> OpenEXR, Output image in OpenEXR format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>HDR</literal> Radiance HDR, Output image in Radiance HDR format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>TIFF</literal> TIFF, Output image in TIFF format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AVI_JPEG</literal> AVI JPEG, Output video in AVI JPEG format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AVI_RAW</literal> AVI Raw, Output video in AVI Raw format.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FFMPEG</literal> FFmpeg video, The most versatile way to output video files.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘BMP’, ‘IRIS’, ‘PNG’, ‘JPEG’, ‘JPEG2000’, ‘TARGA’, ‘TARGA_RAW’, ‘CINEON’, ‘DPX’, ‘OPEN_EXR_MULTILAYER’, ‘OPEN_EXR’, ‘HDR’, ‘TIFF’, ‘AVI_JPEG’, ‘AVI_RAW’, ‘FFMPEG’], default ‘TARGA’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filepath\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.filepath',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.filepath" ids="bpy.types.Image.filepath" module="bpy.types" names="bpy.types.Image.filepath"><desc_name xml:space="preserve">filepath</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Image/Movie file name</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filepath_raw\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.filepath_raw',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.filepath_raw" ids="bpy.types.Image.filepath_raw" module="bpy.types" names="bpy.types.Image.filepath_raw"><desc_name xml:space="preserve">filepath_raw</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Image/Movie file name (without data refreshing)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.frame_duration\ (in\ module\ bpy.types)',\ u'bpy.types.Image.frame_duration',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.frame_duration" ids="bpy.types.Image.frame_duration" module="bpy.types" names="bpy.types.Image.frame_duration"><desc_name xml:space="preserve">frame_duration</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Duration (in frames) of the image (1 when not a video/sequence)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, inf], default 0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'generated_color\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.generated_color',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.generated_color" ids="bpy.types.Image.generated_color" module="bpy.types" names="bpy.types.Image.generated_color"><desc_name xml:space="preserve">generated_color</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Fill color for the generated image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 4 items in [0, inf], default (0.0, 0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'generated_height\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.generated_height',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.generated_height" ids="bpy.types.Image.generated_height" module="bpy.types" names="bpy.types.Image.generated_height"><desc_name xml:space="preserve">generated_height</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Generated image height</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 65536], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'generated_type\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.generated_type',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.generated_type" ids="bpy.types.Image.generated_type" module="bpy.types" names="bpy.types.Image.generated_type"><desc_name xml:space="preserve">generated_type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Generated image type</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>BLANK</literal> Blank, Generate a blank image.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>UV_GRID</literal> UV Grid, Generated grid to test UV mappings.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>COLOR_GRID</literal> Color Grid, Generated improved UV grid to test UV mappings.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘BLANK’, ‘UV_GRID’, ‘COLOR_GRID’], default ‘BLANK’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'generated_width\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.generated_width',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.generated_width" ids="bpy.types.Image.generated_width" module="bpy.types" names="bpy.types.Image.generated_width"><desc_name xml:space="preserve">generated_width</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Generated image width</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 65536], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.has_data\ (in\ module\ bpy.types)',\ u'bpy.types.Image.has_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.has_data" ids="bpy.types.Image.has_data" module="bpy.types" names="bpy.types.Image.has_data"><desc_name xml:space="preserve">has_data</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>True if the image data is loaded into memory</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.is_dirty\ (in\ module\ bpy.types)',\ u'bpy.types.Image.is_dirty',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.is_dirty" ids="bpy.types.Image.is_dirty" module="bpy.types" names="bpy.types.Image.is_dirty"><desc_name xml:space="preserve">is_dirty</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Image has changed and is not saved</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.is_float\ (in\ module\ bpy.types)',\ u'bpy.types.Image.is_float',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.is_float" ids="bpy.types.Image.is_float" module="bpy.types" names="bpy.types.Image.is_float"><desc_name xml:space="preserve">is_float</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>True if this image is stored in float buffer</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.is_multiview\ (in\ module\ bpy.types)',\ u'bpy.types.Image.is_multiview',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.is_multiview" ids="bpy.types.Image.is_multiview" module="bpy.types" names="bpy.types.Image.is_multiview"><desc_name xml:space="preserve">is_multiview</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Image has more than one view</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.is_stereo_3d\ (in\ module\ bpy.types)',\ u'bpy.types.Image.is_stereo_3d',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.is_stereo_3d" ids="bpy.types.Image.is_stereo_3d" module="bpy.types" names="bpy.types.Image.is_stereo_3d"><desc_name xml:space="preserve">is_stereo_3d</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Image has left and right views</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.packed_file\ (in\ module\ bpy.types)',\ u'bpy.types.Image.packed_file',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.packed_file" ids="bpy.types.Image.packed_file" module="bpy.types" names="bpy.types.Image.packed_file"><desc_name xml:space="preserve">packed_file</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>First packed file of the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.PackedFile" refuri="bpy.types.PackedFile#bpy.types.PackedFile"><literal classes="xref py py-class">PackedFile</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.packed_files\ (in\ module\ bpy.types)',\ u'bpy.types.Image.packed_files',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.packed_files" ids="bpy.types.Image.packed_files" module="bpy.types" names="bpy.types.Image.packed_files"><desc_name xml:space="preserve">packed_files</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Collection of packed images</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.ImagePackedFile" refuri="bpy.types.ImagePackedFile#bpy.types.ImagePackedFile"><literal classes="xref py py-class">ImagePackedFile</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'pixels\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.pixels',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.pixels" ids="bpy.types.Image.pixels" module="bpy.types" names="bpy.types.Image.pixels"><desc_name xml:space="preserve">pixels</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Image pixels in floating point values</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-inf, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.render_slots\ (in\ module\ bpy.types)',\ u'bpy.types.Image.render_slots',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.render_slots" ids="bpy.types.Image.render_slots" module="bpy.types" names="bpy.types.Image.render_slots"><desc_name xml:space="preserve">render_slots</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Render slots of the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.RenderSlots" refuri="bpy.types.RenderSlots#bpy.types.RenderSlots"><literal classes="xref py py-class">RenderSlots</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.RenderSlot" refuri="bpy.types.RenderSlot#bpy.types.RenderSlot"><literal classes="xref py py-class">RenderSlot</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'resolution\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.resolution',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.resolution" ids="bpy.types.Image.resolution" module="bpy.types" names="bpy.types.Image.resolution"><desc_name xml:space="preserve">resolution</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>X/Y pixels per meter</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [-inf, inf], default (0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.size\ (in\ module\ bpy.types)',\ u'bpy.types.Image.size',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.size" ids="bpy.types.Image.size" module="bpy.types" names="bpy.types.Image.size"><desc_name xml:space="preserve">size</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Width and height in pixels, zero when image data cant be loaded</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int array of 2 items in [-inf, inf], default (0, 0), (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'source\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.source',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.source" ids="bpy.types.Image.source" module="bpy.types" names="bpy.types.Image.source"><desc_name xml:space="preserve">source</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Where the image comes from</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>FILE</literal> Single Image, Single image file.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>SEQUENCE</literal> Image Sequence, Multiple image files, as a sequence.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>MOVIE</literal> Movie, Movie file.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GENERATED</literal> Generated, Generated image.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VIEWER</literal> Viewer, Compositing node viewer.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘FILE’, ‘SEQUENCE’, ‘MOVIE’, ‘GENERATED’, ‘VIEWER’], default ‘FILE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.stereo_3d_format\ (in\ module\ bpy.types)',\ u'bpy.types.Image.stereo_3d_format',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.stereo_3d_format" ids="bpy.types.Image.stereo_3d_format" module="bpy.types" names="bpy.types.Image.stereo_3d_format"><desc_name xml:space="preserve">stereo_3d_format</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Settings for stereo 3d</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Stereo3dFormat" refuri="bpy.types.Stereo3dFormat#bpy.types.Stereo3dFormat"><literal classes="xref py py-class">Stereo3dFormat</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Image.type\ (in\ module\ bpy.types)',\ u'bpy.types.Image.type',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Image" first="False" fullname="Image.type" ids="bpy.types.Image.type" module="bpy.types" names="bpy.types.Image.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>How to generate the image</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘IMAGE’, ‘MULTILAYER’, ‘UV_TEST’, ‘RENDER_RESULT’, ‘COMPOSITING’], default ‘IMAGE’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_alpha\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.use_alpha',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.use_alpha" ids="bpy.types.Image.use_alpha" module="bpy.types" names="bpy.types.Image.use_alpha"><desc_name xml:space="preserve">use_alpha</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use the alpha channel information from the image or make image fully opaque</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_deinterlace\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.use_deinterlace',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.use_deinterlace" ids="bpy.types.Image.use_deinterlace" module="bpy.types" names="bpy.types.Image.use_deinterlace"><desc_name xml:space="preserve">use_deinterlace</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Deinterlace movie file on load</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_generated_float\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.use_generated_float',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.use_generated_float" ids="bpy.types.Image.use_generated_float" module="bpy.types" names="bpy.types.Image.use_generated_float"><desc_name xml:space="preserve">use_generated_float</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Generate floating point buffer</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_multiview\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.use_multiview',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.use_multiview" ids="bpy.types.Image.use_multiview" module="bpy.types" names="bpy.types.Image.use_multiview"><desc_name xml:space="preserve">use_multiview</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use Multiple Views (when available)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_view_as_render\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.use_view_as_render',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.use_view_as_render" ids="bpy.types.Image.use_view_as_render" module="bpy.types" names="bpy.types.Image.use_view_as_render"><desc_name xml:space="preserve">use_view_as_render</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Apply render part of display transformation when displaying this image on the screen</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'views_format\ (bpy.types.Image\ attribute)',\ u'bpy.types.Image.views_format',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Image" first="False" fullname="Image.views_format" ids="bpy.types.Image.views_format" module="bpy.types" names="bpy.types.Image.views_format"><desc_name xml:space="preserve">views_format</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Mode to load image views</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>INDIVIDUAL</literal> Individual, Individual files for each view with the prefix as defined by the scene views.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>STEREO_3D</literal> Stereo 3D, Single file with an encoded stereo pair.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘INDIVIDUAL’, ‘STEREO_3D’], default ‘INDIVIDUAL’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'save_render()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.save_render',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.save_render" ids="bpy.types.Image.save_render" module="bpy.types" names="bpy.types.Image.save_render"><desc_name xml:space="preserve">save_render</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filepath</desc_parameter><desc_parameter xml:space="preserve">scene=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Save image to a specific path using a scenes render settings</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">filepath</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Save path</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scene</literal_strong> (<reference internal="True" reftitle="bpy.types.Scene" refuri="bpy.types.Scene#bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference>, (optional)) – Scene to take image parameters from</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'save()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.save',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.save" ids="bpy.types.Image.save" module="bpy.types" names="bpy.types.Image.save"><desc_name xml:space="preserve">save</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Save image to its source path</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'pack()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.pack',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.pack" ids="bpy.types.Image.pack" module="bpy.types" names="bpy.types.Image.pack"><desc_name xml:space="preserve">pack</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">as_png=False</desc_parameter><desc_parameter xml:space="preserve">data=""</desc_parameter><desc_parameter xml:space="preserve">data_len=0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Pack an image as embedded data into the .blend file</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">as_png</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – as_png, Pack the image as PNG (needed for generated/dirty images)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">data</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – data, Raw data (bytes, exact content of the embedded file)</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">data_len</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – data_len, length of given data (mandatory if data is provided)</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'unpack()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.unpack',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.unpack" ids="bpy.types.Image.unpack" module="bpy.types" names="bpy.types.Image.unpack"><desc_name xml:space="preserve">unpack</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">method='USE_LOCAL'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Save an image packed in the .blend file to disk</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">method</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'USE_LOCAL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'WRITE_LOCAL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'USE_ORIGINAL'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'WRITE_ORIGINAL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – method, How to unpack</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'reload()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.reload',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.reload" ids="bpy.types.Image.reload" module="bpy.types" names="bpy.types.Image.reload"><desc_name xml:space="preserve">reload</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Reload the image from its source path</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.update',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.update" ids="bpy.types.Image.update" module="bpy.types" names="bpy.types.Image.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update the display image from the floating point buffer</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'scale()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.scale',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.scale" ids="bpy.types.Image.scale" module="bpy.types" names="bpy.types.Image.scale"><desc_name xml:space="preserve">scale</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">width</desc_parameter><desc_parameter xml:space="preserve">height</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Scale the image in pixels</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">width</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>10000</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Width</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">height</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>10000</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Height</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gl_touch()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.gl_touch',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.gl_touch" ids="bpy.types.Image.gl_touch" module="bpy.types" names="bpy.types.Image.gl_touch"><desc_name xml:space="preserve">gl_touch</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">frame=0</desc_parameter><desc_parameter xml:space="preserve">filter=9985</desc_parameter><desc_parameter xml:space="preserve">mag=9729</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Delay the image from being cleaned from the cache due inactivity</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Frame, Frame of image sequence or movie</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">filter</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Filter, The texture minifying function to use if the image wasn’t loaded</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">mag</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Magnification, The texture magnification function to use if the image wasn’t loaded</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Error, OpenGL error value</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gl_load()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.gl_load',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.gl_load" ids="bpy.types.Image.gl_load" module="bpy.types" names="bpy.types.Image.gl_load"><desc_name xml:space="preserve">gl_load</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">frame=0</desc_parameter><desc_parameter xml:space="preserve">filter=9985</desc_parameter><desc_parameter xml:space="preserve">mag=9729</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Load the image into OpenGL graphics memory</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Frame, Frame of image sequence or movie</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">filter</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Filter, The texture minifying function</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">mag</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Magnification, The texture magnification function</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Error, OpenGL error value</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gl_free()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.gl_free',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.gl_free" ids="bpy.types.Image.gl_free" module="bpy.types" names="bpy.types.Image.gl_free"><desc_name xml:space="preserve">gl_free</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Free the image from OpenGL graphics memory</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'filepath_from_user()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.filepath_from_user',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.filepath_from_user" ids="bpy.types.Image.filepath_from_user" module="bpy.types" names="bpy.types.Image.filepath_from_user"><desc_name xml:space="preserve">filepath_from_user</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">image_user=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Return the absolute path to the filepath of an image frame specified by the image user</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">image_user</literal_strong> (<reference internal="True" reftitle="bpy.types.ImageUser" refuri="bpy.types.ImageUser#bpy.types.ImageUser"><literal classes="xref py py-class">ImageUser</literal></reference>, (optional)) – Image user of the image to get filepath for</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>File Path, The resulting filepath from the image and it’s user</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>string, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'buffers_free()\ (bpy.types.Image\ method)',\ u'bpy.types.Image.buffers_free',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Image" first="False" fullname="Image.buffers_free" ids="bpy.types.Image.buffers_free" module="bpy.types" names="bpy.types.Image.buffers_free"><desc_name xml:space="preserve">buffers_free</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Free the image buffers from memory</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Image\ class\ method)',\ u'bpy.types.Image.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Image" first="False" fullname="Image.bl_rna_get_subclass" ids="bpy.types.Image.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Image.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Image\ class\ method)',\ u'bpy.types.Image.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Image" first="False" fullname="Image.bl_rna_get_subclass_py" ids="bpy.types.Image.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Image.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.edit_image" refuri="bpy.context#bpy.context.edit_image"><literal classes="xref py py-mod">bpy.context.edit_image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.images" refuri="bpy.types.BlendData#bpy.types.BlendData.images"><literal classes="xref py py-class">BlendData.images</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataImages.load" refuri="bpy.types.BlendDataImages#bpy.types.BlendDataImages.load"><literal classes="xref py py-class">BlendDataImages.load</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataImages.new" refuri="bpy.types.BlendDataImages#bpy.types.BlendDataImages.new"><literal classes="xref py py-class">BlendDataImages.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataImages.remove" refuri="bpy.types.BlendDataImages#bpy.types.BlendDataImages.remove"><literal classes="xref py py-class">BlendDataImages.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Brush.clone_image" refuri="bpy.types.Brush#bpy.types.Brush.clone_image"><literal classes="xref py py-class">Brush.clone_image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CameraBackgroundImage.image" refuri="bpy.types.CameraBackgroundImage#bpy.types.CameraBackgroundImage.image"><literal classes="xref py py-class">CameraBackgroundImage.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeImage.image" refuri="bpy.types.CompositorNodeImage#bpy.types.CompositorNodeImage.image"><literal classes="xref py py-class">CompositorNodeImage.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ImagePaint.canvas" refuri="bpy.types.ImagePaint#bpy.types.ImagePaint.canvas"><literal classes="xref py py-class">ImagePaint.canvas</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ImagePaint.clone_image" refuri="bpy.types.ImagePaint#bpy.types.ImagePaint.clone_image"><literal classes="xref py py-class">ImagePaint.clone_image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ImagePaint.stencil_image" refuri="bpy.types.ImagePaint#bpy.types.ImagePaint.stencil_image"><literal classes="xref py py-class">ImagePaint.stencil_image</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ImageTexture.image" refuri="bpy.types.ImageTexture#bpy.types.ImageTexture.image"><literal classes="xref py py-class">ImageTexture.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Material.texture_paint_images" refuri="bpy.types.Material#bpy.types.Material.texture_paint_images"><literal classes="xref py py-class">Material.texture_paint_images</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MaterialGPencilStyle.fill_image" refuri="bpy.types.MaterialGPencilStyle#bpy.types.MaterialGPencilStyle.fill_image"><literal classes="xref py py-class">MaterialGPencilStyle.fill_image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MaterialGPencilStyle.stroke_image" refuri="bpy.types.MaterialGPencilStyle#bpy.types.MaterialGPencilStyle.stroke_image"><literal classes="xref py py-class">MaterialGPencilStyle.stroke_image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.MovieTrackingPlaneTrack.image" refuri="bpy.types.MovieTrackingPlaneTrack#bpy.types.MovieTrackingPlaneTrack.image"><literal classes="xref py py-class">MovieTrackingPlaneTrack.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexEnvironment.image" refuri="bpy.types.ShaderNodeTexEnvironment#bpy.types.ShaderNodeTexEnvironment.image"><literal classes="xref py py-class">ShaderNodeTexEnvironment.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ShaderNodeTexImage.image" refuri="bpy.types.ShaderNodeTexImage#bpy.types.ShaderNodeTexImage.image"><literal classes="xref py py-class">ShaderNodeTexImage.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SpaceImageEditor.image" refuri="bpy.types.SpaceImageEditor#bpy.types.SpaceImageEditor.image"><literal classes="xref py py-class">SpaceImageEditor.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.TextureNodeImage.image" refuri="bpy.types.TextureNodeImage#bpy.types.TextureNodeImage.image"><literal classes="xref py py-class">TextureNodeImage.image</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_image_layers" refuri="bpy.types.UILayout#bpy.types.UILayout.template_image_layers"><literal classes="xref py py-class">UILayout.template_image_layers</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
