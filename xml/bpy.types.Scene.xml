<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.Scene.rst">
    <section ids="module-bpy.types scene-id" names="scene(id)">
        <title>Scene(ID)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base classes — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference>, <reference internal="True" reftitle="bpy.types.ID" refuri="bpy.types.ID#bpy.types.ID"><literal classes="xref py py-class">ID</literal></reference></paragraph>
        <index entries="['single',\ u'Scene\ (class\ in\ bpy.types)',\ u'bpy.types.Scene',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="Scene" ids="bpy.types.Scene" module="bpy.types" names="bpy.types.Scene"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">Scene</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">ID</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Scene data-block, consisting in objects and defining time and render related settings</paragraph>
                <index entries="['single',\ u'active_clip\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.active_clip',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.active_clip" ids="bpy.types.Scene.active_clip" module="bpy.types" names="bpy.types.Scene.active_clip"><desc_name xml:space="preserve">active_clip</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Active movie clip used for constraints and viewport drawing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.MovieClip" refuri="bpy.types.MovieClip#bpy.types.MovieClip"><literal classes="xref py py-class">MovieClip</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.animation_data\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.animation_data',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.animation_data" ids="bpy.types.Scene.animation_data" module="bpy.types" names="bpy.types.Scene.animation_data"><desc_name xml:space="preserve">animation_data</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Animation data for this data-block</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.AnimData" refuri="bpy.types.AnimData#bpy.types.AnimData"><literal classes="xref py py-class">AnimData</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'audio_distance_model\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.audio_distance_model',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.audio_distance_model" ids="bpy.types.Scene.audio_distance_model" module="bpy.types" names="bpy.types.Scene.audio_distance_model"><desc_name xml:space="preserve">audio_distance_model</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Distance model for distance attenuation calculation</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NONE</literal> None, No distance attenuation.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INVERSE</literal> Inverse, Inverse distance model.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>INVERSE_CLAMPED</literal> Inverse Clamped, Inverse distance model with clamping.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LINEAR</literal> Linear, Linear distance model.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LINEAR_CLAMPED</literal> Linear Clamped, Linear distance model with clamping.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EXPONENT</literal> Exponent, Exponent distance model.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>EXPONENT_CLAMPED</literal> Exponent Clamped, Exponent distance model with clamping.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘INVERSE’, ‘INVERSE_CLAMPED’, ‘LINEAR’, ‘LINEAR_CLAMPED’, ‘EXPONENT’, ‘EXPONENT_CLAMPED’], default ‘NONE’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'audio_doppler_factor\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.audio_doppler_factor',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.audio_doppler_factor" ids="bpy.types.Scene.audio_doppler_factor" module="bpy.types" names="bpy.types.Scene.audio_doppler_factor"><desc_name xml:space="preserve">audio_doppler_factor</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Pitch factor for Doppler effect calculation</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'audio_doppler_speed\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.audio_doppler_speed',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.audio_doppler_speed" ids="bpy.types.Scene.audio_doppler_speed" module="bpy.types" names="bpy.types.Scene.audio_doppler_speed"><desc_name xml:space="preserve">audio_doppler_speed</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Speed of sound for Doppler effect calculation</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0.01, inf], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'audio_volume\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.audio_volume',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.audio_volume" ids="bpy.types.Scene.audio_volume" module="bpy.types" names="bpy.types.Scene.audio_volume"><desc_name xml:space="preserve">audio_volume</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Audio volume</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 100], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'background_set\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.background_set',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.background_set" ids="bpy.types.Scene.background_set" module="bpy.types" names="bpy.types.Scene.background_set"><desc_name xml:space="preserve">background_set</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Background set scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" refid="bpy.types.Scene" reftitle="bpy.types.Scene"><literal classes="xref py py-class">Scene</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'camera\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.camera',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.camera" ids="bpy.types.Scene.camera" module="bpy.types" names="bpy.types.Scene.camera"><desc_name xml:space="preserve">camera</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Active camera, used for rendering the scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.collection\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.collection',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.collection" ids="bpy.types.Scene.collection" module="bpy.types" names="bpy.types.Scene.collection"><desc_name xml:space="preserve">collection</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Scene master collection that objects and other collections in the scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Collection" refuri="bpy.types.Collection#bpy.types.Collection"><literal classes="xref py py-class">Collection</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.current_orientation\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.current_orientation',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.current_orientation" ids="bpy.types.Scene.current_orientation" module="bpy.types" names="bpy.types.Scene.current_orientation"><desc_name xml:space="preserve">current_orientation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Current transformation orientation</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.TransformOrientation" refuri="bpy.types.TransformOrientation#bpy.types.TransformOrientation"><literal classes="xref py py-class">TransformOrientation</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'cursor_location\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.cursor_location',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.cursor_location" ids="bpy.types.Scene.cursor_location" module="bpy.types" names="bpy.types.Scene.cursor_location"><desc_name xml:space="preserve">cursor_location</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>3D cursor location</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'cursor_rotation\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.cursor_rotation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.cursor_rotation" ids="bpy.types.Scene.cursor_rotation" module="bpy.types" names="bpy.types.Scene.cursor_rotation"><desc_name xml:space="preserve">cursor_rotation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>3D cursor rotation in quaternions (keep normalized)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 4 items in [-inf, inf], default (0.0, 0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.cycles\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.cycles',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.cycles" ids="bpy.types.Scene.cycles" module="bpy.types" names="bpy.types.Scene.cycles"><desc_name xml:space="preserve">cycles</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Cycles render settings</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.CyclesRenderSettings" refuri="bpy.types.CyclesRenderSettings#bpy.types.CyclesRenderSettings"><literal classes="xref py py-class">CyclesRenderSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.cycles_curves\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.cycles_curves',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.cycles_curves" ids="bpy.types.Scene.cycles_curves" module="bpy.types" names="bpy.types.Scene.cycles_curves"><desc_name xml:space="preserve">cycles_curves</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Cycles hair rendering settings</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.CyclesCurveRenderSettings" refuri="bpy.types.CyclesCurveRenderSettings#bpy.types.CyclesCurveRenderSettings"><literal classes="xref py py-class">CyclesCurveRenderSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.display\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.display',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.display" ids="bpy.types.Scene.display" module="bpy.types" names="bpy.types.Scene.display"><desc_name xml:space="preserve">display</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Scene display settings for 3d viewport</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SceneDisplay" refuri="bpy.types.SceneDisplay#bpy.types.SceneDisplay"><literal classes="xref py py-class">SceneDisplay</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.display_settings\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.display_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.display_settings" ids="bpy.types.Scene.display_settings" module="bpy.types" names="bpy.types.Scene.display_settings"><desc_name xml:space="preserve">display_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Settings of device saved image would be displayed on</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorManagedDisplaySettings" refuri="bpy.types.ColorManagedDisplaySettings#bpy.types.ColorManagedDisplaySettings"><literal classes="xref py py-class">ColorManagedDisplaySettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.eevee\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.eevee',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.eevee" ids="bpy.types.Scene.eevee" module="bpy.types" names="bpy.types.Scene.eevee"><desc_name xml:space="preserve">eevee</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>EEVEE settings for the scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SceneEEVEE" refuri="bpy.types.SceneEEVEE#bpy.types.SceneEEVEE"><literal classes="xref py py-class">SceneEEVEE</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_current\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_current',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_current" ids="bpy.types.Scene.frame_current" module="bpy.types" names="bpy.types.Scene.frame_current"><desc_name xml:space="preserve">frame_current</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Current Frame, to update animation data from python frame_set() instead</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-1048574, 1048574], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.frame_current_final\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.frame_current_final',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_current_final" ids="bpy.types.Scene.frame_current_final" module="bpy.types" names="bpy.types.Scene.frame_current_final"><desc_name xml:space="preserve">frame_current_final</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Current frame with subframe and time remapping applied</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-1.04857e+06, 1.04857e+06], default 0.0, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_end\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_end" ids="bpy.types.Scene.frame_end" module="bpy.types" names="bpy.types.Scene.frame_end"><desc_name xml:space="preserve">frame_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Final frame of the playback/rendering range</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1048574], default 250</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_float\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_float',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_float" ids="bpy.types.Scene.frame_float" module="bpy.types" names="bpy.types.Scene.frame_float"><desc_name xml:space="preserve">frame_float</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [-1.04857e+06, 1.04857e+06], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_preview_end\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_preview_end',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_preview_end" ids="bpy.types.Scene.frame_preview_end" module="bpy.types" names="bpy.types.Scene.frame_preview_end"><desc_name xml:space="preserve">frame_preview_end</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Alternative end frame for UI playback</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_preview_start\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_preview_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_preview_start" ids="bpy.types.Scene.frame_preview_start" module="bpy.types" names="bpy.types.Scene.frame_preview_start"><desc_name xml:space="preserve">frame_preview_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Alternative start frame for UI playback</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [-inf, inf], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_start\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_start',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_start" ids="bpy.types.Scene.frame_start" module="bpy.types" names="bpy.types.Scene.frame_start"><desc_name xml:space="preserve">frame_start</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>First frame of the playback/rendering range</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1048574], default 1</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_step\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_step',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_step" ids="bpy.types.Scene.frame_step" module="bpy.types" names="bpy.types.Scene.frame_step"><desc_name xml:space="preserve">frame_step</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of frames to skip forward while rendering/playing back each frame</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [0, 1048574], default 0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_subframe\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.frame_subframe',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_subframe" ids="bpy.types.Scene.frame_subframe" module="bpy.types" names="bpy.types.Scene.frame_subframe"><desc_name xml:space="preserve">frame_subframe</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 1], default 0.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'gravity\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.gravity',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.gravity" ids="bpy.types.Scene.gravity" module="bpy.types" names="bpy.types.Scene.gravity"><desc_name xml:space="preserve">gravity</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Constant acceleration in a given direction</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float array of 3 items in [-inf, inf], default (0.0, 0.0, 0.0)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'grease_pencil\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.grease_pencil',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.grease_pencil" ids="bpy.types.Scene.grease_pencil" module="bpy.types" names="bpy.types.Scene.grease_pencil"><desc_name xml:space="preserve">grease_pencil</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Grease Pencil data-block used for annotations in the 3D view</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.GreasePencil" refuri="bpy.types.GreasePencil#bpy.types.GreasePencil"><literal classes="xref py py-class">GreasePencil</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.is_nla_tweakmode\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.is_nla_tweakmode',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.is_nla_tweakmode" ids="bpy.types.Scene.is_nla_tweakmode" module="bpy.types" names="bpy.types.Scene.is_nla_tweakmode"><desc_name xml:space="preserve">is_nla_tweakmode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Whether there is any action referenced by NLA being edited (strictly read-only)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.keying_sets\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.keying_sets',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.keying_sets" ids="bpy.types.Scene.keying_sets" module="bpy.types" names="bpy.types.Scene.keying_sets"><desc_name xml:space="preserve">keying_sets</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Absolute Keying Sets for this Scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyingSets" refuri="bpy.types.KeyingSets#bpy.types.KeyingSets"><literal classes="xref py py-class">KeyingSets</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.KeyingSet" refuri="bpy.types.KeyingSet#bpy.types.KeyingSet"><literal classes="xref py py-class">KeyingSet</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.keying_sets_all\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.keying_sets_all',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.keying_sets_all" ids="bpy.types.Scene.keying_sets_all" module="bpy.types" names="bpy.types.Scene.keying_sets_all"><desc_name xml:space="preserve">keying_sets_all</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>All Keying Sets available for use (Builtins and Absolute Keying Sets for this Scene)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.KeyingSetsAll" refuri="bpy.types.KeyingSetsAll#bpy.types.KeyingSetsAll"><literal classes="xref py py-class">KeyingSetsAll</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.KeyingSet" refuri="bpy.types.KeyingSet#bpy.types.KeyingSet"><literal classes="xref py py-class">KeyingSet</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'lock_frame_selection_to_range\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.lock_frame_selection_to_range',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.lock_frame_selection_to_range" ids="bpy.types.Scene.lock_frame_selection_to_range" module="bpy.types" names="bpy.types.Scene.lock_frame_selection_to_range"><desc_name xml:space="preserve">lock_frame_selection_to_range</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Don’t allow frame to be selected with mouse outside of frame range</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.node_tree\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.node_tree',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.node_tree" ids="bpy.types.Scene.node_tree" module="bpy.types" names="bpy.types.Scene.node_tree"><desc_name xml:space="preserve">node_tree</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Compositing node tree</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.NodeTree" refuri="bpy.types.NodeTree#bpy.types.NodeTree"><literal classes="xref py py-class">NodeTree</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.objects\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.objects',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.objects" ids="bpy.types.Scene.objects" module="bpy.types" names="bpy.types.Scene.objects"><desc_name xml:space="preserve">objects</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SceneObjects" refuri="bpy.types.SceneObjects#bpy.types.SceneObjects"><literal classes="xref py py-class">SceneObjects</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.render\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.render',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.render" ids="bpy.types.Scene.render" module="bpy.types" names="bpy.types.Scene.render"><desc_name xml:space="preserve">render</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.RenderSettings" refuri="bpy.types.RenderSettings#bpy.types.RenderSettings"><literal classes="xref py py-class">RenderSettings</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.rigidbody_world\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.rigidbody_world',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.rigidbody_world" ids="bpy.types.Scene.rigidbody_world" module="bpy.types" names="bpy.types.Scene.rigidbody_world"><desc_name xml:space="preserve">rigidbody_world</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.RigidBodyWorld" refuri="bpy.types.RigidBodyWorld#bpy.types.RigidBodyWorld"><literal classes="xref py py-class">RigidBodyWorld</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.safe_areas\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.safe_areas',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.safe_areas" ids="bpy.types.Scene.safe_areas" module="bpy.types" names="bpy.types.Scene.safe_areas"><desc_name xml:space="preserve">safe_areas</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.DisplaySafeAreas" refuri="bpy.types.DisplaySafeAreas#bpy.types.DisplaySafeAreas"><literal classes="xref py py-class">DisplaySafeAreas</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.sequence_editor\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.sequence_editor',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.sequence_editor" ids="bpy.types.Scene.sequence_editor" module="bpy.types" names="bpy.types.Scene.sequence_editor"><desc_name xml:space="preserve">sequence_editor</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SequenceEditor" refuri="bpy.types.SequenceEditor#bpy.types.SequenceEditor"><literal classes="xref py py-class">SequenceEditor</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.sequencer_colorspace_settings\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.sequencer_colorspace_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.sequencer_colorspace_settings" ids="bpy.types.Scene.sequencer_colorspace_settings" module="bpy.types" names="bpy.types.Scene.sequencer_colorspace_settings"><desc_name xml:space="preserve">sequencer_colorspace_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Settings of color space sequencer is working in</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorManagedSequencerColorspaceSettings" refuri="bpy.types.ColorManagedSequencerColorspaceSettings#bpy.types.ColorManagedSequencerColorspaceSettings"><literal classes="xref py py-class">ColorManagedSequencerColorspaceSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_keys_from_selected_only\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.show_keys_from_selected_only',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.show_keys_from_selected_only" ids="bpy.types.Scene.show_keys_from_selected_only" module="bpy.types" names="bpy.types.Scene.show_keys_from_selected_only"><desc_name xml:space="preserve">show_keys_from_selected_only</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Consider keyframes for active Object and/or its selected bones only (in timeline and when jumping between keyframes)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_subframe\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.show_subframe',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.show_subframe" ids="bpy.types.Scene.show_subframe" module="bpy.types" names="bpy.types.Scene.show_subframe"><desc_name xml:space="preserve">show_subframe</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Show current scene subframe and allow set it using interface tools</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'sync_mode\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.sync_mode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.sync_mode" ids="bpy.types.Scene.sync_mode" module="bpy.types" names="bpy.types.Scene.sync_mode"><desc_name xml:space="preserve">sync_mode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>How to sync playback</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>NONE</literal> No Sync, Do not sync, play every frame.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FRAME_DROP</literal> Frame Dropping, Drop frames if playback is too slow.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>AUDIO_SYNC</literal> AV-sync, Sync to audio playback, dropping frames.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘NONE’, ‘FRAME_DROP’, ‘AUDIO_SYNC’], default ‘AUDIO_SYNC’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.timeline_markers\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.timeline_markers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.timeline_markers" ids="bpy.types.Scene.timeline_markers" module="bpy.types" names="bpy.types.Scene.timeline_markers"><desc_name xml:space="preserve">timeline_markers</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Markers used in all timelines for the current scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.TimelineMarkers" refuri="bpy.types.TimelineMarkers#bpy.types.TimelineMarkers"><literal classes="xref py py-class">TimelineMarkers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.TimelineMarker" refuri="bpy.types.TimelineMarker#bpy.types.TimelineMarker"><literal classes="xref py py-class">TimelineMarker</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.tool_settings\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.tool_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.tool_settings" ids="bpy.types.Scene.tool_settings" module="bpy.types" names="bpy.types.Scene.tool_settings"><desc_name xml:space="preserve">tool_settings</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ToolSettings" refuri="bpy.types.ToolSettings#bpy.types.ToolSettings"><literal classes="xref py py-class">ToolSettings</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'transform_orientation\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.transform_orientation',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.transform_orientation" ids="bpy.types.Scene.transform_orientation" module="bpy.types" names="bpy.types.Scene.transform_orientation"><desc_name xml:space="preserve">transform_orientation</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Transformation orientation</paragraph>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>GLOBAL</literal> Global, Align the transformation axes to world space.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>LOCAL</literal> Local, Align the transformation axes to the selected objects’ local space.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>NORMAL</literal> Normal, Align the transformation axes to average normal of selected elements (bone Y axis for pose mode).</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>GIMBAL</literal> Gimbal, Align each axis to the Euler rotation axis as used for input.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>VIEW</literal> View, Align the transformation axes to the window.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>CURSOR</literal> Cursor, Align the transformation axes to the 3D cursor.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘GLOBAL’, ‘LOCAL’, ‘NORMAL’, ‘GIMBAL’, ‘VIEW’, ‘CURSOR’], default ‘GLOBAL’</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.unit_settings\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.unit_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.unit_settings" ids="bpy.types.Scene.unit_settings" module="bpy.types" names="bpy.types.Scene.unit_settings"><desc_name xml:space="preserve">unit_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Unit editing settings</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.UnitSettings" refuri="bpy.types.UnitSettings#bpy.types.UnitSettings"><literal classes="xref py py-class">UnitSettings</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_audio\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.use_audio',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.use_audio" ids="bpy.types.Scene.use_audio" module="bpy.types" names="bpy.types.Scene.use_audio"><desc_name xml:space="preserve">use_audio</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Play back of audio from Sequence Editor will be muted</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_audio_scrub\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.use_audio_scrub',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.use_audio_scrub" ids="bpy.types.Scene.use_audio_scrub" module="bpy.types" names="bpy.types.Scene.use_audio_scrub"><desc_name xml:space="preserve">use_audio_scrub</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Play audio from Sequence Editor while scrubbing</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_gravity\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.use_gravity',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.use_gravity" ids="bpy.types.Scene.use_gravity" module="bpy.types" names="bpy.types.Scene.use_gravity"><desc_name xml:space="preserve">use_gravity</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use global gravity for all dynamics</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_nodes\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.use_nodes',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.use_nodes" ids="bpy.types.Scene.use_nodes" module="bpy.types" names="bpy.types.Scene.use_nodes"><desc_name xml:space="preserve">use_nodes</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Enable the compositing node tree</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_preview_range\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.use_preview_range',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.use_preview_range" ids="bpy.types.Scene.use_preview_range" module="bpy.types" names="bpy.types.Scene.use_preview_range"><desc_name xml:space="preserve">use_preview_range</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use an alternative start/end frame range for animation playback and OpenGL renders instead of the Render properties start/end frame range</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_stamp_note\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.use_stamp_note',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.use_stamp_note" ids="bpy.types.Scene.use_stamp_note" module="bpy.types" names="bpy.types.Scene.use_stamp_note"><desc_name xml:space="preserve">use_stamp_note</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>User defined note for the render stamping</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.view_layers\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.view_layers',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.view_layers" ids="bpy.types.Scene.view_layers" module="bpy.types" names="bpy.types.Scene.view_layers"><desc_name xml:space="preserve">view_layers</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ViewLayers" refuri="bpy.types.ViewLayers#bpy.types.ViewLayers"><literal classes="xref py py-class">ViewLayers</literal></reference> <reference internal="True" reftitle="bpy.types.bpy_prop_collection" refuri="bpy.types.bpy_prop_collection#bpy.types.bpy_prop_collection"><literal classes="xref py py-class">bpy_prop_collection</literal></reference> of <reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'Scene.view_settings\ (in\ module\ bpy.types)',\ u'bpy.types.Scene.view_settings',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="Scene" first="False" fullname="Scene.view_settings" ids="bpy.types.Scene.view_settings" module="bpy.types" names="bpy.types.Scene.view_settings"><desc_name xml:space="preserve">view_settings</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Color management settings applied on image before saving</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.ColorManagedViewSettings" refuri="bpy.types.ColorManagedViewSettings#bpy.types.ColorManagedViewSettings"><literal classes="xref py py-class">ColorManagedViewSettings</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'world\ (bpy.types.Scene\ attribute)',\ u'bpy.types.Scene.world',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="Scene" first="False" fullname="Scene.world" ids="bpy.types.Scene.world" module="bpy.types" names="bpy.types.Scene.world"><desc_name xml:space="preserve">world</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>World used for rendering the scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.World" refuri="bpy.types.World#bpy.types.World"><literal classes="xref py py-class">World</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'statistics()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.statistics',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.statistics" ids="bpy.types.Scene.statistics" module="bpy.types" names="bpy.types.Scene.statistics"><desc_name xml:space="preserve">statistics</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view_layer</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>statistics</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, (never None)) – Active layer</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>Statistics</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>string, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'frame_set()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.frame_set',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.frame_set" ids="bpy.types.Scene.frame_set" module="bpy.types" names="bpy.types.Scene.frame_set"><desc_name xml:space="preserve">frame_set</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">frame</desc_parameter><desc_parameter xml:space="preserve">subframe=0.0</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Set scene frame updating all objects immediately</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">frame</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1048574</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1048574</literal_emphasis><literal_emphasis>]</literal_emphasis>) – Frame number to set</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">subframe</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Sub-frame time, between 0.0 and 1.0</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'update()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.update',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.update" ids="bpy.types.Scene.update" module="bpy.types" names="bpy.types.Scene.update"><desc_name xml:space="preserve">update</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Update data tagged to be updated from previous access to data or operators</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'uvedit_aspect()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.uvedit_aspect',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.uvedit_aspect" ids="bpy.types.Scene.uvedit_aspect" module="bpy.types" names="bpy.types.Scene.uvedit_aspect"><desc_name xml:space="preserve">uvedit_aspect</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">object</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Get uv aspect for current object</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">object</literal_strong> (<reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (never None)) – Object</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>aspect</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>float array of 2 items in [0, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ray_cast()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.ray_cast',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.ray_cast" ids="bpy.types.Scene.ray_cast" module="bpy.types" names="bpy.types.Scene.ray_cast"><desc_name xml:space="preserve">ray_cast</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">view_layer</desc_parameter><desc_parameter xml:space="preserve">origin</desc_parameter><desc_parameter xml:space="preserve">direction</desc_parameter><desc_parameter xml:space="preserve">distance=1.70141e+38</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Cast a ray onto in object space</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">view_layer</literal_strong> (<reference internal="True" reftitle="bpy.types.ViewLayer" refuri="bpy.types.ViewLayer#bpy.types.ViewLayer"><literal classes="xref py py-class">ViewLayer</literal></reference>, (never None)) – Scene Layer</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">distance</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Maximum distance</paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return (result, location, normal, index, object, matrix)</field_name>
                                <field_body>
                                    <paragraph><title_reference>result</title_reference>, boolean</paragraph>
                                    <paragraph><title_reference>location</title_reference>, The hit location of this ray cast, float array of 3 items in [-inf, inf]</paragraph>
                                    <paragraph><title_reference>normal</title_reference>, The face normal at the ray cast hit location, float array of 3 items in [-inf, inf]</paragraph>
                                    <paragraph><title_reference>index</title_reference>, The face index, -1 when original data isn’t available, int in [-inf, inf]</paragraph>
                                    <paragraph><title_reference>object</title_reference>, Ray cast object, <reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference></paragraph>
                                    <paragraph><title_reference>matrix</title_reference>, Matrix, float multi-dimensional array of 4 * 4 items in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'sequence_editor_create()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.sequence_editor_create',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.sequence_editor_create" ids="bpy.types.Scene.sequence_editor_create" module="bpy.types" names="bpy.types.Scene.sequence_editor_create"><desc_name xml:space="preserve">sequence_editor_create</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Ensure sequence editor is valid in this scene</paragraph>
                        <field_list>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>New sequence editor data or NULL</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.SequenceEditor" refuri="bpy.types.SequenceEditor#bpy.types.SequenceEditor"><literal classes="xref py py-class">SequenceEditor</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'sequence_editor_clear()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.sequence_editor_clear',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.sequence_editor_clear" ids="bpy.types.Scene.sequence_editor_clear" module="bpy.types" names="bpy.types.Scene.sequence_editor_clear"><desc_name xml:space="preserve">sequence_editor_clear</desc_name><desc_parameterlist xml:space="preserve"></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Clear sequence editor in this scene</paragraph>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'alembic_export()\ (bpy.types.Scene\ method)',\ u'bpy.types.Scene.alembic_export',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="Scene" first="False" fullname="Scene.alembic_export" ids="bpy.types.Scene.alembic_export" module="bpy.types" names="bpy.types.Scene.alembic_export"><desc_name xml:space="preserve">alembic_export</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">filepath</desc_parameter><desc_parameter xml:space="preserve">frame_start=1</desc_parameter><desc_parameter xml:space="preserve">frame_end=1</desc_parameter><desc_parameter xml:space="preserve">xform_samples=1</desc_parameter><desc_parameter xml:space="preserve">geom_samples=1</desc_parameter><desc_parameter xml:space="preserve">shutter_open=0.0</desc_parameter><desc_parameter xml:space="preserve">shutter_close=1.0</desc_parameter><desc_parameter xml:space="preserve">selected_only=False</desc_parameter><desc_parameter xml:space="preserve">uvs=True</desc_parameter><desc_parameter xml:space="preserve">normals=True</desc_parameter><desc_parameter xml:space="preserve">vcolors=False</desc_parameter><desc_parameter xml:space="preserve">apply_subdiv=True</desc_parameter><desc_parameter xml:space="preserve">flatten=False</desc_parameter><desc_parameter xml:space="preserve">visible_layers_only=False</desc_parameter><desc_parameter xml:space="preserve">renderable_only=False</desc_parameter><desc_parameter xml:space="preserve">face_sets=False</desc_parameter><desc_parameter xml:space="preserve">subdiv_schema=False</desc_parameter><desc_parameter xml:space="preserve">export_hair=True</desc_parameter><desc_parameter xml:space="preserve">export_particles=True</desc_parameter><desc_parameter xml:space="preserve">compression_type='OGAWA'</desc_parameter><desc_parameter xml:space="preserve">packuv=False</desc_parameter><desc_parameter xml:space="preserve">scale=1.0</desc_parameter><desc_parameter xml:space="preserve">triangulate=False</desc_parameter><desc_parameter xml:space="preserve">quad_method='BEAUTY'</desc_parameter><desc_parameter xml:space="preserve">ngon_method='BEAUTY'</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Export to Alembic file (deprecated, use the Alembic export operator)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <bullet_list>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">filepath</literal_strong> (<literal_emphasis>string</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>never None</literal_emphasis><literal_emphasis>)</literal_emphasis>) – File Path, File path to write Alembic file</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">frame_start</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Start, Start Frame</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">frame_end</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-inf</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>inf</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – End, End Frame</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">xform_samples</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>128</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Xform samples, Transform samples per frame</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">geom_samples</literal_strong> (<literal_emphasis>int in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>128</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Geom samples, Geometry samples per frame</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">shutter_open</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Shutter open</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">shutter_close</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>-1</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Shutter close</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">selected_only</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Selected only, Export only selected objects</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">uvs</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – UVs, Export UVs</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">normals</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Normals, Export normals</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">vcolors</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Vertex colors, Export vertex colors</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">apply_subdiv</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Subsurfs as meshes, Export subdivision surfaces as meshes</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">flatten</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Flatten hierarchy, Flatten hierarchy</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">visible_layers_only</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Visible layers only, Export only objects in visible layers</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">renderable_only</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Renderable objects only, Export only objects marked renderable in the outliner</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">face_sets</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Facesets, Export face sets</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">subdiv_schema</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Use Alembic subdivision Schema, Use Alembic subdivision Schema</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">export_hair</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Export Hair, Exports hair particle systems as animated curves</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">export_particles</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Export Particles, Exports non-hair particle systems</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">compression_type</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'OGAWA'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'HDF5'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Compression</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">packuv</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Export with packed UV islands, Export with packed UV islands</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">scale</literal_strong> (<literal_emphasis>float in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>0.0001</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>1000</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Scale, Value by which to enlarge or shrink the objects with respect to the world’s origin</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">triangulate</literal_strong> (<literal_emphasis>boolean</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – Triangulate, Export Polygons (Quads &amp; NGons) as Triangles</paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">quad_method</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'BEAUTY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FIXED'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FIXED_ALTERNATE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SHORTEST_DIAGONAL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Quad Method, Method for splitting the quads into triangles</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>BEAUTY</literal> Beauty , Split the quads in nice triangles, slower method.</paragraph></list_item><list_item><paragraph><literal>FIXED</literal> Fixed, Split the quads on the first and third vertices.</paragraph></list_item><list_item><paragraph><literal>FIXED_ALTERNATE</literal> Fixed Alternate, Split the quads on the 2nd and 4th vertices.</paragraph></list_item><list_item><paragraph><literal>SHORTEST_DIAGONAL</literal> Shortest Diagonal, Split the quads based on the distance between the vertices.</paragraph></list_item></bullet_list></paragraph>
                                        </list_item>
                                        <list_item>
                                            <paragraph><literal_strong refspecific="True">ngon_method</literal_strong> (<literal_emphasis>enum in</literal_emphasis><literal_emphasis> [</literal_emphasis><literal_emphasis>'BEAUTY'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FIXED'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'FIXED_ALTERNATE'</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>'SHORTEST_DIAGONAL'</literal_emphasis><literal_emphasis>]</literal_emphasis><literal_emphasis>, </literal_emphasis><literal_emphasis>(</literal_emphasis><literal_emphasis>optional</literal_emphasis><literal_emphasis>)</literal_emphasis>) – <paragraph>Polygon Method, Method for splitting the polygons into triangles</paragraph><bullet_list bullet="*"><list_item><paragraph><literal>BEAUTY</literal> Beauty , Split the quads in nice triangles, slower method.</paragraph></list_item><list_item><paragraph><literal>FIXED</literal> Fixed, Split the quads on the first and third vertices.</paragraph></list_item><list_item><paragraph><literal>FIXED_ALTERNATE</literal> Fixed Alternate, Split the quads on the 2nd and 4th vertices.</paragraph></list_item><list_item><paragraph><literal>SHORTEST_DIAGONAL</literal> Shortest Diagonal, Split the quads based on the distance between the vertices.</paragraph></list_item></bullet_list></paragraph>
                                        </list_item>
                                    </bullet_list>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.Scene\ class\ method)',\ u'bpy.types.Scene.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Scene" first="False" fullname="Scene.bl_rna_get_subclass" ids="bpy.types.Scene.bl_rna_get_subclass" module="bpy.types" names="bpy.types.Scene.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.Scene\ class\ method)',\ u'bpy.types.Scene.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="Scene" first="False" fullname="Scene.bl_rna_get_subclass_py" ids="bpy.types.Scene.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.Scene.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name" refuri="bpy.types.ID#bpy.types.ID.name"><literal classes="xref py py-class">ID.name</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.name_full" refuri="bpy.types.ID#bpy.types.ID.name_full"><literal classes="xref py py-class">ID.name_full</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_evaluated" refuri="bpy.types.ID#bpy.types.ID.is_evaluated"><literal classes="xref py py-class">ID.is_evaluated</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.original" refuri="bpy.types.ID#bpy.types.ID.original"><literal classes="xref py py-class">ID.original</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.users" refuri="bpy.types.ID#bpy.types.ID.users"><literal classes="xref py py-class">ID.users</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.use_fake_user" refuri="bpy.types.ID#bpy.types.ID.use_fake_user"><literal classes="xref py py-class">ID.use_fake_user</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.tag" refuri="bpy.types.ID#bpy.types.ID.tag"><literal classes="xref py py-class">ID.tag</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.is_library_indirect" refuri="bpy.types.ID#bpy.types.ID.is_library_indirect"><literal classes="xref py py-class">ID.is_library_indirect</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.library" refuri="bpy.types.ID#bpy.types.ID.library"><literal classes="xref py py-class">ID.library</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_static" refuri="bpy.types.ID#bpy.types.ID.override_static"><literal classes="xref py py-class">ID.override_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.preview" refuri="bpy.types.ID#bpy.types.ID.preview"><literal classes="xref py py-class">ID.preview</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.copy" refuri="bpy.types.ID#bpy.types.ID.copy"><literal classes="xref py py-class">ID.copy</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.override_create" refuri="bpy.types.ID#bpy.types.ID.override_create"><literal classes="xref py py-class">ID.override_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_clear" refuri="bpy.types.ID#bpy.types.ID.user_clear"><literal classes="xref py py-class">ID.user_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_remap" refuri="bpy.types.ID#bpy.types.ID.user_remap"><literal classes="xref py py-class">ID.user_remap</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.make_local" refuri="bpy.types.ID#bpy.types.ID.make_local"><literal classes="xref py py-class">ID.make_local</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.user_of_id" refuri="bpy.types.ID#bpy.types.ID.user_of_id"><literal classes="xref py py-class">ID.user_of_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_create" refuri="bpy.types.ID#bpy.types.ID.animation_data_create"><literal classes="xref py py-class">ID.animation_data_create</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.animation_data_clear" refuri="bpy.types.ID#bpy.types.ID.animation_data_clear"><literal classes="xref py py-class">ID.animation_data_clear</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ID.update_tag" refuri="bpy.types.ID#bpy.types.ID.update_tag"><literal classes="xref py py-class">ID.update_tag</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.context.scene" refuri="bpy.context#bpy.context.scene"><literal classes="xref py py-mod">bpy.context.scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendData.scenes" refuri="bpy.types.BlendData#bpy.types.BlendData.scenes"><literal classes="xref py py-class">BlendData.scenes</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataScenes.new" refuri="bpy.types.BlendDataScenes#bpy.types.BlendDataScenes.new"><literal classes="xref py py-class">BlendDataScenes.new</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.BlendDataScenes.remove" refuri="bpy.types.BlendDataScenes#bpy.types.BlendDataScenes.remove"><literal classes="xref py py-class">BlendDataScenes.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Camera.view_frame" refuri="bpy.types.Camera#bpy.types.Camera.view_frame"><literal classes="xref py py-class">Camera.view_frame</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeDefocus.scene" refuri="bpy.types.CompositorNodeDefocus#bpy.types.CompositorNodeDefocus.scene"><literal classes="xref py py-class">CompositorNodeDefocus.scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.CompositorNodeRLayers.scene" refuri="bpy.types.CompositorNodeRLayers#bpy.types.CompositorNodeRLayers.scene"><literal classes="xref py py-class">CompositorNodeRLayers.scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Context.scene" refuri="bpy.types.Context#bpy.types.Context.scene"><literal classes="xref py py-class">Context.scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Depsgraph.scene" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph.scene"><literal classes="xref py py-class">Depsgraph.scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Depsgraph.scene_eval" refuri="bpy.types.Depsgraph#bpy.types.Depsgraph.scene_eval"><literal classes="xref py py-class">Depsgraph.scene_eval</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Image.save_render" refuri="bpy.types.Image#bpy.types.Image.save_render"><literal classes="xref py py-class">Image.save_render</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.is_deform_modified" refuri="bpy.types.Object#bpy.types.Object.is_deform_modified"><literal classes="xref py py-class">Object.is_deform_modified</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.is_modified" refuri="bpy.types.Object#bpy.types.Object.is_modified"><literal classes="xref py py-class">Object.is_modified</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.bind_display_space_shader" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.bind_display_space_shader"><literal classes="xref py py-class">RenderEngine.bind_display_space_shader</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.get_preview_pixel_size" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.get_preview_pixel_size"><literal classes="xref py py-class">RenderEngine.get_preview_pixel_size</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.register_pass" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.register_pass"><literal classes="xref py py-class">RenderEngine.register_pass</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.support_display_space_shader" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.support_display_space_shader"><literal classes="xref py py-class">RenderEngine.support_display_space_shader</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.RenderEngine.update_render_passes" refuri="bpy.types.RenderEngine#bpy.types.RenderEngine.update_render_passes"><literal classes="xref py py-class">RenderEngine.update_render_passes</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" refid="bpy.types.Scene.background_set" reftitle="bpy.types.Scene.background_set"><literal classes="xref py py-class">Scene.background_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.SceneSequence.scene" refuri="bpy.types.SceneSequence#bpy.types.SceneSequence.scene"><literal classes="xref py py-class">SceneSequence.scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Sequences.new_scene" refuri="bpy.types.Sequences#bpy.types.Sequences.new_scene"><literal classes="xref py py-class">Sequences.new_scene</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Window.scene" refuri="bpy.types.Window#bpy.types.Window.scene"><literal classes="xref py py-class">Window.scene</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
