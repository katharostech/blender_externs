<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.ShaderFx.rst">
    <section ids="module-bpy.types shaderfx-bpy-struct" names="shaderfx(bpy_struct)">
        <title>ShaderFx(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class — <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <paragraph>subclasses —
            <reference internal="True" reftitle="bpy.types.ShaderFxBlur" refuri="bpy.types.ShaderFxBlur#bpy.types.ShaderFxBlur"><literal classes="xref py py-class">ShaderFxBlur</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxColorize" refuri="bpy.types.ShaderFxColorize#bpy.types.ShaderFxColorize"><literal classes="xref py py-class">ShaderFxColorize</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxFlip" refuri="bpy.types.ShaderFxFlip#bpy.types.ShaderFxFlip"><literal classes="xref py py-class">ShaderFxFlip</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxGlow" refuri="bpy.types.ShaderFxGlow#bpy.types.ShaderFxGlow"><literal classes="xref py py-class">ShaderFxGlow</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxLight" refuri="bpy.types.ShaderFxLight#bpy.types.ShaderFxLight"><literal classes="xref py py-class">ShaderFxLight</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxPixel" refuri="bpy.types.ShaderFxPixel#bpy.types.ShaderFxPixel"><literal classes="xref py py-class">ShaderFxPixel</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxRim" refuri="bpy.types.ShaderFxRim#bpy.types.ShaderFxRim"><literal classes="xref py py-class">ShaderFxRim</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxShadow" refuri="bpy.types.ShaderFxShadow#bpy.types.ShaderFxShadow"><literal classes="xref py py-class">ShaderFxShadow</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxSwirl" refuri="bpy.types.ShaderFxSwirl#bpy.types.ShaderFxSwirl"><literal classes="xref py py-class">ShaderFxSwirl</literal></reference>, <reference internal="True" reftitle="bpy.types.ShaderFxWave" refuri="bpy.types.ShaderFxWave#bpy.types.ShaderFxWave"><literal classes="xref py py-class">ShaderFxWave</literal></reference></paragraph>
        <index entries="['single',\ u'ShaderFx\ (class\ in\ bpy.types)',\ u'bpy.types.ShaderFx',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="ShaderFx" ids="bpy.types.ShaderFx" module="bpy.types" names="bpy.types.ShaderFx"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">ShaderFx</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Effect affecting the grease pencil object</paragraph>
                <index entries="['single',\ u'name\ (bpy.types.ShaderFx\ attribute)',\ u'bpy.types.ShaderFx.name',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.name" ids="bpy.types.ShaderFx.name" module="bpy.types" names="bpy.types.ShaderFx.name"><desc_name xml:space="preserve">name</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Effect name</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>string, default “”, (never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_expanded\ (bpy.types.ShaderFx\ attribute)',\ u'bpy.types.ShaderFx.show_expanded',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.show_expanded" ids="bpy.types.ShaderFx.show_expanded" module="bpy.types" names="bpy.types.ShaderFx.show_expanded"><desc_name xml:space="preserve">show_expanded</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Set effect expanded in the user interface</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_in_editmode\ (bpy.types.ShaderFx\ attribute)',\ u'bpy.types.ShaderFx.show_in_editmode',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.show_in_editmode" ids="bpy.types.ShaderFx.show_in_editmode" module="bpy.types" names="bpy.types.ShaderFx.show_in_editmode"><desc_name xml:space="preserve">show_in_editmode</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display effect in Edit mode</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_render\ (bpy.types.ShaderFx\ attribute)',\ u'bpy.types.ShaderFx.show_render',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.show_render" ids="bpy.types.ShaderFx.show_render" module="bpy.types" names="bpy.types.ShaderFx.show_render"><desc_name xml:space="preserve">show_render</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Use effect during render</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'show_viewport\ (bpy.types.ShaderFx\ attribute)',\ u'bpy.types.ShaderFx.show_viewport',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.show_viewport" ids="bpy.types.ShaderFx.show_viewport" module="bpy.types" names="bpy.types.ShaderFx.show_viewport"><desc_name xml:space="preserve">show_viewport</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Display effect in viewport</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'ShaderFx.type\ (in\ module\ bpy.types)',\ u'bpy.types.ShaderFx.type',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.type" ids="bpy.types.ShaderFx.type" module="bpy.types" names="bpy.types.ShaderFx.type"><desc_name xml:space="preserve">type</desc_name></desc_signature>
                    <desc_content>
                        <bullet_list bullet="*">
                            <list_item>
                                <paragraph><literal>FX_BLUR</literal> Blur, Apply Gaussian Blur to object.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_COLORIZE</literal> Colorize, Apply different tint effects.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_FLIP</literal> Flip, Flip image.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_GLOW</literal> Glow, Create a glow effect.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_LIGHT</literal> Light, Simulate ilumination.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_PIXEL</literal> Pixelate, Pixelate image.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_RIM</literal> Rim, Add a rim to the image.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_SHADOW</literal> Shadow, Create a shadow effect.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_SWIRL</literal> Swirl, Create a rotation distortion.</paragraph>
                            </list_item>
                            <list_item>
                                <paragraph><literal>FX_WAVE</literal> Wave Distortion, Apply sinusoidal deformation.</paragraph>
                            </list_item>
                        </bullet_list>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>enum in [‘FX_BLUR’, ‘FX_COLORIZE’, ‘FX_FLIP’, ‘FX_GLOW’, ‘FX_LIGHT’, ‘FX_PIXEL’, ‘FX_RIM’, ‘FX_SHADOW’, ‘FX_SWIRL’, ‘FX_WAVE’], default ‘FX_BLUR’, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.ShaderFx\ class\ method)',\ u'bpy.types.ShaderFx.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.bl_rna_get_subclass" ids="bpy.types.ShaderFx.bl_rna_get_subclass" module="bpy.types" names="bpy.types.ShaderFx.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.ShaderFx\ class\ method)',\ u'bpy.types.ShaderFx.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="ShaderFx" first="False" fullname="ShaderFx.bl_rna_get_subclass_py" ids="bpy.types.ShaderFx.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.ShaderFx.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) – The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Object.shader_effects" refuri="bpy.types.Object#bpy.types.Object.shader_effects"><literal classes="xref py py-class">Object.shader_effects</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectShaderFx.new" refuri="bpy.types.ObjectShaderFx#bpy.types.ObjectShaderFx.new"><literal classes="xref py py-class">ObjectShaderFx.new</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.ObjectShaderFx.remove" refuri="bpy.types.ObjectShaderFx#bpy.types.ObjectShaderFx.remove"><literal classes="xref py py-class">ObjectShaderFx.remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.UILayout.template_shaderfx" refuri="bpy.types.UILayout#bpy.types.UILayout.template_shaderfx"><literal classes="xref py py-class">UILayout.template_shaderfx</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
