<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.14 -->
<document source="/home/zicklag/git/other/blender/doc/python_api/sphinx-in/bpy.types.RigidBodyWorld.rst">
    <section ids="module-bpy.types rigidbodyworld-bpy-struct" names="rigidbodyworld(bpy_struct)">
        <title>RigidBodyWorld(bpy_struct)</title>
        <index entries="['single',\ u'bpy.types\ (module)',\ u'module-bpy.types',\ '',\ None]"></index>
        <paragraph>base class â€” <reference internal="True" reftitle="bpy.types.bpy_struct" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct"><literal classes="xref py py-class">bpy_struct</literal></reference></paragraph>
        <index entries="['single',\ u'RigidBodyWorld\ (class\ in\ bpy.types)',\ u'bpy.types.RigidBodyWorld',\ '',\ None]"></index>
        <desc desctype="class" domain="py" noindex="False" objtype="class">
            <desc_signature class="" first="False" fullname="RigidBodyWorld" ids="bpy.types.RigidBodyWorld" module="bpy.types" names="bpy.types.RigidBodyWorld"><desc_annotation xml:space="preserve">class </desc_annotation><desc_addname xml:space="preserve">bpy.types.</desc_addname><desc_name xml:space="preserve">RigidBodyWorld</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">bpy_struct</desc_parameter></desc_parameterlist></desc_signature>
            <desc_content>
                <paragraph>Self-contained rigid body simulation environment and settings</paragraph>
                <index entries="['single',\ u'collection\ (bpy.types.RigidBodyWorld\ attribute)',\ u'bpy.types.RigidBodyWorld.collection',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.collection" ids="bpy.types.RigidBodyWorld.collection" module="bpy.types" names="bpy.types.RigidBodyWorld.collection"><desc_name xml:space="preserve">collection</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Collection containing objects participating in this simulation</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Collection" refuri="bpy.types.Collection#bpy.types.Collection"><literal classes="xref py py-class">Collection</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'constraints\ (bpy.types.RigidBodyWorld\ attribute)',\ u'bpy.types.RigidBodyWorld.constraints',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.constraints" ids="bpy.types.RigidBodyWorld.constraints" module="bpy.types" names="bpy.types.RigidBodyWorld.constraints"><desc_name xml:space="preserve">constraints</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Collection containing rigid body constraint objects</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Collection" refuri="bpy.types.Collection#bpy.types.Collection"><literal classes="xref py py-class">Collection</literal></reference></paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'RigidBodyWorld.effector_weights\ (in\ module\ bpy.types)',\ u'bpy.types.RigidBodyWorld.effector_weights',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.effector_weights" ids="bpy.types.RigidBodyWorld.effector_weights" module="bpy.types" names="bpy.types.RigidBodyWorld.effector_weights"><desc_name xml:space="preserve">effector_weights</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.EffectorWeights" refuri="bpy.types.EffectorWeights#bpy.types.EffectorWeights"><literal classes="xref py py-class">EffectorWeights</literal></reference>, (readonly)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'enabled\ (bpy.types.RigidBodyWorld\ attribute)',\ u'bpy.types.RigidBodyWorld.enabled',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.enabled" ids="bpy.types.RigidBodyWorld.enabled" module="bpy.types" names="bpy.types.RigidBodyWorld.enabled"><desc_name xml:space="preserve">enabled</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Simulation will be evaluated</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'RigidBodyWorld.point_cache\ (in\ module\ bpy.types)',\ u'bpy.types.RigidBodyWorld.point_cache',\ '',\ None]"></index>
                <desc desctype="data" domain="py" noindex="False" objtype="data">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.point_cache" ids="bpy.types.RigidBodyWorld.point_cache" module="bpy.types" names="bpy.types.RigidBodyWorld.point_cache"><desc_name xml:space="preserve">point_cache</desc_name></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.PointCache" refuri="bpy.types.PointCache#bpy.types.PointCache"><literal classes="xref py py-class">PointCache</literal></reference>, (readonly, never None)</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'solver_iterations\ (bpy.types.RigidBodyWorld\ attribute)',\ u'bpy.types.RigidBodyWorld.solver_iterations',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.solver_iterations" ids="bpy.types.RigidBodyWorld.solver_iterations" module="bpy.types" names="bpy.types.RigidBodyWorld.solver_iterations"><desc_name xml:space="preserve">solver_iterations</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of constraint solver iterations made per simulation step (higher values are more accurate but slower)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 1000], default 10</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'steps_per_second\ (bpy.types.RigidBodyWorld\ attribute)',\ u'bpy.types.RigidBodyWorld.steps_per_second',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.steps_per_second" ids="bpy.types.RigidBodyWorld.steps_per_second" module="bpy.types" names="bpy.types.RigidBodyWorld.steps_per_second"><desc_name xml:space="preserve">steps_per_second</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Number of simulation steps taken per second (higher values are more accurate but slower)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>int in [1, 32767], default 60</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'time_scale\ (bpy.types.RigidBodyWorld\ attribute)',\ u'bpy.types.RigidBodyWorld.time_scale',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.time_scale" ids="bpy.types.RigidBodyWorld.time_scale" module="bpy.types" names="bpy.types.RigidBodyWorld.time_scale"><desc_name xml:space="preserve">time_scale</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Change the speed of the simulation</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>float in [0, 100], default 1.0</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'use_split_impulse\ (bpy.types.RigidBodyWorld\ attribute)',\ u'bpy.types.RigidBodyWorld.use_split_impulse',\ '',\ None]"></index>
                <desc desctype="attribute" domain="py" noindex="False" objtype="attribute">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.use_split_impulse" ids="bpy.types.RigidBodyWorld.use_split_impulse" module="bpy.types" names="bpy.types.RigidBodyWorld.use_split_impulse"><desc_name xml:space="preserve">use_split_impulse</desc_name></desc_signature>
                    <desc_content>
                        <paragraph>Reduce extra velocity that can build up when objects collide (lowers simulation stability a little so use only when necessary)</paragraph>
                        <field_list>
                            <field>
                                <field_name>Type</field_name>
                                <field_body>
                                    <paragraph>boolean, default False</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'convex_sweep_test()\ (bpy.types.RigidBodyWorld\ method)',\ u'bpy.types.RigidBodyWorld.convex_sweep_test',\ '',\ None]"></index>
                <desc desctype="method" domain="py" noindex="False" objtype="method">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.convex_sweep_test" ids="bpy.types.RigidBodyWorld.convex_sweep_test" module="bpy.types" names="bpy.types.RigidBodyWorld.convex_sweep_test"><desc_name xml:space="preserve">convex_sweep_test</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">object</desc_parameter><desc_parameter xml:space="preserve">start</desc_parameter><desc_parameter xml:space="preserve">end</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <paragraph>Sweep test convex rigidbody against the current rigidbody world</paragraph>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">object</literal_strong> (<reference internal="True" reftitle="bpy.types.Object" refuri="bpy.types.Object#bpy.types.Object"><literal classes="xref py py-class">Object</literal></reference>, (never None)) â€“ Rigidbody object with a convex collision shape</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return (object_location, hitpoint, normal, has_hit)</field_name>
                                <field_body>
                                    <paragraph><title_reference>object_location</title_reference>, The hit location of this sweep test, float array of 3 items in [-inf, inf]</paragraph>
                                    <paragraph><title_reference>hitpoint</title_reference>, The hit location of this sweep test, float array of 3 items in [-inf, inf]</paragraph>
                                    <paragraph><title_reference>normal</title_reference>, The face normal at the sweep test hit location, float array of 3 items in [-inf, inf]</paragraph>
                                    <paragraph><title_reference>has_hit</title_reference>, If the function has found collision point, value is 1, otherwise 0, int in [-inf, inf]</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass()\ (bpy.types.RigidBodyWorld\ class\ method)',\ u'bpy.types.RigidBodyWorld.bl_rna_get_subclass',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.bl_rna_get_subclass" ids="bpy.types.RigidBodyWorld.bl_rna_get_subclass" module="bpy.types" names="bpy.types.RigidBodyWorld.bl_rna_get_subclass"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The RNA type or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph><reference internal="True" reftitle="bpy.types.Struct" refuri="bpy.types.Struct#bpy.types.Struct"><literal classes="xref py py-class">bpy.types.Struct</literal></reference> subclass</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
                <index entries="['single',\ u'bl_rna_get_subclass_py()\ (bpy.types.RigidBodyWorld\ class\ method)',\ u'bpy.types.RigidBodyWorld.bl_rna_get_subclass_py',\ '',\ None]"></index>
                <desc desctype="classmethod" domain="py" noindex="False" objtype="classmethod">
                    <desc_signature class="RigidBodyWorld" first="False" fullname="RigidBodyWorld.bl_rna_get_subclass_py" ids="bpy.types.RigidBodyWorld.bl_rna_get_subclass_py" module="bpy.types" names="bpy.types.RigidBodyWorld.bl_rna_get_subclass_py"><desc_annotation xml:space="preserve">classmethod </desc_annotation><desc_name xml:space="preserve">bl_rna_get_subclass_py</desc_name><desc_parameterlist xml:space="preserve"><desc_parameter xml:space="preserve">id</desc_parameter><desc_parameter xml:space="preserve">default=None</desc_parameter></desc_parameterlist></desc_signature>
                    <desc_content>
                        <field_list>
                            <field>
                                <field_name>Parameters</field_name>
                                <field_body>
                                    <paragraph><literal_strong refspecific="True">id</literal_strong> (<literal_emphasis>string</literal_emphasis>) â€“ The RNA type identifier.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Returns</field_name>
                                <field_body>
                                    <paragraph>The class or default when not found.</paragraph>
                                </field_body>
                            </field>
                            <field>
                                <field_name>Return type</field_name>
                                <field_body>
                                    <paragraph>type</paragraph>
                                </field_body>
                            </field>
                        </field_list>
                    </desc_content>
                </desc>
            </desc_content>
        </desc>
        <rubric>Inherited Properties</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.id_data" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.id_data"><literal classes="xref py py-class">bpy_struct.id_data</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>Inherited Functions</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.as_pointer" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.as_pointer"><literal classes="xref py py-class">bpy_struct.as_pointer</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_add" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_add"><literal classes="xref py py-class">bpy_struct.driver_add</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.driver_remove" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.driver_remove"><literal classes="xref py py-class">bpy_struct.driver_remove</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.get" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.get"><literal classes="xref py py-class">bpy_struct.get</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_hidden" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_hidden"><literal classes="xref py py-class">bpy_struct.is_property_hidden</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_overridable_static" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_overridable_static"><literal classes="xref py py-class">bpy_struct.is_property_overridable_static</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_readonly" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_readonly"><literal classes="xref py py-class">bpy_struct.is_property_readonly</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.is_property_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.is_property_set"><literal classes="xref py py-class">bpy_struct.is_property_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.items" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.items"><literal classes="xref py py-class">bpy_struct.items</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_delete" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_delete"><literal classes="xref py py-class">bpy_struct.keyframe_delete</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keyframe_insert" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keyframe_insert"><literal classes="xref py py-class">bpy_struct.keyframe_insert</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.keys" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.keys"><literal classes="xref py py-class">bpy_struct.keys</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_from_id" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_from_id"><literal classes="xref py py-class">bpy_struct.path_from_id</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.path_resolve" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.path_resolve"><literal classes="xref py py-class">bpy_struct.path_resolve</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.pop" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.pop"><literal classes="xref py py-class">bpy_struct.pop</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_overridable_static_set" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_overridable_static_set"><literal classes="xref py py-class">bpy_struct.property_overridable_static_set</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.property_unset" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.property_unset"><literal classes="xref py py-class">bpy_struct.property_unset</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.type_recast" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.type_recast"><literal classes="xref py py-class">bpy_struct.type_recast</literal></reference></paragraph>
                    </list_item>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.bpy_struct.values" refuri="bpy.types.bpy_struct#bpy.types.bpy_struct.values"><literal classes="xref py py-class">bpy_struct.values</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
        </hlist>
        <rubric>References</rubric>
        <hlist>
            <hlistcol>
                <bullet_list>
                    <list_item>
                        <paragraph><reference internal="True" reftitle="bpy.types.Scene.rigidbody_world" refuri="bpy.types.Scene#bpy.types.Scene.rigidbody_world"><literal classes="xref py py-class">Scene.rigidbody_world</literal></reference></paragraph>
                    </list_item>
                </bullet_list>
            </hlistcol>
            <hlistcol>
                <bullet_list>
                </bullet_list>
            </hlistcol>
        </hlist>
    </section>
</document>
