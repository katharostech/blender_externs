package bpy.ops.export_scene;
/**
	Export Scene Operators
**/
@:pythonImport("bpy.ops.export_scene") extern class Module {
	/**
		Write a FBX file
		@param filepath File Path, Filepath used for exporting the file — string, (optional, never None)
		@param check_existing Check Existing, Check and warn on overwriting existing files — boolean, (optional)
		@param filter_glob filter_glob — string, (optional, never None)
		@param ui_tab ui_tab, Export options categoriesMAIN Main, Main basic settings.GEOMETRY Geometries, Geometry-related settings.ARMATURE Armatures, Armature-related settings.ANIMATION Animation, Animation-related settings. — enum in ['MAIN', 'GEOMETRY', 'ARMATURE', 'ANIMATION'], (optional)
		@param use_selection Selected Objects, Export selected and visible objects only — boolean, (optional)
		@param use_active_collection Active Collection, Export only objects from the active collection (and its children) — boolean, (optional)
		@param global_scale Scale, Scale all data (Some importers do not support scaled armatures!) — float in [0.001, 1000], (optional)
		@param apply_unit_scale Apply Unit, Take into account current Blender units settings (if unset, raw Blender Units values are used as-is) — boolean, (optional)
		@param apply_scale_options Apply Scalings, How to apply custom and units scalings in generated FBX file (Blender uses FBX scale to detect units on import, but many other applications do not handle the same way)FBX_SCALE_NONE All Local, Apply custom scaling and units scaling to each object transformation, FBX scale remains at 1.0.FBX_SCALE_UNITS FBX Units Scale, Apply custom scaling to each object transformation, and units scaling to FBX scale.FBX_SCALE_CUSTOM FBX Custom Scale, Apply custom scaling to FBX scale, and units scaling to each object transformation.FBX_SCALE_ALL FBX All, Apply custom scaling and units scaling to FBX scale. — enum in ['FBX_SCALE_NONE', 'FBX_SCALE_UNITS', 'FBX_SCALE_CUSTOM', 'FBX_SCALE_ALL'], (optional)
		@param bake_space_transform !EXPERIMENTAL! Apply Transform, Bake space transform into object data, avoids getting unwanted rotations to objects when target space is not aligned with Blender’s space (WARNING! experimental option, use at own risks, known broken with armatures/animations) — boolean, (optional)
		@param object_types Object Types, Which kind of object to exportEMPTY Empty.CAMERA Camera.LIGHT Lamp.ARMATURE Armature, WARNING: not supported in dupli/group instances.MESH Mesh.OTHER Other, Other geometry types, like curve, metaball, etc. (converted to meshes). — enum set in {'EMPTY', 'CAMERA', 'LIGHT', 'ARMATURE', 'MESH', 'OTHER'}, (optional)
		@param use_mesh_modifiers Apply Modifiers, Apply modifiers to mesh objects (except Armature ones) - WARNING: prevents exporting shape keys — boolean, (optional)
		@param use_mesh_modifiers_render Use Modifiers Render Setting, Use render settings when applying modifiers to mesh objects — boolean, (optional)
		@param mesh_smooth_type Smoothing, Export smoothing information (prefer ‘Normals Only’ option if your target importer understand split normals)OFF Normals Only, Export only normals instead of writing edge or face smoothing data.FACE Face, Write face smoothing.EDGE Edge, Write edge smoothing. — enum in ['OFF', 'FACE', 'EDGE'], (optional)
		@param use_mesh_edges Loose Edges, Export loose edges (as two-vertices polygons) — boolean, (optional)
		@param use_tspace Tangent Space, Add binormal and tangent vectors, together with normal they form the tangent space (will only work correctly with tris/quads only meshes!) — boolean, (optional)
		@param use_custom_props Custom Properties, Export custom properties — boolean, (optional)
		@param add_leaf_bones Add Leaf Bones, Append a final bone to the end of each chain to specify last bone length (use this when you intend to edit the armature from exported data) — boolean, (optional)
		@param primary_bone_axis Primary Bone Axis — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param secondary_bone_axis Secondary Bone Axis — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param use_armature_deform_only Only Deform Bones, Only write deforming bones (and non-deforming ones when they have deforming children) — boolean, (optional)
		@param armature_nodetype Armature FBXNode Type, FBX type of node (object) used to represent Blender’s armatures (use Null one unless you experience issues with other app, other choices may no import back perfectly in Blender…)NULL Null, ‘Null’ FBX node, similar to Blender’s Empty (default).ROOT Root, ‘Root’ FBX node, supposed to be the root of chains of bones….LIMBNODE LimbNode, ‘LimbNode’ FBX node, a regular joint between two bones…. — enum in ['NULL', 'ROOT', 'LIMBNODE'], (optional)
		@param bake_anim Baked Animation, Export baked keyframe animation — boolean, (optional)
		@param bake_anim_use_all_bones Key All Bones, Force exporting at least one key of animation for all bones (needed with some target applications, like UE4) — boolean, (optional)
		@param bake_anim_use_nla_strips NLA Strips, Export each non-muted NLA strip as a separated FBX’s AnimStack, if any, instead of global scene animation — boolean, (optional)
		@param bake_anim_use_all_actions All Actions, Export each action as a separated FBX’s AnimStack, instead of global scene animation (note that animated objects will get all actions compatible with them, others will get no animation at all) — boolean, (optional)
		@param bake_anim_force_startend_keying Force Start/End Keying, Always add a keyframe at start and end of actions for animated channels — boolean, (optional)
		@param bake_anim_step Sampling Rate, How often to evaluate animated values (in frames) — float in [0.01, 100], (optional)
		@param bake_anim_simplify_factor Simplify, How much to simplify baked values (0.0 to disable, the higher the more simplified) — float in [0, 100], (optional)
		@param path_mode Path Mode, Method used to reference pathsAUTO Auto, Use Relative paths with subdirectories only.ABSOLUTE Absolute, Always write absolute paths.RELATIVE Relative, Always write relative paths (where possible).MATCH Match, Match Absolute/Relative setting with input path.STRIP Strip Path, Filename only.COPY Copy, Copy the file to the destination path (or subdirectory). — enum in ['AUTO', 'ABSOLUTE', 'RELATIVE', 'MATCH', 'STRIP', 'COPY'], (optional)
		@param embed_textures Embed Textures, Embed textures in FBX binary file (only for “Copy” path mode!) — boolean, (optional)
		@param batch_mode Batch ModeOFF Off, Active scene to file.SCENE Scene, Each scene as a file.COLLECTION Collection, Each collection (data-block ones) as a file, does not include content of children collections.SCENE_COLLECTION Scene Collections, Each collection (including master, non-data-block ones) of each scene as a file, including content from children collections.ACTIVE_SCENE_COLLECTION Active Scene Collections, Each collection (including master, non-data-block one) of the active scene as a file, including content from children collections. — enum in ['OFF', 'SCENE', 'COLLECTION', 'SCENE_COLLECTION', 'ACTIVE_SCENE_COLLECTION'], (optional)
		@param use_batch_own_dir Batch Own Dir, Create a dir for each exported file — boolean, (optional)
		@param use_metadata Use Metadata — boolean, (optional)
		@param axis_forward Forward — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param axis_up Up — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
	**/
	static function fbx(filepath:String, check_existing:Bool, filter_glob:String, ui_tab:bpy.ops.export_scene.Export_scene.Enum1, use_selection:Bool, use_active_collection:Bool, global_scale:Float, apply_unit_scale:Bool, apply_scale_options:bpy.ops.export_scene.Export_scene.Enum2, bake_space_transform:Bool, object_types:Dynamic, use_mesh_modifiers:Bool, use_mesh_modifiers_render:Bool, mesh_smooth_type:bpy.ops.export_scene.Export_scene.Enum3, use_mesh_edges:Bool, use_tspace:Bool, use_custom_props:Bool, add_leaf_bones:Bool, primary_bone_axis:bpy.ops.export_scene.Export_scene.Enum4, secondary_bone_axis:bpy.ops.export_scene.Export_scene.Enum5, use_armature_deform_only:Bool, armature_nodetype:bpy.ops.export_scene.Export_scene.Enum6, bake_anim:Bool, bake_anim_use_all_bones:Bool, bake_anim_use_nla_strips:Bool, bake_anim_use_all_actions:Bool, bake_anim_force_startend_keying:Bool, bake_anim_step:Float, bake_anim_simplify_factor:Float, path_mode:bpy.ops.export_scene.Export_scene.Enum7, embed_textures:Bool, batch_mode:bpy.ops.export_scene.Export_scene.Enum8, use_batch_own_dir:Bool, use_metadata:Bool, axis_forward:bpy.ops.export_scene.Export_scene.Enum9, axis_up:bpy.ops.export_scene.Export_scene.Enum10):Void;
	/**
		Export scene as binary glTF 2.0 file
		@param export_copyright Copyright, Legal rights and conditions for the model — string, (optional, never None)
		@param export_embed_buffers Embed Buffers, Buffers (mesh, animation, and optionally image data) are embedded in the asset, rather than in separate (.bin) files. Total size will be slightly larger than when embedded within a  binary glTF (.glb) file — boolean, (optional)
		@param export_embed_images Embed Images, Images are embedded in asset buffers, rather than in separate image files — boolean, (optional)
		@param export_strip Strip Whitespace, Makes JSON portion of export more compact, but harder to read and edit by hand — boolean, (optional)
		@param export_indices Maximum Indices Type, Largest data type allowed for indices — enum in ['UNSIGNED_BYTE', 'UNSIGNED_SHORT', 'UNSIGNED_INT'], (optional)
		@param export_force_indices Force Maximum Indices, Always use the selected indices data type, even if the size of the mesh does not require it — boolean, (optional)
		@param export_texcoords UVs, Export UVs (texture coordinates) with meshes — boolean, (optional)
		@param export_normals Normals, Export vertex normals with meshes — boolean, (optional)
		@param export_tangents Tangents, Export vertex tangents with meshes — boolean, (optional)
		@param export_materials Materials, Export materials — boolean, (optional)
		@param export_colors Vertex Colors, Export vertex colors with meshes — boolean, (optional)
		@param export_cameras Cameras, Export cameras — boolean, (optional)
		@param export_camera_infinite Infinite Perspective, Sets perspective cameras to use infinite perspective projections — boolean, (optional)
		@param export_selected Selected Objects, Export selected objects only — boolean, (optional)
		@param export_extras Custom Properties, Export custom properties as glTF extras — boolean, (optional)
		@param export_yup +Y Up, Export using glTF convention, +Y up — boolean, (optional)
		@param export_apply Apply Modifiers, Apply modifiers to mesh objects — boolean, (optional)
		@param export_animations Animations, Exports active actions and NLA tracks as glTF animations — boolean, (optional)
		@param export_frame_range Limit to Playback Range, Clips animations to selected playback range — boolean, (optional)
		@param export_frame_step Sampling Rate, How often to evaluate animated values (in frames) — int in [1, 120], (optional)
		@param export_move_keyframes Keyframes Start at 0, Keyframes start at 0, instead of 1 — boolean, (optional)
		@param export_force_sampling Always Sample Animations, Apply sampling to all animations — boolean, (optional)
		@param export_current_frame Use Current Frame, Export the scene in the current animation frame — boolean, (optional)
		@param export_skins Skinning, Export skinning (armature) data — boolean, (optional)
		@param export_bake_skins Bake Skinning Constraints, Apply skinning constraints to armatures — boolean, (optional)
		@param export_all_influences Include All Bone Influences, Allow &gt;4 joint vertex influences. Models may appear incorrectly in many viewers — boolean, (optional)
		@param export_morph Shape Keys, Export shape keys (morph targets) — boolean, (optional)
		@param export_morph_normal Shape Key Normals, Export vertex normals with shape keys (morph targets) — boolean, (optional)
		@param export_morph_tangent Shape Key Tangents, Export vertex tangents with shape keys (morph targets) — boolean, (optional)
		@param export_lights Punctual Lights, Export directional, point, and spot lights. Uses  “KHR_lights_punctual” glTF extension — boolean, (optional)
		@param export_texture_transform Texture Transforms, Export texture or UV position, rotation, and scale. Uses “KHR_texture_transform” glTF extension — boolean, (optional)
		@param export_displacement Displacement Textures (EXPERIMENTAL), EXPERIMENTAL: Export displacement textures. Uses incomplete “KHR_materials_displacement” glTF extension — boolean, (optional)
		@param will_save_settings will_save_settings — boolean, (optional)
		@param filepath File Path, Filepath used for exporting the file — string, (optional, never None)
		@param check_existing Check Existing, Check and warn on overwriting existing files — boolean, (optional)
		@param axis_forward Forward — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param axis_up Up — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param filter_glob filter_glob — string, (optional, never None)
	**/
	static function glb(export_copyright:String, export_embed_buffers:Bool, export_embed_images:Bool, export_strip:Bool, export_indices:bpy.ops.export_scene.Export_scene.Enum11, export_force_indices:Bool, export_texcoords:Bool, export_normals:Bool, export_tangents:Bool, export_materials:Bool, export_colors:Bool, export_cameras:Bool, export_camera_infinite:Bool, export_selected:Bool, export_extras:Bool, export_yup:Bool, export_apply:Bool, export_animations:Bool, export_frame_range:Bool, export_frame_step:Int, export_move_keyframes:Bool, export_force_sampling:Bool, export_current_frame:Bool, export_skins:Bool, export_bake_skins:Bool, export_all_influences:Bool, export_morph:Bool, export_morph_normal:Bool, export_morph_tangent:Bool, export_lights:Bool, export_texture_transform:Bool, export_displacement:Bool, will_save_settings:Bool, filepath:String, check_existing:Bool, axis_forward:bpy.ops.export_scene.Export_scene.Enum12, axis_up:bpy.ops.export_scene.Export_scene.Enum13, filter_glob:String):Void;
	/**
		Export scene as glTF 2.0 file
		@param export_copyright Copyright, Legal rights and conditions for the model — string, (optional, never None)
		@param export_embed_buffers Embed Buffers, Buffers (mesh, animation, and optionally image data) are embedded in the asset, rather than in separate (.bin) files. Total size will be slightly larger than when embedded within a  binary glTF (.glb) file — boolean, (optional)
		@param export_embed_images Embed Images, Images are embedded in asset buffers, rather than in separate image files — boolean, (optional)
		@param export_strip Strip Whitespace, Makes JSON portion of export more compact, but harder to read and edit by hand — boolean, (optional)
		@param export_indices Maximum Indices Type, Largest data type allowed for indices — enum in ['UNSIGNED_BYTE', 'UNSIGNED_SHORT', 'UNSIGNED_INT'], (optional)
		@param export_force_indices Force Maximum Indices, Always use the selected indices data type, even if the size of the mesh does not require it — boolean, (optional)
		@param export_texcoords UVs, Export UVs (texture coordinates) with meshes — boolean, (optional)
		@param export_normals Normals, Export vertex normals with meshes — boolean, (optional)
		@param export_tangents Tangents, Export vertex tangents with meshes — boolean, (optional)
		@param export_materials Materials, Export materials — boolean, (optional)
		@param export_colors Vertex Colors, Export vertex colors with meshes — boolean, (optional)
		@param export_cameras Cameras, Export cameras — boolean, (optional)
		@param export_camera_infinite Infinite Perspective, Sets perspective cameras to use infinite perspective projections — boolean, (optional)
		@param export_selected Selected Objects, Export selected objects only — boolean, (optional)
		@param export_extras Custom Properties, Export custom properties as glTF extras — boolean, (optional)
		@param export_yup +Y Up, Export using glTF convention, +Y up — boolean, (optional)
		@param export_apply Apply Modifiers, Apply modifiers to mesh objects — boolean, (optional)
		@param export_animations Animations, Exports active actions and NLA tracks as glTF animations — boolean, (optional)
		@param export_frame_range Limit to Playback Range, Clips animations to selected playback range — boolean, (optional)
		@param export_frame_step Sampling Rate, How often to evaluate animated values (in frames) — int in [1, 120], (optional)
		@param export_move_keyframes Keyframes Start at 0, Keyframes start at 0, instead of 1 — boolean, (optional)
		@param export_force_sampling Always Sample Animations, Apply sampling to all animations — boolean, (optional)
		@param export_current_frame Use Current Frame, Export the scene in the current animation frame — boolean, (optional)
		@param export_skins Skinning, Export skinning (armature) data — boolean, (optional)
		@param export_bake_skins Bake Skinning Constraints, Apply skinning constraints to armatures — boolean, (optional)
		@param export_all_influences Include All Bone Influences, Allow &gt;4 joint vertex influences. Models may appear incorrectly in many viewers — boolean, (optional)
		@param export_morph Shape Keys, Export shape keys (morph targets) — boolean, (optional)
		@param export_morph_normal Shape Key Normals, Export vertex normals with shape keys (morph targets) — boolean, (optional)
		@param export_morph_tangent Shape Key Tangents, Export vertex tangents with shape keys (morph targets) — boolean, (optional)
		@param export_lights Punctual Lights, Export directional, point, and spot lights. Uses  “KHR_lights_punctual” glTF extension — boolean, (optional)
		@param export_texture_transform Texture Transforms, Export texture or UV position, rotation, and scale. Uses “KHR_texture_transform” glTF extension — boolean, (optional)
		@param export_displacement Displacement Textures (EXPERIMENTAL), EXPERIMENTAL: Export displacement textures. Uses incomplete “KHR_materials_displacement” glTF extension — boolean, (optional)
		@param will_save_settings will_save_settings — boolean, (optional)
		@param filepath File Path, Filepath used for exporting the file — string, (optional, never None)
		@param check_existing Check Existing, Check and warn on overwriting existing files — boolean, (optional)
		@param axis_forward Forward — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param axis_up Up — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param filter_glob filter_glob — string, (optional, never None)
	**/
	static function gltf(export_copyright:String, export_embed_buffers:Bool, export_embed_images:Bool, export_strip:Bool, export_indices:bpy.ops.export_scene.Export_scene.Enum14, export_force_indices:Bool, export_texcoords:Bool, export_normals:Bool, export_tangents:Bool, export_materials:Bool, export_colors:Bool, export_cameras:Bool, export_camera_infinite:Bool, export_selected:Bool, export_extras:Bool, export_yup:Bool, export_apply:Bool, export_animations:Bool, export_frame_range:Bool, export_frame_step:Int, export_move_keyframes:Bool, export_force_sampling:Bool, export_current_frame:Bool, export_skins:Bool, export_bake_skins:Bool, export_all_influences:Bool, export_morph:Bool, export_morph_normal:Bool, export_morph_tangent:Bool, export_lights:Bool, export_texture_transform:Bool, export_displacement:Bool, will_save_settings:Bool, filepath:String, check_existing:Bool, axis_forward:bpy.ops.export_scene.Export_scene.Enum15, axis_up:bpy.ops.export_scene.Export_scene.Enum16, filter_glob:String):Void;
	/**
		Save a Wavefront OBJ File
		@param filepath File Path, Filepath used for exporting the file — string, (optional, never None)
		@param check_existing Check Existing, Check and warn on overwriting existing files — boolean, (optional)
		@param filter_glob filter_glob — string, (optional, never None)
		@param use_selection Selection Only, Export selected objects only — boolean, (optional)
		@param use_animation Animation, Write out an OBJ for each frame — boolean, (optional)
		@param use_mesh_modifiers Apply Modifiers, Apply modifiers — boolean, (optional)
		@param use_mesh_modifiers_render Use Modifiers Render Settings, Use render settings when applying modifiers to mesh objects — boolean, (optional)
		@param use_edges Include Edges — boolean, (optional)
		@param use_smooth_groups Smooth Groups, Write sharp edges as smooth groups — boolean, (optional)
		@param use_smooth_groups_bitflags Bitflag Smooth Groups, Same as ‘Smooth Groups’, but generate smooth groups IDs as bitflags (produces at most 32 different smooth groups, usually much less) — boolean, (optional)
		@param use_normals Write Normals, Export one normal per vertex and per face, to represent flat faces and sharp edges — boolean, (optional)
		@param use_uvs Include UVs, Write out the active UV coordinates — boolean, (optional)
		@param use_materials Write Materials, Write out the MTL file — boolean, (optional)
		@param use_triangles Triangulate Faces, Convert all faces to triangles — boolean, (optional)
		@param use_nurbs Write Nurbs, Write nurbs curves as OBJ nurbs rather than converting to geometry — boolean, (optional)
		@param use_vertex_groups Polygroups — boolean, (optional)
		@param use_blen_objects Objects as OBJ Objects — boolean, (optional)
		@param group_by_object Objects as OBJ Groups — boolean, (optional)
		@param group_by_material Material Groups — boolean, (optional)
		@param keep_vertex_order Keep Vertex Order — boolean, (optional)
		@param global_scale Scale — float in [0.01, 1000], (optional)
		@param path_mode Path Mode, Method used to reference pathsAUTO Auto, Use Relative paths with subdirectories only.ABSOLUTE Absolute, Always write absolute paths.RELATIVE Relative, Always write relative paths (where possible).MATCH Match, Match Absolute/Relative setting with input path.STRIP Strip Path, Filename only.COPY Copy, Copy the file to the destination path (or subdirectory). — enum in ['AUTO', 'ABSOLUTE', 'RELATIVE', 'MATCH', 'STRIP', 'COPY'], (optional)
		@param axis_forward Forward — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
		@param axis_up Up — enum in ['X', 'Y', 'Z', '-X', '-Y', '-Z'], (optional)
	**/
	static function obj(filepath:String, check_existing:Bool, filter_glob:String, use_selection:Bool, use_animation:Bool, use_mesh_modifiers:Bool, use_mesh_modifiers_render:Bool, use_edges:Bool, use_smooth_groups:Bool, use_smooth_groups_bitflags:Bool, use_normals:Bool, use_uvs:Bool, use_materials:Bool, use_triangles:Bool, use_nurbs:Bool, use_vertex_groups:Bool, use_blen_objects:Bool, group_by_object:Bool, group_by_material:Bool, keep_vertex_order:Bool, global_scale:Float, path_mode:bpy.ops.export_scene.Export_scene.Enum17, axis_forward:bpy.ops.export_scene.Export_scene.Enum18, axis_up:bpy.ops.export_scene.Export_scene.Enum19):Void;
}